{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 title : My Blog :=) author : baijiu.yec email : joneyee22@qq.com My Open Source Repo \u00b6 Fresno A Disruptor + Redis Queue Getting started Wula A Strategy Route Framework Getting started","title":"Welcome"},{"location":"#welcome","text":"title : My Blog :=) author : baijiu.yec email : joneyee22@qq.com","title":"Welcome"},{"location":"#my-open-source-repo","text":"Fresno A Disruptor + Redis Queue Getting started Wula A Strategy Route Framework Getting started","title":"My Open Source Repo"},{"location":"about/","text":"\u65f6\u5149\u8f74 \u00b6 2022-04-26 18:23 \u00b6 migrate to https://squidfunk.github.io/mkdocs-material/ 2018-08-10 10:01 \u00b6 migrate to https://my.oschina.net/twen 2016-03-02 23:11 \u00b6 \u820d\u5f03\u591a\u8bf4\uff0c\u4f7f\u7528\u7684\u9ed8\u8ba4\u7684\u8bc4\u8bba\u6a21\u5757\u5e76\u66f4\u65b0\u5230MUI\u98ce\u683c 2015-09-01 21:50 \u00b6 \u66f4\u65b0\u4e3b\u9898twen2\uff0c\u65b0\u7684Material Design\u98ce\u683c Powered By MUI v0.1.21 Github\u8f93\u51fa 1.0 \u7248\u672c 2015-02-10 15:30 \u00b6 \u4e4b\u524d\u5728GitHub Pages\u4e0a\u5efa\u4e86\u7528Jekyll\u751f\u6210\u7684\u9759\u6001\u7f51\u9875\u65b9\u5f0f\u7684\u535a\u5ba2\uff0c\u6bcf\u6b21\u5199\u6587\u7ae0\u5fc5\u987b\u5efa\u4e00\u4e2amarkdown\u7684\u6587\u4ef6\uff0c\u7528\u4e45\u96be\u514d\u611f\u5230\u7e41\u7410\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6587\u7ae0\u4ee5\u9759\u6001\u7684\u65b9\u5f0f\u663e\u793a\uff0c\u6ca1\u6709\u6570\u636e\u6301\u4e45\u5316\uff0c\u5347\u7ea7\u535a\u5ba2\u6570\u636e\u65e0\u6cd5\u590d\u7528\u3002\u524d\u6bb5\u65f6\u95f4\u5076\u7136\u89c1\u5230 Typecho \uff0c\u7ba1\u7406\u754c\u9762\u6e05\u723d\u7b80\u6d01\uff0c\u4e2a\u4eba\u5f88\u559c\u6b22\u8fd9\u79cd\u98ce\u683c\uff0c\u5c0f\u800c\u7f8e\u3002\u540c\u65f6\u963f\u91cc\u4e91\u63a8\u51fa\u514d\u8d39\u7684\u7a7a\u95f4\uff0c\u7533\u8bf7\u4e86\u4e24\u5e74\uff0c\u4e70\u4e86twentwo.cn\u7684\u57df\u540d\u5f88\u5feb\u5c31\u642d\u5efa\u6210\u529f\uff01\u82b1\u4e86\u70b9\u65f6\u95f4\u91cd\u65b0\u6539\u4e86\u754c\u9762\u3002 Thanks\uff01\u611f\u8c22\u4ee5\u4e0b\u5f00\u6e90\u9879\u76ee Bootstrap Material Material\u98ce\u683c\u7684Bootstrap\uff01 Scrolling Nav \u968f\u9f20\u6807\u6eda\u52a8\u53d8\u5316\u7684\u5bfc\u822a\u680f Thanks to Typecho. \u7f51\u7ad9\u5728PC\u548c\u79fb\u52a8\u7aef\u4e0a\u7684\u8868\u73b0 \u00b6 1.PC\u7aef 2. \u79fb\u52a8\u7aef","title":"\u65f6\u5149\u8f74"},{"location":"about/#_1","text":"","title":"\u65f6\u5149\u8f74"},{"location":"about/#2022-04-26-1823","text":"migrate to https://squidfunk.github.io/mkdocs-material/","title":"2022-04-26 18:23"},{"location":"about/#2018-08-10-1001","text":"migrate to https://my.oschina.net/twen","title":"2018-08-10 10:01"},{"location":"about/#2016-03-02-2311","text":"\u820d\u5f03\u591a\u8bf4\uff0c\u4f7f\u7528\u7684\u9ed8\u8ba4\u7684\u8bc4\u8bba\u6a21\u5757\u5e76\u66f4\u65b0\u5230MUI\u98ce\u683c","title":"2016-03-02 23:11"},{"location":"about/#2015-09-01-2150","text":"\u66f4\u65b0\u4e3b\u9898twen2\uff0c\u65b0\u7684Material Design\u98ce\u683c Powered By MUI v0.1.21 Github\u8f93\u51fa 1.0 \u7248\u672c","title":"2015-09-01 21:50"},{"location":"about/#2015-02-10-1530","text":"\u4e4b\u524d\u5728GitHub Pages\u4e0a\u5efa\u4e86\u7528Jekyll\u751f\u6210\u7684\u9759\u6001\u7f51\u9875\u65b9\u5f0f\u7684\u535a\u5ba2\uff0c\u6bcf\u6b21\u5199\u6587\u7ae0\u5fc5\u987b\u5efa\u4e00\u4e2amarkdown\u7684\u6587\u4ef6\uff0c\u7528\u4e45\u96be\u514d\u611f\u5230\u7e41\u7410\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6587\u7ae0\u4ee5\u9759\u6001\u7684\u65b9\u5f0f\u663e\u793a\uff0c\u6ca1\u6709\u6570\u636e\u6301\u4e45\u5316\uff0c\u5347\u7ea7\u535a\u5ba2\u6570\u636e\u65e0\u6cd5\u590d\u7528\u3002\u524d\u6bb5\u65f6\u95f4\u5076\u7136\u89c1\u5230 Typecho \uff0c\u7ba1\u7406\u754c\u9762\u6e05\u723d\u7b80\u6d01\uff0c\u4e2a\u4eba\u5f88\u559c\u6b22\u8fd9\u79cd\u98ce\u683c\uff0c\u5c0f\u800c\u7f8e\u3002\u540c\u65f6\u963f\u91cc\u4e91\u63a8\u51fa\u514d\u8d39\u7684\u7a7a\u95f4\uff0c\u7533\u8bf7\u4e86\u4e24\u5e74\uff0c\u4e70\u4e86twentwo.cn\u7684\u57df\u540d\u5f88\u5feb\u5c31\u642d\u5efa\u6210\u529f\uff01\u82b1\u4e86\u70b9\u65f6\u95f4\u91cd\u65b0\u6539\u4e86\u754c\u9762\u3002 Thanks\uff01\u611f\u8c22\u4ee5\u4e0b\u5f00\u6e90\u9879\u76ee Bootstrap Material Material\u98ce\u683c\u7684Bootstrap\uff01 Scrolling Nav \u968f\u9f20\u6807\u6eda\u52a8\u53d8\u5316\u7684\u5bfc\u822a\u680f Thanks to Typecho.","title":"2015-02-10 15:30"},{"location":"about/#pc","text":"1.PC\u7aef 2. \u79fb\u52a8\u7aef","title":"\u7f51\u7ad9\u5728PC\u548c\u79fb\u52a8\u7aef\u4e0a\u7684\u8868\u73b0"},{"location":"blog/2015/china-telecom-router-root/","text":"\u7535\u4fe1\u8def\u7531\u5668\u4e0a\u6d77\u8d1d\u5c14E8C GPON HGW\uff08I-240W-Q\uff09-\u83b7\u53d6\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801-\u7834\u89e3wifi\u65e0\u7ebf\u4e0a\u7f51-\u4e8c\u7ea7\u8def\u7531 \u00b6 2015-03-04 20:34:00 \u5bb6\u91cc\u88c5\u4e8612M\u7684\u5149\u7ea4\uff0c\u6362\u4e86\u4e00\u4e2a\u4e0a\u6d77\u8d1d\u5c14\u7684I-240W-Q\u7684\u5e26\u65e0\u7ebf\u7684\u7535\u4fe1\u732b\uff0c\u5de5\u4f5c\u4eba\u5458\u53ea\u662f\u5f00\u542f\u4e86\u7aef\u53e3\uff0c\u53ef\u4ee5\u62e8\u53f7\u4e0a\u7f51\uff0c\u65e0\u7ebf\u80fd\u5f00\u542f\u4f46\u662f\u65e0\u6cd5\u4e0a\u7f51\u3002 \u8bbe\u5907\u4fe1\u606f\uff1a \u00b6 \u00b6 \u627e\u4e86\u7f51\u4e0a\u4e00\u4e9b\u6559\u7a0b\u4e00\u4e9b\u5df2\u7ecf\u5931\u6548\uff0c\u539f\u56e0\u65e0\u975e\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u4eca\u5e74\u51fa\u7684\u7535\u4fe1\u8d1d\u5c14\u8def\u7531\u5668\u51fa\u5382\u65f6telnet\u7aef\u53e3\u5df2\u4e0d\u518d\u662f23; \u8d85\u7ea7\u5e10\u53f7\uff1a telecomadmin \u5bc6\u7801\uff1anE7jA%5m \u5df2\u88ab\u7535\u4fe1\u5c4f\u853d; MIUI\u8bba\u575b\u7684\u8fd9\u7bc7\u6559\u7a0b\u503c\u5f97\u4e00\u8bfb\uff0c \u7535\u4fe1\u8d85\u7ea7\u8d26\u53f7\u5bc6\u7801\u7834\u89e3\u6559\u7a0b\u72ec\u5bb6\u5949\u732e \u4e00.\u4e0b\u9762\u83b7\u53d6\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801\u4e2a\u4eba\u603b\u7ed3\uff1a \u00b6 1.\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 http://192.168.1.1 2.\u8f93\u5165\u7528\u6237\u5e10\u53f7\uff1a useradmin \u5bc6\u7801\uff1a * * \uff08\u6ce8\uff1a\u7528\u6237\u5bc6\u7801\u548c\u5e10\u53f7\u5728\u7535\u4fe1\u732b\u7684\u80cc\u9762\uff09 3.\u5148\u70b9\u7ba1\u7406 => \u8bbe\u5907\u7ba1\u7406 => \u5728\u8bbe\u5907\u91cd\u542f\u5e95\u90e8\u90a3\u6839\u7ebf\u4e0a\u70b9\u9f20\u6807\u53f3\u952e => \u9009\u62e9\u5ba1\u67e5\u5143\u7d20 => \u51fa\u73b0\u5982\u4e0b\u56fe => \u53f3\u952e <div id=\"usb_device_manage\" style=\"display:none;\"> => EditasHTML\u5c06none;\u6539\u6210block; => \u7f51\u9875\u51fa\u73b0USB\u8bbe\u5907\u7ba1\u7406 => \u5f00\u542f\u786e\u5b9a => \u732b\u63d2\u4e0aU\u76d8 (FT32\u5206\u533a) \u7a0d\u7b49\u7247\u523b \u7b49USB\u7684\u706f\u4eae => \u627e\u5230 <div id=\"div_usb\" style=\"display: none;\"> \u4fee\u6539\u4e3a <div id=\"div_usb\" style=\"display: block;\"> => \u51fa\u73b0\u5982\u4e0b\u56fe => \u9009\u62e9USB\u8bbe\u5907\u5206\u533a\uff1a\u7684\u65b9\u6846\u540e\u5c31\u662f\u9ed1\u8272\u5c0f\u4e09\u89d2\u5f62\u540e\u70b9\u9f20\u6807\u53f3\u952e \u9009\u62e9 \u67e5\u770b\u5143\u7d20 => \u5728 <li class=\"x_form_input\"> \u4e0b\u7684 <select id=\"usb_partition\" name=\"usb_partition\" style=\"width:80px\"> </select> \u8282\u70b9\u4e2d\u95f4\u6dfb\u52a0 <option value=\"usb1_1\">usb1_1</option> \u5373 <select id=\"usb_partition\" name=\"usb_partition\" style=\"width:80px\"> <option value=\"usb1_1\">usb1_1</option> </select> => \u6539\u5b8c\u540e\u56de\u5230\u9875\u9762 \u70b9\u51fb \u4fdd\u5b58\u914d\u7f6e\u6587\u4ef6 => \u5c06U\u76d8\u63d2\u5230\u7535\u8111\u4e0a \u5728U\u76d8\u7684\u201ce8c_Config_Backup\u201d\u76ee\u5f55\u91cc \u6709\u4e2a ctce8_rg.cfg \u6587\u4ef6 => \u9009\u62e9\u7528RAR\u8f6f\u4ef6\u6253\u5f00 \u91cc\u9762\u6709\u4e2a\u6587\u4ef6\u518d\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 => \u7528\u641c\u7d22\u529f\u80fd\u641c\u7d22\u201ctelecomadmin\u201d\u5f53\u4f60\u641c\u5230 <Password>telecomadmin????????</Password> \u8fd9\u4e2a\u5c31\u662f\u732b\u7684\u8d85\u7ea7\u5bc6\u7801 \u5176\u4e2d?\u4e3a\u6570\u5b57 \u4e8c.\u7834\u89e3Wifi\u65e0\u7ebf\u4e0a\u7f51 \u00b6 \u7528\u83b7\u53d6\u7684\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801\u767b\u5f55 \u70b9\u51fb\u7f51\u7edc INTERNET\u8fde\u63a5 WAN\u8fde\u63a5\u5217\u8868 \u9009\u62e92\u5e26INTERNET\u7684\u8fde\u63a5\u9879 => \u8fde\u63a5\u6a21\u5f0f \u6865\u63a5\u6539\u8def\u7531 => \u9009\u62e9LAN\u7aef\u53e3\u7ed1\u5b9a\uff08\u6211\u53ea\u7ed1\u5b9a\u7aef\u53e31\u5176\u4ed6\u7aef\u53e3\u4e5f\u662f\u751f\u6548\u7684\uff09=> \u586b\u5199\u62e8\u53f7\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801 Keep alive time \u586b5\u5c31\u53ef\u4ee5 \u81f3\u6b64Wifi\u8fde\u63a5\u5c31\u53ef\u4ee5\u4e0a\u7f51\uff0c\u8fde\u63a5\u7535\u8111\u5c31\u65e0\u9700\u62e8\u53f7\u4e86\u3002 \u5177\u4f53\u5982\u4e0b\u56fe\uff1a \u4e09.\u4e8c\u7ea7\u8def\u7531 \u00b6 \u6211\u60f3\u628aLAN\u53e3\u8fde\u51fa\u7684\u7f51\u7ebf\u518d\u8fde\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u600e\u4e48\u529e\u5462\uff1f \u5148\u8fde\u63a5\u4e8c\u7ea7\u8def\u7531\u5668 http://192.168.1.1 \u767b\u5f55\uff08\u7528\u6237\u540d\u5bc6\u7801\u4e00\u822c\u4e3aadmin/admin\uff09 \u7f51\u7edc\u53c2\u6570-WAN\u53e3\u8bbe\u7f6e\u6539\u4e3a \u52a8\u6001IP \uff0c\u5982\u4e0b\u56fe\uff0c\u5f53\u7136\u5230\u76ee\u524d\u4e3a\u6b62\u662f\u83b7\u53d6\u4e0d\u5230IP\u7684 3.\u7f51\u7edc\u53c2\u6570-LAN\u53e3\u8bbe\u7f6e \u5c06IP\u8bbe\u7f6e\u4e3a 192.168.2.1 \uff08\u7b2c\u4e09\u4f4d\u4e0d\u4e00\u5b9a\u4e3a2\uff0c\u53ea\u8981\u4e0d\u4e3a1\uff0c\u4e3a1\u5c31\u4e0e\u4e00\u7ea7\u8def\u7531\u51b2\u7a81\uff09 4.\u8bbe\u7f6e\u8def\u7531\u5668\u7684SSID\u548c\u5bc6\u7801\uff0c\u81f3\u6b64\u4e8c\u7ea7\u8def\u7531\u5c31\u8fde\u63a5\u5b8c\u6210\u3002192.168.1.1\u4e3a\u4e00\u7ea7\u8def\u7531\u5668\u5730\u5740\uff1b192.168.2.1\u4e3a\u4e8c\u7ea7\u8def\u7531\u5668\u5730\u5740\u3002","title":"\u7535\u4fe1\u8def\u7531\u5668\u4e0a\u6d77\u8d1d\u5c14E8C GPON HGW\uff08I-240W-Q\uff09-\u83b7\u53d6\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801-\u7834\u89e3wifi\u65e0\u7ebf\u4e0a\u7f51-\u4e8c\u7ea7\u8def\u7531"},{"location":"blog/2015/china-telecom-router-root/#e8c-gpon-hgwi-240w-q-wifi-","text":"2015-03-04 20:34:00 \u5bb6\u91cc\u88c5\u4e8612M\u7684\u5149\u7ea4\uff0c\u6362\u4e86\u4e00\u4e2a\u4e0a\u6d77\u8d1d\u5c14\u7684I-240W-Q\u7684\u5e26\u65e0\u7ebf\u7684\u7535\u4fe1\u732b\uff0c\u5de5\u4f5c\u4eba\u5458\u53ea\u662f\u5f00\u542f\u4e86\u7aef\u53e3\uff0c\u53ef\u4ee5\u62e8\u53f7\u4e0a\u7f51\uff0c\u65e0\u7ebf\u80fd\u5f00\u542f\u4f46\u662f\u65e0\u6cd5\u4e0a\u7f51\u3002","title":"\u7535\u4fe1\u8def\u7531\u5668\u4e0a\u6d77\u8d1d\u5c14E8C GPON HGW\uff08I-240W-Q\uff09-\u83b7\u53d6\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801-\u7834\u89e3wifi\u65e0\u7ebf\u4e0a\u7f51-\u4e8c\u7ea7\u8def\u7531"},{"location":"blog/2015/china-telecom-router-root/#_1","text":"","title":"\u8bbe\u5907\u4fe1\u606f\uff1a"},{"location":"blog/2015/china-telecom-router-root/#_2","text":"\u627e\u4e86\u7f51\u4e0a\u4e00\u4e9b\u6559\u7a0b\u4e00\u4e9b\u5df2\u7ecf\u5931\u6548\uff0c\u539f\u56e0\u65e0\u975e\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u4eca\u5e74\u51fa\u7684\u7535\u4fe1\u8d1d\u5c14\u8def\u7531\u5668\u51fa\u5382\u65f6telnet\u7aef\u53e3\u5df2\u4e0d\u518d\u662f23; \u8d85\u7ea7\u5e10\u53f7\uff1a telecomadmin \u5bc6\u7801\uff1anE7jA%5m \u5df2\u88ab\u7535\u4fe1\u5c4f\u853d; MIUI\u8bba\u575b\u7684\u8fd9\u7bc7\u6559\u7a0b\u503c\u5f97\u4e00\u8bfb\uff0c \u7535\u4fe1\u8d85\u7ea7\u8d26\u53f7\u5bc6\u7801\u7834\u89e3\u6559\u7a0b\u72ec\u5bb6\u5949\u732e","title":""},{"location":"blog/2015/china-telecom-router-root/#_3","text":"1.\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 http://192.168.1.1 2.\u8f93\u5165\u7528\u6237\u5e10\u53f7\uff1a useradmin \u5bc6\u7801\uff1a * * \uff08\u6ce8\uff1a\u7528\u6237\u5bc6\u7801\u548c\u5e10\u53f7\u5728\u7535\u4fe1\u732b\u7684\u80cc\u9762\uff09 3.\u5148\u70b9\u7ba1\u7406 => \u8bbe\u5907\u7ba1\u7406 => \u5728\u8bbe\u5907\u91cd\u542f\u5e95\u90e8\u90a3\u6839\u7ebf\u4e0a\u70b9\u9f20\u6807\u53f3\u952e => \u9009\u62e9\u5ba1\u67e5\u5143\u7d20 => \u51fa\u73b0\u5982\u4e0b\u56fe => \u53f3\u952e <div id=\"usb_device_manage\" style=\"display:none;\"> => EditasHTML\u5c06none;\u6539\u6210block; => \u7f51\u9875\u51fa\u73b0USB\u8bbe\u5907\u7ba1\u7406 => \u5f00\u542f\u786e\u5b9a => \u732b\u63d2\u4e0aU\u76d8 (FT32\u5206\u533a) \u7a0d\u7b49\u7247\u523b \u7b49USB\u7684\u706f\u4eae => \u627e\u5230 <div id=\"div_usb\" style=\"display: none;\"> \u4fee\u6539\u4e3a <div id=\"div_usb\" style=\"display: block;\"> => \u51fa\u73b0\u5982\u4e0b\u56fe => \u9009\u62e9USB\u8bbe\u5907\u5206\u533a\uff1a\u7684\u65b9\u6846\u540e\u5c31\u662f\u9ed1\u8272\u5c0f\u4e09\u89d2\u5f62\u540e\u70b9\u9f20\u6807\u53f3\u952e \u9009\u62e9 \u67e5\u770b\u5143\u7d20 => \u5728 <li class=\"x_form_input\"> \u4e0b\u7684 <select id=\"usb_partition\" name=\"usb_partition\" style=\"width:80px\"> </select> \u8282\u70b9\u4e2d\u95f4\u6dfb\u52a0 <option value=\"usb1_1\">usb1_1</option> \u5373 <select id=\"usb_partition\" name=\"usb_partition\" style=\"width:80px\"> <option value=\"usb1_1\">usb1_1</option> </select> => \u6539\u5b8c\u540e\u56de\u5230\u9875\u9762 \u70b9\u51fb \u4fdd\u5b58\u914d\u7f6e\u6587\u4ef6 => \u5c06U\u76d8\u63d2\u5230\u7535\u8111\u4e0a \u5728U\u76d8\u7684\u201ce8c_Config_Backup\u201d\u76ee\u5f55\u91cc \u6709\u4e2a ctce8_rg.cfg \u6587\u4ef6 => \u9009\u62e9\u7528RAR\u8f6f\u4ef6\u6253\u5f00 \u91cc\u9762\u6709\u4e2a\u6587\u4ef6\u518d\u7528\u8bb0\u4e8b\u672c\u6253\u5f00 => \u7528\u641c\u7d22\u529f\u80fd\u641c\u7d22\u201ctelecomadmin\u201d\u5f53\u4f60\u641c\u5230 <Password>telecomadmin????????</Password> \u8fd9\u4e2a\u5c31\u662f\u732b\u7684\u8d85\u7ea7\u5bc6\u7801 \u5176\u4e2d?\u4e3a\u6570\u5b57","title":"\u4e00.\u4e0b\u9762\u83b7\u53d6\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801\u4e2a\u4eba\u603b\u7ed3\uff1a"},{"location":"blog/2015/china-telecom-router-root/#wifi","text":"\u7528\u83b7\u53d6\u7684\u8d85\u7ea7\u5e10\u53f7\u5bc6\u7801\u767b\u5f55 \u70b9\u51fb\u7f51\u7edc INTERNET\u8fde\u63a5 WAN\u8fde\u63a5\u5217\u8868 \u9009\u62e92\u5e26INTERNET\u7684\u8fde\u63a5\u9879 => \u8fde\u63a5\u6a21\u5f0f \u6865\u63a5\u6539\u8def\u7531 => \u9009\u62e9LAN\u7aef\u53e3\u7ed1\u5b9a\uff08\u6211\u53ea\u7ed1\u5b9a\u7aef\u53e31\u5176\u4ed6\u7aef\u53e3\u4e5f\u662f\u751f\u6548\u7684\uff09=> \u586b\u5199\u62e8\u53f7\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801 Keep alive time \u586b5\u5c31\u53ef\u4ee5 \u81f3\u6b64Wifi\u8fde\u63a5\u5c31\u53ef\u4ee5\u4e0a\u7f51\uff0c\u8fde\u63a5\u7535\u8111\u5c31\u65e0\u9700\u62e8\u53f7\u4e86\u3002 \u5177\u4f53\u5982\u4e0b\u56fe\uff1a","title":"\u4e8c.\u7834\u89e3Wifi\u65e0\u7ebf\u4e0a\u7f51"},{"location":"blog/2015/china-telecom-router-root/#_4","text":"\u6211\u60f3\u628aLAN\u53e3\u8fde\u51fa\u7684\u7f51\u7ebf\u518d\u8fde\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u600e\u4e48\u529e\u5462\uff1f \u5148\u8fde\u63a5\u4e8c\u7ea7\u8def\u7531\u5668 http://192.168.1.1 \u767b\u5f55\uff08\u7528\u6237\u540d\u5bc6\u7801\u4e00\u822c\u4e3aadmin/admin\uff09 \u7f51\u7edc\u53c2\u6570-WAN\u53e3\u8bbe\u7f6e\u6539\u4e3a \u52a8\u6001IP \uff0c\u5982\u4e0b\u56fe\uff0c\u5f53\u7136\u5230\u76ee\u524d\u4e3a\u6b62\u662f\u83b7\u53d6\u4e0d\u5230IP\u7684 3.\u7f51\u7edc\u53c2\u6570-LAN\u53e3\u8bbe\u7f6e \u5c06IP\u8bbe\u7f6e\u4e3a 192.168.2.1 \uff08\u7b2c\u4e09\u4f4d\u4e0d\u4e00\u5b9a\u4e3a2\uff0c\u53ea\u8981\u4e0d\u4e3a1\uff0c\u4e3a1\u5c31\u4e0e\u4e00\u7ea7\u8def\u7531\u51b2\u7a81\uff09 4.\u8bbe\u7f6e\u8def\u7531\u5668\u7684SSID\u548c\u5bc6\u7801\uff0c\u81f3\u6b64\u4e8c\u7ea7\u8def\u7531\u5c31\u8fde\u63a5\u5b8c\u6210\u3002192.168.1.1\u4e3a\u4e00\u7ea7\u8def\u7531\u5668\u5730\u5740\uff1b192.168.2.1\u4e3a\u4e8c\u7ea7\u8def\u7531\u5668\u5730\u5740\u3002","title":"\u4e09.\u4e8c\u7ea7\u8def\u7531"},{"location":"blog/2015/gearman-01/","tags":["Java","Gearman"],"text":"Gearman\uff08\u4e00\uff09 \u00b6 2015-09-01 15:56 \u7b80\u5355\u4ecb\u7ecd \u00b6 Gearman\u8bd1\u4e3a\u201c\u9f7f\u8f6e\u5de5\u201d\uff0c\u4ece\u5b57\u9762\u4e0a\u770b\uff0c\u4ed6\u7684\u804c\u8d23\u5c31\u662f\u901a\u8fc7\u9f7f\u8f6e\u5c06\u4e0d\u540c\u7684\u7ec4\u4ef6\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u4f5c\u4e3a\u4e00\u4e2a\u4efb\u52a1\u5206\u53d1\u67b6\u6784\uff0cGearman\u8bf7\u6c42\u7684\u5904\u7406\u8fc7\u7a0b\u6d89\u53ca\u4e09\u4e2a\u89d2\u8272\uff1aClient -> Job Server -> Worker\u3002\u5b83\u80fd\u591f\u8f7b\u677e\u7684\u5c06\u524d\u7aefClient\u63d0\u4ea4\u7684\u4efb\u52a1\u901a\u8fc7Job Server\u5206\u53d1\u7ed9\u540e\u7aef\u7684\u7a7a\u95f2\u7684Worker\u5904\u7406\u3002 Client\uff1a\u8bf7\u6c42\u7684\u53d1\u8d77\u8005\uff0c\u53ef\u4ee5\u662fC\uff0cPHP\uff0cPerl\uff0cMySQL UDF\u7b49\u7b49\u3002 Job Server\uff1a\u8bf7\u6c42\u7684\u8c03\u5ea6\u8005\uff0c\u7528\u6765\u8d1f\u8d23\u534f\u8c03\u628aClient\u53d1\u51fa\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5408\u9002\u7684Worker\u3002 Worker\uff1a\u8bf7\u6c42\u7684\u5904\u7406\u8005\uff0c\u53ef\u4ee5\u662fC\uff0cPHP\uff0cPerl\u7b49\u7b49\u3002 \u5de5\u4f5c\u96c6\u7fa4\u793a\u610f\uff1a \u8be6\u89c1\uff1a Gearman\u5b98\u7f51 Server\u5b89\u88c5 \u00b6 \u56e0\u4e3a\u9879\u76ee\u540e\u53f0\u91c7\u7528Java\uff0cClient\u548cWorker\u65e0\u7591\u662f\u7528Java\u5b9e\u73b0\uff0c\u867d\u7136Gearman\u5e76\u6ca1\u6709\u8fd9\u6837\u7684\u9650\u5236\uff0c\u800c\u4e14Client\u548cWorker\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u5b9e\u73b0\u3002\u4e2d\u95f4\u7684\u7ebd\u5e26\u5c31\u662fJob Server\u3002 \u76ee\u524dJob Server\uff08gearmand\uff09\u7684java\u7248\u672c\u6709\u4e09\u4e2a\u3002 \u5b98\u65b9\u63a8\u8350\u7684 java-gearman-service \uff0c\u76ee\u524dGoogle Code\u4e0a\u7684release\u7248\u672c\u662f0.6.6\u3002\u9879\u76ee\u5df2\u8fc1\u79fb\u81f3Github\u7684 java-service \uff0c\u6ca1\u6709realease\u7248\u672c\uff0cmaven\u4e0a\u7684\u7248\u672c\u53f7\u662f0.7.0-SNAPSHOT\uff0c\u4e0d\u8fc7\u65f6\u95f4\u663e\u793a\u5df2\u7ecf\u662f\u4e24\u5e74\u524d\u4e86\u3002\u5176\u4e2d\u8fd8\u5305\u62ec\u4e86Client\u548cWorker\u7684\u5ba2\u6237\u7aefAPI\u3002 gearman-java \u5b98\u65b9Download\u4e2d\u6709\u63d0\u53ca\uff0cgearman-java.jar\u53ea\u5305\u62ecWorker\u548cClient\u7684API\uff0c\u6ca1\u6709Server\u3002 gearman-server \uff0c\u76ee\u524d\u7684\u7248\u672c\u662f0.6.2\uff0c\u91cc\u9762\u5305\u62ecWeb Server\uff1aJetty\uff0c\u6301\u4e45\u5316\u6846\u67b6Redis\u548cPostpresql\u3002 \u6d4b\u8bd5\u65f6\u91c7\u7528\u4e860.6.6\u7248\u672c\uff0c\u76f4\u63a5\u8fd0\u884cjava-gearman-service-0.6.6.jar\u5373\u53ef\u3002 \u4f46\u662fgearmand\u4f5c\u4e3aJob Server\u9664\u4e86\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u4e00\u4e9b\u914d\u7f6e\u4e4b\u5916\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8bf4\u662f\u9879\u76ee\u65e0\u5173\u7684\u3002Client\u548cWorker\u53ea\u9700\u5173\u7cfbJob Server\u7684IP\u548c\u7aef\u53e3\u3002\u6240\u4ee5\u5728Linux\u670d\u52a1\u5668\u4e0a\u5b89\u88c5C\u7248\u672c\u7684Gearmand\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\u5f00\u59cbC\u7248\u672c\u7684gearmand\u5b89\u88c5\u3002 \u521b\u5efa/usr/servers\uff0c\u6b64\u540e\u6211\u4eec\u628a\u8f6f\u4ef6\u5b89\u88c5\u5728\u6b64\u76ee\u5f55 mkdir -p /usr/servers cd /usr/servers \u4e0b\u8f7d\u5b89\u88c5gearmand\uff0c\u6700\u65b0\u7248\u5728 Launchpad \uff0c\u7248\u672c\u53f7\u4e3a1.1.12 tar -xzvf gearmand-1.1.12.tar.gz cd gearmand-1.1.12 ./configure --enable-debug \u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff0c\u539f\u56e0\u662f\u672c\u673a\u4e2d\u7f3a\u5c11\u4f9d\u8d56\u5305\u3002 checking for cc... no checking for gcc... no checking for clang... no configure: error: in `/usr/servers/gearmand-1.1.12': configure: error: no acceptable C compiler found in $PATH See `config.log' for more details \u6ce8\uff1a ./configure\u7684options\u53ef\u901a\u8fc7 ./configure -help \u67e5\u770b\u3002 \u5b89\u88c5\u4f9d\u8d56\uff08\u672c\u673a\u662fcentos6.6-DVD1 miniDeskTop\u7248\u672c\uff09 yum -y install gcc-c++ boost-devel gperf libevent-devel libuuid-devel uuid-dce uuid-dce-devel uuid-c++ uuid-c++-devel \u5f85\u6240\u6709\u4f9d\u8d56\u5b89\u88c5\u5b8c\u6210\uff0c\u6267\u884c ./configure --enable-debug \uff0c\u51fa\u73b0configure\u7ed3\u679c\u3002 --- Configuration summary for gearmand version 1.1.12 * Installation prefix: /usr/local * System type: unknown-linux-gnu * Host CPU: x86_64 * C Compiler: cc -std=gnu99 cc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16) * C Flags: -H -g -g3 -fno-eliminate-unused-debug-types -fno-omit-frame-pointer -Wno-unknown-pragmas -Wno-pragmas -Wall -Wextra -Wno-attributes -Waddress -Warray-bounds -Wbad-function-cast -Wchar-subscripts -Wcomment -Wfloat-equal -Wformat-security -Wformat=2 -Wformat-y2k -Wlogical-op -Wmissing-field-initializers -Wmissing-noreturn -Wmissing-prototypes -Wnested-externs -Wnormalized=id -Woverride-init -Wpointer-arith -Wpointer-sign -Wredundant-decls -Wshadow -Wsign-compare -Wstrict-overflow=1 -Wswitch-enum -Wundef -funsafe-loop-optimizations -Wclobbered -Wunused -Wunused-variable -Wunused-parameter -Wwrite-strings -fwrapv -pipe -fPIE -pie -Wpacked * C++ Compiler: c++ c++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16) * C++ Flags: -H -g -g3 -fno-inline -fno-eliminate-unused-debug-types -fno-omit-frame-pointer -Wno-unknown-pragmas -Wno-pragmas -Wall -Wextra -Wno-attributes -Waddress -Warray-bounds -Wchar-subscripts -Wcomment -Wctor-dtor-privacy -Wfloat-equal -Wformat=2 -Wformat-y2k -Wmissing-field-initializers -Wlogical-op -Wnon-virtual-dtor -Wnormalized=id -Woverloaded-virtual -Wpointer-arith -Wredundant-decls -Wshadow -Wsign-compare -Wstrict-overflow=1 -Wswitch-enum -Wundef -funsafe-loop-optimizations -Wclobbered -Wunused -Wunused-variable -Wunused-parameter -Wwrite-strings -Wformat-security -fwrapv -pipe -fPIE -pie -Wpacked * CPP Flags: -fvisibility=hidden * LIBS: * LDFLAGS Flags: -lmcheck * Assertions enabled: yes * Debug enabled: yes * Warnings as failure: no * Building with libsqlite3 no * Building with libdrizzle yes * Building with libmemcached not found * Building with libpq no * Building with tokyocabinet no * Building with libmysql no * SSL enabled: no * cyassl found: no * openssl found: no * make -j: 2 * VCS checkout: no * sphinx-build: : --- make&install\uff0c\u7ed3\u679c\u5982\u4e0b\u3002 make[2]: Entering directory `/usr/servers/gearmand-1.1.12' make[2]: warning: -jN forced in submake: disabling jobserver mode. /bin/mkdir -p '/usr/local/lib' /bin/sh ./libtool --mode=install /usr/bin/install -c libgearman/libgearman. la '/usr/local/lib' libtool: install: /usr/bin/install -c libgearman/.libs/libgearman.so.8.0.0 /usr/ local/lib/libgearman.so.8.0.0 libtool: install: (cd /usr/local/lib && { ln -s -f libgearman.so.8.0.0 libgearma n.so.8 || { rm -f libgearman.so.8 && ln -s libgearman.so.8.0.0 libgearman.so.8; }; }) libtool: install: (cd /usr/local/lib && { ln -s -f libgearman.so.8.0.0 libgearma n.so || { rm -f libgearman.so && ln -s libgearman.so.8.0.0 libgearman.so; }; }) libtool: install: /usr/bin/install -c libgearman/.libs/libgearman.lai /usr/local /lib/libgearman.la libtool: install: /usr/bin/install -c libgearman/.libs/libgearman.a /usr/local/l ib/libgearman.a libtool: install: chmod 644 /usr/local/lib/libgearman.a libtool: install: ranlib /usr/local/lib/libgearman.a libtool: finish: PATH=\"/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbi n:/bin:/usr/sbin:/usr/bin:/root/bin:/sbin\" ldconfig -n /usr/local/lib ---------------------------------------------------------------------- Libraries have been installed in: /usr/local/lib If you ever happen to want to link against installed libraries in a given directory, LIBDIR, you must either use libtool, and specify the full pathname of the library, or use the `-LLIBDIR' flag during linking and do at least one of the following: - add LIBDIR to the `LD_LIBRARY_PATH' environment variable during execution - add LIBDIR to the `LD_RUN_PATH' environment variable during linking - use the `-Wl,-rpath -Wl,LIBDIR' linker flag - have your system administrator add LIBDIR to `/etc/ld.so.conf' See any operating system documentation about shared libraries for more information, such as the ld(1) and ld.so(8) manual pages. ---------------------------------------------------------------------- /bin/mkdir -p '/usr/local/bin' /bin/sh ./libtool --mode=install /usr/bin/install -c bin/gearman bin/gearadm in '/usr/local/bin' libtool: install: /usr/bin/install -c bin/.libs/gearman /usr/local/bin/gearman libtool: install: /usr/bin/install -c bin/gearadmin /usr/local/bin/gearadmin /bin/mkdir -p '/usr/local/sbin' /bin/sh ./libtool --mode=install /usr/bin/install -c gearmand/gearmand '/usr /local/sbin' libtool: install: /usr/bin/install -c gearmand/gearmand /usr/local/sbin/gearmand /bin/mkdir -p '/usr/local/share/man/man1' /usr/bin/install -c -m 644 man/gearadmin.1 man/gearman.1 '/usr/local/share/man/ man1' /bin/mkdir -p '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_allocator_t.3 man/gearman_client_set_mem ory_allocators.3 man/gearman_worker_set_memory_allocators.3 man/gearman_actions_ t.3 man/gearman_argument_make.3 man/gearman_argument_t.3 man/gearman_bugreport.3 man/gearman_client_add_options.3 man/gearman_client_add_server.3 man/gearman_cl ient_add_servers.3 man/gearman_client_add_task.3 man/gearman_client_add_task_bac kground.3 man/gearman_client_add_task_high.3 man/gearman_client_add_task_high_ba ckground.3 man/gearman_client_add_task_low.3 man/gearman_client_add_task_low_bac kground.3 man/gearman_client_add_task_status.3 man/gearman_client_clear_fn.3 man /gearman_client_clone.3 man/gearman_client_context.3 man/gearman_client_create.3 man/gearman_client_do.3 man/gearman_client_do_background.3 man/gearman_client_d o_high.3 man/gearman_client_do_high_background.3 man/gearman_client_do_job_handl e.3 man/gearman_client_do_low.3 man/gearman_client_do_low_background.3 man/gearm an_client_do_status.3 man/gearman_client_echo.3 man/gearman_client_errno.3 man/g earman_client_error.3 man/gearman_client_free.3 man/gearman_client_job_status.3 man/gearman_client_options.3 man/gearman_client_remove_options.3 man/gearman_cli ent_remove_servers.3 man/gearman_client_run_tasks.3 man/gearman_client_set_compl ete_fn.3 man/gearman_client_set_context.3 '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_client_set_created_fn.3 man/gearman_clie nt_set_data_fn.3 man/gearman_client_set_exception_fn.3 man/gearman_client_set_fa il_fn.3 man/gearman_client_set_log_fn.3 man/gearman_client_set_namespace.3 man/g earman_client_set_options.3 man/gearman_client_set_status_fn.3 man/gearman_clien t_set_task_context_free_fn.3 man/gearman_client_set_timeout.3 man/gearman_client _set_warning_fn.3 man/gearman_client_set_workload_fn.3 man/gearman_client_set_wo rkload_free_fn.3 man/gearman_client_set_workload_malloc_fn.3 man/gearman_client_ st.3 man/gearman_client_task_free_all.3 man/gearman_client_timeout.3 man/gearman _client_wait.3 man/gearman_continue.3 man/gearman_execute.3 man/gearman_failed.3 man/gearman_job_free.3 man/gearman_job_free_all.3 man/gearman_job_function_name .3 man/gearman_job_handle.3 man/gearman_job_handle_t.3 man/gearman_job_send_comp lete.3 man/gearman_job_send_data.3 man/gearman_job_send_exception.3 man/gearman_ job_send_fail.3 man/gearman_job_send_status.3 man/gearman_job_send_warning.3 man /gearman_job_st.3 man/gearman_job_take_workload.3 man/gearman_job_unique.3 man/g earman_job_use_client.3 man/gearman_job_workload.3 man/gearman_job_workload_size .3 man/gearman_log_fn.3 man/gearman_parse_servers.3 '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_result_boolean.3 man/gearman_result_inte ger.3 man/gearman_result_is_null.3 man/gearman_result_size.3 man/gearman_result_ store_integer.3 man/gearman_result_store_string.3 man/gearman_result_store_value .3 man/gearman_result_string.3 man/gearman_return_t.3 man/gearman_strerror.3 man /gearman_string_t.3 man/gearman_success.3 man/gearman_task_context.3 man/gearman _task_data.3 man/gearman_task_data_size.3 man/gearman_task_denominator.3 man/gea rman_task_error.3 man/gearman_task_free.3 man/gearman_task_function_name.3 man/g earman_task_give_workload.3 man/gearman_task_is_known.3 man/gearman_task_is_runn ing.3 man/gearman_task_job_handle.3 man/gearman_task_numerator.3 man/gearman_tas k_recv_data.3 man/gearman_task_return.3 man/gearman_task_send_workload.3 man/gea rman_task_set_context.3 man/gearman_task_st.3 man/gearman_task_take_data.3 man/g earman_task_unique.3 man/gearman_verbose_name.3 man/gearman_verbose_t.3 man/gear man_version.3 man/gearman_worker_add_function.3 man/gearman_worker_add_options.3 man/gearman_worker_add_server.3 man/gearman_worker_add_servers.3 man/gearman_wo rker_clone.3 man/gearman_worker_context.3 '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_worker_create.3 man/gearman_worker_defin e_function.3 man/gearman_worker_echo.3 man/gearman_worker_errno.3 man/gearman_wo rker_error.3 man/gearman_worker_free.3 man/gearman_worker_function_exist.3 man/g earman_worker_grab_job.3 man/gearman_worker_options.3 man/gearman_worker_registe r.3 man/gearman_worker_remove_options.3 man/gearman_worker_remove_servers.3 man/ gearman_worker_set_context.3 man/gearman_worker_set_log_fn.3 man/gearman_worker_ set_namespace.3 man/gearman_worker_set_options.3 man/gearman_worker_set_timeout. 3 man/gearman_client_has_option.3 man/gearman_client_options_t.3 man/gearman_tas k_attr_init.3 man/gearman_task_attr_init_background.3 man/gearman_task_attr_init _epoch.3 man/gearman_task_attr_t.3 man/gearman_worker_set_identifier.3 man/gearm an_worker_set_workload_free_fn.3 man/gearman_worker_set_workload_malloc_fn.3 man /gearman_worker_st.3 man/gearman_worker_timeout.3 man/gearman_worker_unregister. 3 man/gearman_worker_unregister_all.3 man/gearman_worker_wait.3 man/gearman_work er_work.3 man/libgearman.3 '/usr/local/share/man/man3' /bin/mkdir -p '/usr/local/share/man/man8' /usr/bin/install -c -m 644 man/gearmand.8 '/usr/local/share/man/man8' /bin/mkdir -p '/usr/local/include' /bin/mkdir -p '/usr/local/include/libgearman-1.0' /usr/bin/install -c -m 644 libgearman-1.0/cancel.h libgearman-1.0/status.h lib gearman-1.0/actions.h libgearman-1.0/aggregator.h libgearman-1.0/allocator.h lib gearman-1.0/argument.h libgearman-1.0/client.h libgearman-1.0/client_callbacks.h libgearman-1.0/configure.h libgearman-1.0/connection.h libgearman-1.0/constants .h libgearman-1.0/core.h libgearman-1.0/execute.h libgearman-1.0/function.h libg earman-1.0/gearman.h libgearman-1.0/job.h libgearman-1.0/job_handle.h libgearman -1.0/kill.h libgearman-1.0/limits.h libgearman-1.0/ostream.hpp libgearman-1.0/pa rse.h libgearman-1.0/priority.h libgearman-1.0/protocol.h libgearman-1.0/result. h libgearman-1.0/return.h libgearman-1.0/signal.h libgearman-1.0/strerror.h libg earman-1.0/string.h libgearman-1.0/task.h libgearman-1.0/task_attr.h libgearman- 1.0/util.h libgearman-1.0/version.h libgearman-1.0/visibility.h libgearman-1.0/w orker.h '/usr/local/include/libgearman-1.0' /bin/mkdir -p '/usr/local/include/libgearman' /usr/bin/install -c -m 644 libgearman/gearman.h '/usr/local/include/libgearman ' /bin/mkdir -p '/usr/local/include/libgearman-1.0/interface' /usr/bin/install -c -m 644 libgearman-1.0/interface/client.h libgearman-1.0/in terface/status.h libgearman-1.0/interface/task.h libgearman-1.0/interface/worker .h libgearman-1.0/interface/job.h '/usr/local/include/libgearman-1.0/interface' /bin/mkdir -p '/usr/local/lib/pkgconfig' /usr/bin/install -c -m 644 support/gearmand.pc '/usr/local/lib/pkgconfig' make[2]: Leaving directory `/usr/servers/gearmand-1.1.12' make[1]: Leaving directory `/usr/servers/gearmand-1.1.12' \u521b\u5efa\u4e00\u4e0blog\u76ee\u5f55 mkdir -p /usr/local/var/log/ \u9ed8\u8ba4\u5c31\u5728\u6b64\u76ee\u5f55\u4e0b \u542f\u52a8 gearmand --verbose = INFO -d \u542f\u52a8gearmand\u5b88\u62a4\uff0c\u5e76\u6253\u5370level\u4e3aINFO\u7684log\u3002gearmand\u7684options\u53ef\u901a\u8fc7 gearmand -h \u67e5\u770b\u3002","title":"Gearman\uff08\u4e00\uff09"},{"location":"blog/2015/gearman-01/#gearman","text":"2015-09-01 15:56","title":"Gearman\uff08\u4e00\uff09"},{"location":"blog/2015/gearman-01/#_1","text":"Gearman\u8bd1\u4e3a\u201c\u9f7f\u8f6e\u5de5\u201d\uff0c\u4ece\u5b57\u9762\u4e0a\u770b\uff0c\u4ed6\u7684\u804c\u8d23\u5c31\u662f\u901a\u8fc7\u9f7f\u8f6e\u5c06\u4e0d\u540c\u7684\u7ec4\u4ef6\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u4f5c\u4e3a\u4e00\u4e2a\u4efb\u52a1\u5206\u53d1\u67b6\u6784\uff0cGearman\u8bf7\u6c42\u7684\u5904\u7406\u8fc7\u7a0b\u6d89\u53ca\u4e09\u4e2a\u89d2\u8272\uff1aClient -> Job Server -> Worker\u3002\u5b83\u80fd\u591f\u8f7b\u677e\u7684\u5c06\u524d\u7aefClient\u63d0\u4ea4\u7684\u4efb\u52a1\u901a\u8fc7Job Server\u5206\u53d1\u7ed9\u540e\u7aef\u7684\u7a7a\u95f2\u7684Worker\u5904\u7406\u3002 Client\uff1a\u8bf7\u6c42\u7684\u53d1\u8d77\u8005\uff0c\u53ef\u4ee5\u662fC\uff0cPHP\uff0cPerl\uff0cMySQL UDF\u7b49\u7b49\u3002 Job Server\uff1a\u8bf7\u6c42\u7684\u8c03\u5ea6\u8005\uff0c\u7528\u6765\u8d1f\u8d23\u534f\u8c03\u628aClient\u53d1\u51fa\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5408\u9002\u7684Worker\u3002 Worker\uff1a\u8bf7\u6c42\u7684\u5904\u7406\u8005\uff0c\u53ef\u4ee5\u662fC\uff0cPHP\uff0cPerl\u7b49\u7b49\u3002 \u5de5\u4f5c\u96c6\u7fa4\u793a\u610f\uff1a \u8be6\u89c1\uff1a Gearman\u5b98\u7f51","title":"\u7b80\u5355\u4ecb\u7ecd"},{"location":"blog/2015/gearman-01/#server","text":"\u56e0\u4e3a\u9879\u76ee\u540e\u53f0\u91c7\u7528Java\uff0cClient\u548cWorker\u65e0\u7591\u662f\u7528Java\u5b9e\u73b0\uff0c\u867d\u7136Gearman\u5e76\u6ca1\u6709\u8fd9\u6837\u7684\u9650\u5236\uff0c\u800c\u4e14Client\u548cWorker\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u5b9e\u73b0\u3002\u4e2d\u95f4\u7684\u7ebd\u5e26\u5c31\u662fJob Server\u3002 \u76ee\u524dJob Server\uff08gearmand\uff09\u7684java\u7248\u672c\u6709\u4e09\u4e2a\u3002 \u5b98\u65b9\u63a8\u8350\u7684 java-gearman-service \uff0c\u76ee\u524dGoogle Code\u4e0a\u7684release\u7248\u672c\u662f0.6.6\u3002\u9879\u76ee\u5df2\u8fc1\u79fb\u81f3Github\u7684 java-service \uff0c\u6ca1\u6709realease\u7248\u672c\uff0cmaven\u4e0a\u7684\u7248\u672c\u53f7\u662f0.7.0-SNAPSHOT\uff0c\u4e0d\u8fc7\u65f6\u95f4\u663e\u793a\u5df2\u7ecf\u662f\u4e24\u5e74\u524d\u4e86\u3002\u5176\u4e2d\u8fd8\u5305\u62ec\u4e86Client\u548cWorker\u7684\u5ba2\u6237\u7aefAPI\u3002 gearman-java \u5b98\u65b9Download\u4e2d\u6709\u63d0\u53ca\uff0cgearman-java.jar\u53ea\u5305\u62ecWorker\u548cClient\u7684API\uff0c\u6ca1\u6709Server\u3002 gearman-server \uff0c\u76ee\u524d\u7684\u7248\u672c\u662f0.6.2\uff0c\u91cc\u9762\u5305\u62ecWeb Server\uff1aJetty\uff0c\u6301\u4e45\u5316\u6846\u67b6Redis\u548cPostpresql\u3002 \u6d4b\u8bd5\u65f6\u91c7\u7528\u4e860.6.6\u7248\u672c\uff0c\u76f4\u63a5\u8fd0\u884cjava-gearman-service-0.6.6.jar\u5373\u53ef\u3002 \u4f46\u662fgearmand\u4f5c\u4e3aJob Server\u9664\u4e86\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6709\u4e00\u4e9b\u914d\u7f6e\u4e4b\u5916\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8bf4\u662f\u9879\u76ee\u65e0\u5173\u7684\u3002Client\u548cWorker\u53ea\u9700\u5173\u7cfbJob Server\u7684IP\u548c\u7aef\u53e3\u3002\u6240\u4ee5\u5728Linux\u670d\u52a1\u5668\u4e0a\u5b89\u88c5C\u7248\u672c\u7684Gearmand\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\u5f00\u59cbC\u7248\u672c\u7684gearmand\u5b89\u88c5\u3002 \u521b\u5efa/usr/servers\uff0c\u6b64\u540e\u6211\u4eec\u628a\u8f6f\u4ef6\u5b89\u88c5\u5728\u6b64\u76ee\u5f55 mkdir -p /usr/servers cd /usr/servers \u4e0b\u8f7d\u5b89\u88c5gearmand\uff0c\u6700\u65b0\u7248\u5728 Launchpad \uff0c\u7248\u672c\u53f7\u4e3a1.1.12 tar -xzvf gearmand-1.1.12.tar.gz cd gearmand-1.1.12 ./configure --enable-debug \u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff0c\u539f\u56e0\u662f\u672c\u673a\u4e2d\u7f3a\u5c11\u4f9d\u8d56\u5305\u3002 checking for cc... no checking for gcc... no checking for clang... no configure: error: in `/usr/servers/gearmand-1.1.12': configure: error: no acceptable C compiler found in $PATH See `config.log' for more details \u6ce8\uff1a ./configure\u7684options\u53ef\u901a\u8fc7 ./configure -help \u67e5\u770b\u3002 \u5b89\u88c5\u4f9d\u8d56\uff08\u672c\u673a\u662fcentos6.6-DVD1 miniDeskTop\u7248\u672c\uff09 yum -y install gcc-c++ boost-devel gperf libevent-devel libuuid-devel uuid-dce uuid-dce-devel uuid-c++ uuid-c++-devel \u5f85\u6240\u6709\u4f9d\u8d56\u5b89\u88c5\u5b8c\u6210\uff0c\u6267\u884c ./configure --enable-debug \uff0c\u51fa\u73b0configure\u7ed3\u679c\u3002 --- Configuration summary for gearmand version 1.1.12 * Installation prefix: /usr/local * System type: unknown-linux-gnu * Host CPU: x86_64 * C Compiler: cc -std=gnu99 cc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16) * C Flags: -H -g -g3 -fno-eliminate-unused-debug-types -fno-omit-frame-pointer -Wno-unknown-pragmas -Wno-pragmas -Wall -Wextra -Wno-attributes -Waddress -Warray-bounds -Wbad-function-cast -Wchar-subscripts -Wcomment -Wfloat-equal -Wformat-security -Wformat=2 -Wformat-y2k -Wlogical-op -Wmissing-field-initializers -Wmissing-noreturn -Wmissing-prototypes -Wnested-externs -Wnormalized=id -Woverride-init -Wpointer-arith -Wpointer-sign -Wredundant-decls -Wshadow -Wsign-compare -Wstrict-overflow=1 -Wswitch-enum -Wundef -funsafe-loop-optimizations -Wclobbered -Wunused -Wunused-variable -Wunused-parameter -Wwrite-strings -fwrapv -pipe -fPIE -pie -Wpacked * C++ Compiler: c++ c++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16) * C++ Flags: -H -g -g3 -fno-inline -fno-eliminate-unused-debug-types -fno-omit-frame-pointer -Wno-unknown-pragmas -Wno-pragmas -Wall -Wextra -Wno-attributes -Waddress -Warray-bounds -Wchar-subscripts -Wcomment -Wctor-dtor-privacy -Wfloat-equal -Wformat=2 -Wformat-y2k -Wmissing-field-initializers -Wlogical-op -Wnon-virtual-dtor -Wnormalized=id -Woverloaded-virtual -Wpointer-arith -Wredundant-decls -Wshadow -Wsign-compare -Wstrict-overflow=1 -Wswitch-enum -Wundef -funsafe-loop-optimizations -Wclobbered -Wunused -Wunused-variable -Wunused-parameter -Wwrite-strings -Wformat-security -fwrapv -pipe -fPIE -pie -Wpacked * CPP Flags: -fvisibility=hidden * LIBS: * LDFLAGS Flags: -lmcheck * Assertions enabled: yes * Debug enabled: yes * Warnings as failure: no * Building with libsqlite3 no * Building with libdrizzle yes * Building with libmemcached not found * Building with libpq no * Building with tokyocabinet no * Building with libmysql no * SSL enabled: no * cyassl found: no * openssl found: no * make -j: 2 * VCS checkout: no * sphinx-build: : --- make&install\uff0c\u7ed3\u679c\u5982\u4e0b\u3002 make[2]: Entering directory `/usr/servers/gearmand-1.1.12' make[2]: warning: -jN forced in submake: disabling jobserver mode. /bin/mkdir -p '/usr/local/lib' /bin/sh ./libtool --mode=install /usr/bin/install -c libgearman/libgearman. la '/usr/local/lib' libtool: install: /usr/bin/install -c libgearman/.libs/libgearman.so.8.0.0 /usr/ local/lib/libgearman.so.8.0.0 libtool: install: (cd /usr/local/lib && { ln -s -f libgearman.so.8.0.0 libgearma n.so.8 || { rm -f libgearman.so.8 && ln -s libgearman.so.8.0.0 libgearman.so.8; }; }) libtool: install: (cd /usr/local/lib && { ln -s -f libgearman.so.8.0.0 libgearma n.so || { rm -f libgearman.so && ln -s libgearman.so.8.0.0 libgearman.so; }; }) libtool: install: /usr/bin/install -c libgearman/.libs/libgearman.lai /usr/local /lib/libgearman.la libtool: install: /usr/bin/install -c libgearman/.libs/libgearman.a /usr/local/l ib/libgearman.a libtool: install: chmod 644 /usr/local/lib/libgearman.a libtool: install: ranlib /usr/local/lib/libgearman.a libtool: finish: PATH=\"/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbi n:/bin:/usr/sbin:/usr/bin:/root/bin:/sbin\" ldconfig -n /usr/local/lib ---------------------------------------------------------------------- Libraries have been installed in: /usr/local/lib If you ever happen to want to link against installed libraries in a given directory, LIBDIR, you must either use libtool, and specify the full pathname of the library, or use the `-LLIBDIR' flag during linking and do at least one of the following: - add LIBDIR to the `LD_LIBRARY_PATH' environment variable during execution - add LIBDIR to the `LD_RUN_PATH' environment variable during linking - use the `-Wl,-rpath -Wl,LIBDIR' linker flag - have your system administrator add LIBDIR to `/etc/ld.so.conf' See any operating system documentation about shared libraries for more information, such as the ld(1) and ld.so(8) manual pages. ---------------------------------------------------------------------- /bin/mkdir -p '/usr/local/bin' /bin/sh ./libtool --mode=install /usr/bin/install -c bin/gearman bin/gearadm in '/usr/local/bin' libtool: install: /usr/bin/install -c bin/.libs/gearman /usr/local/bin/gearman libtool: install: /usr/bin/install -c bin/gearadmin /usr/local/bin/gearadmin /bin/mkdir -p '/usr/local/sbin' /bin/sh ./libtool --mode=install /usr/bin/install -c gearmand/gearmand '/usr /local/sbin' libtool: install: /usr/bin/install -c gearmand/gearmand /usr/local/sbin/gearmand /bin/mkdir -p '/usr/local/share/man/man1' /usr/bin/install -c -m 644 man/gearadmin.1 man/gearman.1 '/usr/local/share/man/ man1' /bin/mkdir -p '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_allocator_t.3 man/gearman_client_set_mem ory_allocators.3 man/gearman_worker_set_memory_allocators.3 man/gearman_actions_ t.3 man/gearman_argument_make.3 man/gearman_argument_t.3 man/gearman_bugreport.3 man/gearman_client_add_options.3 man/gearman_client_add_server.3 man/gearman_cl ient_add_servers.3 man/gearman_client_add_task.3 man/gearman_client_add_task_bac kground.3 man/gearman_client_add_task_high.3 man/gearman_client_add_task_high_ba ckground.3 man/gearman_client_add_task_low.3 man/gearman_client_add_task_low_bac kground.3 man/gearman_client_add_task_status.3 man/gearman_client_clear_fn.3 man /gearman_client_clone.3 man/gearman_client_context.3 man/gearman_client_create.3 man/gearman_client_do.3 man/gearman_client_do_background.3 man/gearman_client_d o_high.3 man/gearman_client_do_high_background.3 man/gearman_client_do_job_handl e.3 man/gearman_client_do_low.3 man/gearman_client_do_low_background.3 man/gearm an_client_do_status.3 man/gearman_client_echo.3 man/gearman_client_errno.3 man/g earman_client_error.3 man/gearman_client_free.3 man/gearman_client_job_status.3 man/gearman_client_options.3 man/gearman_client_remove_options.3 man/gearman_cli ent_remove_servers.3 man/gearman_client_run_tasks.3 man/gearman_client_set_compl ete_fn.3 man/gearman_client_set_context.3 '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_client_set_created_fn.3 man/gearman_clie nt_set_data_fn.3 man/gearman_client_set_exception_fn.3 man/gearman_client_set_fa il_fn.3 man/gearman_client_set_log_fn.3 man/gearman_client_set_namespace.3 man/g earman_client_set_options.3 man/gearman_client_set_status_fn.3 man/gearman_clien t_set_task_context_free_fn.3 man/gearman_client_set_timeout.3 man/gearman_client _set_warning_fn.3 man/gearman_client_set_workload_fn.3 man/gearman_client_set_wo rkload_free_fn.3 man/gearman_client_set_workload_malloc_fn.3 man/gearman_client_ st.3 man/gearman_client_task_free_all.3 man/gearman_client_timeout.3 man/gearman _client_wait.3 man/gearman_continue.3 man/gearman_execute.3 man/gearman_failed.3 man/gearman_job_free.3 man/gearman_job_free_all.3 man/gearman_job_function_name .3 man/gearman_job_handle.3 man/gearman_job_handle_t.3 man/gearman_job_send_comp lete.3 man/gearman_job_send_data.3 man/gearman_job_send_exception.3 man/gearman_ job_send_fail.3 man/gearman_job_send_status.3 man/gearman_job_send_warning.3 man /gearman_job_st.3 man/gearman_job_take_workload.3 man/gearman_job_unique.3 man/g earman_job_use_client.3 man/gearman_job_workload.3 man/gearman_job_workload_size .3 man/gearman_log_fn.3 man/gearman_parse_servers.3 '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_result_boolean.3 man/gearman_result_inte ger.3 man/gearman_result_is_null.3 man/gearman_result_size.3 man/gearman_result_ store_integer.3 man/gearman_result_store_string.3 man/gearman_result_store_value .3 man/gearman_result_string.3 man/gearman_return_t.3 man/gearman_strerror.3 man /gearman_string_t.3 man/gearman_success.3 man/gearman_task_context.3 man/gearman _task_data.3 man/gearman_task_data_size.3 man/gearman_task_denominator.3 man/gea rman_task_error.3 man/gearman_task_free.3 man/gearman_task_function_name.3 man/g earman_task_give_workload.3 man/gearman_task_is_known.3 man/gearman_task_is_runn ing.3 man/gearman_task_job_handle.3 man/gearman_task_numerator.3 man/gearman_tas k_recv_data.3 man/gearman_task_return.3 man/gearman_task_send_workload.3 man/gea rman_task_set_context.3 man/gearman_task_st.3 man/gearman_task_take_data.3 man/g earman_task_unique.3 man/gearman_verbose_name.3 man/gearman_verbose_t.3 man/gear man_version.3 man/gearman_worker_add_function.3 man/gearman_worker_add_options.3 man/gearman_worker_add_server.3 man/gearman_worker_add_servers.3 man/gearman_wo rker_clone.3 man/gearman_worker_context.3 '/usr/local/share/man/man3' /usr/bin/install -c -m 644 man/gearman_worker_create.3 man/gearman_worker_defin e_function.3 man/gearman_worker_echo.3 man/gearman_worker_errno.3 man/gearman_wo rker_error.3 man/gearman_worker_free.3 man/gearman_worker_function_exist.3 man/g earman_worker_grab_job.3 man/gearman_worker_options.3 man/gearman_worker_registe r.3 man/gearman_worker_remove_options.3 man/gearman_worker_remove_servers.3 man/ gearman_worker_set_context.3 man/gearman_worker_set_log_fn.3 man/gearman_worker_ set_namespace.3 man/gearman_worker_set_options.3 man/gearman_worker_set_timeout. 3 man/gearman_client_has_option.3 man/gearman_client_options_t.3 man/gearman_tas k_attr_init.3 man/gearman_task_attr_init_background.3 man/gearman_task_attr_init _epoch.3 man/gearman_task_attr_t.3 man/gearman_worker_set_identifier.3 man/gearm an_worker_set_workload_free_fn.3 man/gearman_worker_set_workload_malloc_fn.3 man /gearman_worker_st.3 man/gearman_worker_timeout.3 man/gearman_worker_unregister. 3 man/gearman_worker_unregister_all.3 man/gearman_worker_wait.3 man/gearman_work er_work.3 man/libgearman.3 '/usr/local/share/man/man3' /bin/mkdir -p '/usr/local/share/man/man8' /usr/bin/install -c -m 644 man/gearmand.8 '/usr/local/share/man/man8' /bin/mkdir -p '/usr/local/include' /bin/mkdir -p '/usr/local/include/libgearman-1.0' /usr/bin/install -c -m 644 libgearman-1.0/cancel.h libgearman-1.0/status.h lib gearman-1.0/actions.h libgearman-1.0/aggregator.h libgearman-1.0/allocator.h lib gearman-1.0/argument.h libgearman-1.0/client.h libgearman-1.0/client_callbacks.h libgearman-1.0/configure.h libgearman-1.0/connection.h libgearman-1.0/constants .h libgearman-1.0/core.h libgearman-1.0/execute.h libgearman-1.0/function.h libg earman-1.0/gearman.h libgearman-1.0/job.h libgearman-1.0/job_handle.h libgearman -1.0/kill.h libgearman-1.0/limits.h libgearman-1.0/ostream.hpp libgearman-1.0/pa rse.h libgearman-1.0/priority.h libgearman-1.0/protocol.h libgearman-1.0/result. h libgearman-1.0/return.h libgearman-1.0/signal.h libgearman-1.0/strerror.h libg earman-1.0/string.h libgearman-1.0/task.h libgearman-1.0/task_attr.h libgearman- 1.0/util.h libgearman-1.0/version.h libgearman-1.0/visibility.h libgearman-1.0/w orker.h '/usr/local/include/libgearman-1.0' /bin/mkdir -p '/usr/local/include/libgearman' /usr/bin/install -c -m 644 libgearman/gearman.h '/usr/local/include/libgearman ' /bin/mkdir -p '/usr/local/include/libgearman-1.0/interface' /usr/bin/install -c -m 644 libgearman-1.0/interface/client.h libgearman-1.0/in terface/status.h libgearman-1.0/interface/task.h libgearman-1.0/interface/worker .h libgearman-1.0/interface/job.h '/usr/local/include/libgearman-1.0/interface' /bin/mkdir -p '/usr/local/lib/pkgconfig' /usr/bin/install -c -m 644 support/gearmand.pc '/usr/local/lib/pkgconfig' make[2]: Leaving directory `/usr/servers/gearmand-1.1.12' make[1]: Leaving directory `/usr/servers/gearmand-1.1.12' \u521b\u5efa\u4e00\u4e0blog\u76ee\u5f55 mkdir -p /usr/local/var/log/ \u9ed8\u8ba4\u5c31\u5728\u6b64\u76ee\u5f55\u4e0b \u542f\u52a8 gearmand --verbose = INFO -d \u542f\u52a8gearmand\u5b88\u62a4\uff0c\u5e76\u6253\u5370level\u4e3aINFO\u7684log\u3002gearmand\u7684options\u53ef\u901a\u8fc7 gearmand -h \u67e5\u770b\u3002","title":"Server\u5b89\u88c5"},{"location":"blog/2015/gearman-02/","tags":["Java","Gearman"],"text":"Gearman\uff08\u4e8c\uff09 \u00b6 2015-09-06 10:49 Simple Demo \u00b6 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ec5\u4ec5\u662f\u8f93\u51faHello world\u7684\u5b9e\u4f8b\u3002 \u521b\u5efa\u4e00\u4e2aMaven\u9879\u76ee\uff0c\u5728pom.xml\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0bjar\u5305 <!-- Java Gearman Service --> <dependency> <groupId> org.gearman.jgs </groupId> <artifactId> java-gearman-service </artifactId> <version> 0.7.0-SNAPSHOT </version> <type> jar </type> </dependency> \u8be5jar\u5305\u5305\u542bClient\u548cWorker\u7684\u5ba2\u6237\u7aefAPI\u3002 Worker\uff1aEchoWorker package org.gearman.examples.echo ; import org.gearman.Gearman ; import org.gearman.GearmanFunction ; import org.gearman.GearmanFunctionCallback ; import org.gearman.GearmanServer ; import org.gearman.GearmanWorker ; /** * The echo worker polls jobs from a job server and execute the echo function. * * The echo worker illustrates how to setup a basic worker */ public class EchoWorker implements GearmanFunction { /** The echo function name */ public static final String ECHO_FUNCTION_NAME = \"echo\" ; /** The host address of the job server */ public static final String ECHO_HOST = \"127.0.0.1\" ; /** The port number the job server is listening on */ public static final int ECHO_PORT = 4730 ; public static void main ( String ... args ) { /* * Create a Gearman instance */ Gearman gearman = Gearman . createGearman (); /* * Create the job server object. This call creates an object represents * a remote job server. * * Parameter 1: the host address of the job server. * Parameter 2: the port number the job server is listening on. * * A job server receives jobs from clients and distributes them to * registered workers. */ GearmanServer server = gearman . createGearmanServer ( EchoWorker . ECHO_HOST , EchoWorker . ECHO_PORT ); /* * Create a gearman worker. The worker poll jobs from the server and * executes the corresponding GearmanFunction */ GearmanWorker worker = gearman . createGearmanWorker (); /* * Tell the worker how to perform the echo function */ worker . addFunction ( EchoWorker . ECHO_FUNCTION_NAME , new EchoWorker ()); /* * Tell the worker that it may communicate with the this job server */ worker . addServer ( server ); } @Override public byte [] work ( String function , byte [] data , GearmanFunctionCallback callback ) throws Exception { /* * The work method performs the gearman function. In this case, the echo * function simply returns the data it received */ return data ; } } GearmanWorker\u7684 addFunction() \u65b9\u6cd5\u544a\u8bc9Server FUNCTION_NAME\u548c\u5bf9\u5e94\u7684Worker\u3002\u4eceClient\u4f20\u5165\u7684\u6570\u636e\u4f1a\u4ee5\u5b57\u8282\u6d41\u7684\u5f62\u5f0f\u5728Worker\u7684 work() \u65b9\u6cd5\u4e2d\u5f97\u5230\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8be5\u65b9\u6cd5\u4e2d\u8fdb\u884c\u5904\u7406\u3002 Client EchoClient\uff1a\u540c\u6b65\u7684Client package org.gearman.examples.echo ; import org.gearman.Gearman ; import org.gearman.GearmanClient ; import org.gearman.GearmanJobEvent ; import org.gearman.GearmanJobReturn ; import org.gearman.GearmanServer ; /** * The echo client submits an \"echo\" job to a job server and prints the final * result. It's the \"Hello World\" of the java-geraman-service * * The echo example illustrates how send a single job and get the result */ public class EchoClient { public static void main ( String ... args ) throws InterruptedException { /* * Create a Gearman instance */ Gearman gearman = Gearman . createGearman (); /* * Create a new gearman client. * * The client is used to submit requests the job server. */ GearmanClient client = gearman . createGearmanClient (); /* * Create the job server object. This call creates an object represents * a remote job server. * * Parameter 1: the host address of the job server. * Parameter 2: the port number the job server is listening on. * * A job server receives jobs from clients and distributes them to * registered workers. */ GearmanServer server = gearman . createGearmanServer ( EchoWorker . ECHO_HOST , EchoWorker . ECHO_PORT ); /* * Tell the client that it may connect to this server when submitting * jobs. */ client . addServer ( server ); /* * Submit a job to a job server. * * Parameter 1: the gearman function name * Parameter 2: the data passed to the server and worker * * The GearmanJobReturn is used to poll the job's result */ GearmanJobReturn jobReturn = client . submitJob ( EchoWorker . ECHO_FUNCTION_NAME , ( \"Hello World\" ). getBytes ()); /* * Iterate through the job events until we hit the end-of-file */ while ( ! jobReturn . isEOF ()) { // Poll the next job event (blocking operation) GearmanJobEvent event = jobReturn . poll (); switch ( event . getEventType ()) { // success case GEARMAN_JOB_SUCCESS : // Job completed successfully // print the result System . out . println ( new String ( event . getData ())); break ; // failure case GEARMAN_SUBMIT_FAIL : // The job submit operation failed case GEARMAN_JOB_FAIL : // The job's execution failed System . err . println ( event . getEventType () + \": \" + new String ( event . getData ())); default : } } /* * Close the gearman service after it's no longer needed. (closes all * sub-services, such as the client) * * It's suggested that you reuse Gearman and GearmanClient instances * rather recreating and closing new ones between submissions */ gearman . shutdown (); } } \u540c\u6b65\u7684Client\u901a\u8fc7GearmanClient\u7684 submitJob(String functionName, byte[] data); \u65b9\u6cd5\u63d0\u4ea4\u4efb\u52a1\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f97\u5230Worker\u5728 work() \u65b9\u6cd5\u4e2d\u7ecf\u8fc7\u5904\u7406\u8fd4\u56de\u7684\u6570\u636e\u3002\u5982\u679c\u901a\u8fc7\u5c06\u4efb\u52a1\u63d0\u4ea4\u540e\u53f0\u6267\u884c\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u91c7\u7528 submitBackgroundJob(String functionName, byte[] data); \u65b9\u6cd5\uff0c\u4f18\u70b9\u662fClient\u7684\u6267\u884c\u6548\u7387\u4f1a\u5feb\u5f88\u591a\uff0c\u7f3a\u70b9\u662f\u4e0d\u80fd\u63a5\u6536\u8fd4\u56de\u503c\u3002 EchoClientAsynchronous\uff1a\u5f02\u6b65\u7684Client package org.gearman.examples.echo ; import org.gearman.Gearman ; import org.gearman.GearmanClient ; import org.gearman.GearmanJobEvent ; import org.gearman.GearmanJobEventCallback ; import org.gearman.GearmanJoin ; import org.gearman.GearmanServer ; /** * The echo client submits an \"echo\" job to a job server and prints the final * result. It's the \"Hello World\" of the java-geraman-service * * The echo example illustrates how send a single job and get the result */ public class EchoClientAsynchronous implements GearmanJobEventCallback < String > { public static void main ( String ... args ) throws InterruptedException { /* * Create a Gearman instance */ final Gearman gearman = Gearman . createGearman (); /* * Create a new gearman client. * * The client is used to submit requests the job server. */ GearmanClient client = gearman . createGearmanClient (); /* * Create the job server object. This call creates an object representing * a remote job server. * * Parameter 1: the host address of the job server. * Parameter 2: the port number the job server is listening on. * * A job server receives jobs from clients and distributes them to * registered workers. */ GearmanServer server = gearman . createGearmanServer ( EchoWorker . ECHO_HOST , EchoWorker . ECHO_PORT ); /* * Tell the client that it may connect to this server when submitting * jobs. */ client . addServer ( server ); /* * Submit a job to a job server. This submit method uses an * asynchronous callback object to process the job's result * * Parameter 1: the gearman function name * Parameter 2: the data passed to the server and worker * Parameter 3: an attachment returned through the callback * Parameter 4: the callback used to process the job events * * The GearmanJoin object is used to block the current thread * until the end-of-file has been reached. */ GearmanJoin < String > join = client . submitJob ( EchoWorker . ECHO_FUNCTION_NAME , ( \"Hello World\" ). getBytes (), EchoWorker . ECHO_FUNCTION_NAME , new EchoClientAsynchronous ()); /* * Block the current thread until all events have been processed. */ join . join (); /* * After the job has been completely processed. We close the service * * It's suggested that you reuse Gearman and GearmanClient instances * rather recreating and closing new ones between submissions */ gearman . shutdown (); } @Override public void onEvent ( String attachment , GearmanJobEvent event ) { /* * This method is called by the client when an event is received */ switch ( event . getEventType ()) { case GEARMAN_JOB_SUCCESS : // Job completed successfully System . out . println ( new String ( event . getData ())); break ; case GEARMAN_SUBMIT_FAIL : // The job submit operation failed case GEARMAN_JOB_FAIL : // The job's execution failed System . err . println ( event . getEventType () + \": \" + new String ( event . getData ())); default : } } } \u5f02\u6b65Client\u9700\u5b9e\u73b0GearmanJobEventCallback \uff0c onEvent() \u76d1\u542c\u8fd4\u56de\u4e8b\u4ef6\uff0c\u5e76\u63a5\u6536Worker\u7ecf\u8fc7\u5904\u7406\u7684\u6570\u636e\u3002 \u8fd0\u884c Worker Start... \u6267\u884cEchoWorker\u7684main\u65b9\u6cd5\uff0clog\u5982\u4e0b [gearman-1] INFO gearman - [192.168.56.102:4730] : Connected [gearman-1] INFO gearman - [192.168.56.102:4730] : OUT : CAN_DO [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : NO_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : PRE_SLEEP Worker\u5728\u7b49\u5f85\u4efb\u52a1\u63d0\u4ea4\u72b6\u6001\u3002 Client Start... \u6267\u884cEchoClient\u7684main\u65b9\u6cd5\uff0clog\u5982\u4e0b [gearman-1] INFO gearman - [192.168.56.102:4730] : Connected [gearman-1] INFO gearman - [192.168.56.102:4730] : OUT : SUBMIT_JOB [gearman-1] INFO gearman - [192.168.56.102:4730] : IN : JOB_CREATED [gearman-1] INFO gearman - [192.168.56.102:4730] : IN : WORK_COMPLETE [main] INFO gearman - [192.168.56.102:4730] : Disconnected Hello World \u6b64\u65f6Client\u5df2\u7ecf\u63a5\u6536Worker\u76f4\u63a5\u8fd4\u56de\u7684 Hello World \u3002\u518d\u56de\u5934\u770b\u770bWorker\u7684log\uff0c\u5982\u4e0b [gearman-3] INFO gearman - [192.168.56.102:4730] : Connected [gearman-3] INFO gearman - [192.168.56.102:4730] : OUT : CAN_DO [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-5] INFO gearman - [192.168.56.102:4730] : IN : NO_JOB [gearman-5] INFO gearman - [192.168.56.102:4730] : OUT : PRE_SLEEP [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : NOOP [gearman-5] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : JOB_ASSIGN [gearman-3] INFO gearman - [192.168.56.102:4730] : OUT : WORK_COMPLETE [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : NO_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : PRE_SLEEP Worker\u6267\u884c\u5b8c\u4efb\u52a1\u540e\uff0c\u7ee7\u7eed\u7b49\u5f85\u63a5\u6536\u65b0\u7684\u4efb\u52a1\u3002","title":"Gearman\uff08\u4e8c\uff09"},{"location":"blog/2015/gearman-02/#gearman","text":"2015-09-06 10:49","title":"Gearman\uff08\u4e8c\uff09"},{"location":"blog/2015/gearman-02/#simple-demo","text":"\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ec5\u4ec5\u662f\u8f93\u51faHello world\u7684\u5b9e\u4f8b\u3002 \u521b\u5efa\u4e00\u4e2aMaven\u9879\u76ee\uff0c\u5728pom.xml\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0bjar\u5305 <!-- Java Gearman Service --> <dependency> <groupId> org.gearman.jgs </groupId> <artifactId> java-gearman-service </artifactId> <version> 0.7.0-SNAPSHOT </version> <type> jar </type> </dependency> \u8be5jar\u5305\u5305\u542bClient\u548cWorker\u7684\u5ba2\u6237\u7aefAPI\u3002 Worker\uff1aEchoWorker package org.gearman.examples.echo ; import org.gearman.Gearman ; import org.gearman.GearmanFunction ; import org.gearman.GearmanFunctionCallback ; import org.gearman.GearmanServer ; import org.gearman.GearmanWorker ; /** * The echo worker polls jobs from a job server and execute the echo function. * * The echo worker illustrates how to setup a basic worker */ public class EchoWorker implements GearmanFunction { /** The echo function name */ public static final String ECHO_FUNCTION_NAME = \"echo\" ; /** The host address of the job server */ public static final String ECHO_HOST = \"127.0.0.1\" ; /** The port number the job server is listening on */ public static final int ECHO_PORT = 4730 ; public static void main ( String ... args ) { /* * Create a Gearman instance */ Gearman gearman = Gearman . createGearman (); /* * Create the job server object. This call creates an object represents * a remote job server. * * Parameter 1: the host address of the job server. * Parameter 2: the port number the job server is listening on. * * A job server receives jobs from clients and distributes them to * registered workers. */ GearmanServer server = gearman . createGearmanServer ( EchoWorker . ECHO_HOST , EchoWorker . ECHO_PORT ); /* * Create a gearman worker. The worker poll jobs from the server and * executes the corresponding GearmanFunction */ GearmanWorker worker = gearman . createGearmanWorker (); /* * Tell the worker how to perform the echo function */ worker . addFunction ( EchoWorker . ECHO_FUNCTION_NAME , new EchoWorker ()); /* * Tell the worker that it may communicate with the this job server */ worker . addServer ( server ); } @Override public byte [] work ( String function , byte [] data , GearmanFunctionCallback callback ) throws Exception { /* * The work method performs the gearman function. In this case, the echo * function simply returns the data it received */ return data ; } } GearmanWorker\u7684 addFunction() \u65b9\u6cd5\u544a\u8bc9Server FUNCTION_NAME\u548c\u5bf9\u5e94\u7684Worker\u3002\u4eceClient\u4f20\u5165\u7684\u6570\u636e\u4f1a\u4ee5\u5b57\u8282\u6d41\u7684\u5f62\u5f0f\u5728Worker\u7684 work() \u65b9\u6cd5\u4e2d\u5f97\u5230\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8be5\u65b9\u6cd5\u4e2d\u8fdb\u884c\u5904\u7406\u3002 Client EchoClient\uff1a\u540c\u6b65\u7684Client package org.gearman.examples.echo ; import org.gearman.Gearman ; import org.gearman.GearmanClient ; import org.gearman.GearmanJobEvent ; import org.gearman.GearmanJobReturn ; import org.gearman.GearmanServer ; /** * The echo client submits an \"echo\" job to a job server and prints the final * result. It's the \"Hello World\" of the java-geraman-service * * The echo example illustrates how send a single job and get the result */ public class EchoClient { public static void main ( String ... args ) throws InterruptedException { /* * Create a Gearman instance */ Gearman gearman = Gearman . createGearman (); /* * Create a new gearman client. * * The client is used to submit requests the job server. */ GearmanClient client = gearman . createGearmanClient (); /* * Create the job server object. This call creates an object represents * a remote job server. * * Parameter 1: the host address of the job server. * Parameter 2: the port number the job server is listening on. * * A job server receives jobs from clients and distributes them to * registered workers. */ GearmanServer server = gearman . createGearmanServer ( EchoWorker . ECHO_HOST , EchoWorker . ECHO_PORT ); /* * Tell the client that it may connect to this server when submitting * jobs. */ client . addServer ( server ); /* * Submit a job to a job server. * * Parameter 1: the gearman function name * Parameter 2: the data passed to the server and worker * * The GearmanJobReturn is used to poll the job's result */ GearmanJobReturn jobReturn = client . submitJob ( EchoWorker . ECHO_FUNCTION_NAME , ( \"Hello World\" ). getBytes ()); /* * Iterate through the job events until we hit the end-of-file */ while ( ! jobReturn . isEOF ()) { // Poll the next job event (blocking operation) GearmanJobEvent event = jobReturn . poll (); switch ( event . getEventType ()) { // success case GEARMAN_JOB_SUCCESS : // Job completed successfully // print the result System . out . println ( new String ( event . getData ())); break ; // failure case GEARMAN_SUBMIT_FAIL : // The job submit operation failed case GEARMAN_JOB_FAIL : // The job's execution failed System . err . println ( event . getEventType () + \": \" + new String ( event . getData ())); default : } } /* * Close the gearman service after it's no longer needed. (closes all * sub-services, such as the client) * * It's suggested that you reuse Gearman and GearmanClient instances * rather recreating and closing new ones between submissions */ gearman . shutdown (); } } \u540c\u6b65\u7684Client\u901a\u8fc7GearmanClient\u7684 submitJob(String functionName, byte[] data); \u65b9\u6cd5\u63d0\u4ea4\u4efb\u52a1\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f97\u5230Worker\u5728 work() \u65b9\u6cd5\u4e2d\u7ecf\u8fc7\u5904\u7406\u8fd4\u56de\u7684\u6570\u636e\u3002\u5982\u679c\u901a\u8fc7\u5c06\u4efb\u52a1\u63d0\u4ea4\u540e\u53f0\u6267\u884c\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u91c7\u7528 submitBackgroundJob(String functionName, byte[] data); \u65b9\u6cd5\uff0c\u4f18\u70b9\u662fClient\u7684\u6267\u884c\u6548\u7387\u4f1a\u5feb\u5f88\u591a\uff0c\u7f3a\u70b9\u662f\u4e0d\u80fd\u63a5\u6536\u8fd4\u56de\u503c\u3002 EchoClientAsynchronous\uff1a\u5f02\u6b65\u7684Client package org.gearman.examples.echo ; import org.gearman.Gearman ; import org.gearman.GearmanClient ; import org.gearman.GearmanJobEvent ; import org.gearman.GearmanJobEventCallback ; import org.gearman.GearmanJoin ; import org.gearman.GearmanServer ; /** * The echo client submits an \"echo\" job to a job server and prints the final * result. It's the \"Hello World\" of the java-geraman-service * * The echo example illustrates how send a single job and get the result */ public class EchoClientAsynchronous implements GearmanJobEventCallback < String > { public static void main ( String ... args ) throws InterruptedException { /* * Create a Gearman instance */ final Gearman gearman = Gearman . createGearman (); /* * Create a new gearman client. * * The client is used to submit requests the job server. */ GearmanClient client = gearman . createGearmanClient (); /* * Create the job server object. This call creates an object representing * a remote job server. * * Parameter 1: the host address of the job server. * Parameter 2: the port number the job server is listening on. * * A job server receives jobs from clients and distributes them to * registered workers. */ GearmanServer server = gearman . createGearmanServer ( EchoWorker . ECHO_HOST , EchoWorker . ECHO_PORT ); /* * Tell the client that it may connect to this server when submitting * jobs. */ client . addServer ( server ); /* * Submit a job to a job server. This submit method uses an * asynchronous callback object to process the job's result * * Parameter 1: the gearman function name * Parameter 2: the data passed to the server and worker * Parameter 3: an attachment returned through the callback * Parameter 4: the callback used to process the job events * * The GearmanJoin object is used to block the current thread * until the end-of-file has been reached. */ GearmanJoin < String > join = client . submitJob ( EchoWorker . ECHO_FUNCTION_NAME , ( \"Hello World\" ). getBytes (), EchoWorker . ECHO_FUNCTION_NAME , new EchoClientAsynchronous ()); /* * Block the current thread until all events have been processed. */ join . join (); /* * After the job has been completely processed. We close the service * * It's suggested that you reuse Gearman and GearmanClient instances * rather recreating and closing new ones between submissions */ gearman . shutdown (); } @Override public void onEvent ( String attachment , GearmanJobEvent event ) { /* * This method is called by the client when an event is received */ switch ( event . getEventType ()) { case GEARMAN_JOB_SUCCESS : // Job completed successfully System . out . println ( new String ( event . getData ())); break ; case GEARMAN_SUBMIT_FAIL : // The job submit operation failed case GEARMAN_JOB_FAIL : // The job's execution failed System . err . println ( event . getEventType () + \": \" + new String ( event . getData ())); default : } } } \u5f02\u6b65Client\u9700\u5b9e\u73b0GearmanJobEventCallback \uff0c onEvent() \u76d1\u542c\u8fd4\u56de\u4e8b\u4ef6\uff0c\u5e76\u63a5\u6536Worker\u7ecf\u8fc7\u5904\u7406\u7684\u6570\u636e\u3002 \u8fd0\u884c Worker Start... \u6267\u884cEchoWorker\u7684main\u65b9\u6cd5\uff0clog\u5982\u4e0b [gearman-1] INFO gearman - [192.168.56.102:4730] : Connected [gearman-1] INFO gearman - [192.168.56.102:4730] : OUT : CAN_DO [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : NO_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : PRE_SLEEP Worker\u5728\u7b49\u5f85\u4efb\u52a1\u63d0\u4ea4\u72b6\u6001\u3002 Client Start... \u6267\u884cEchoClient\u7684main\u65b9\u6cd5\uff0clog\u5982\u4e0b [gearman-1] INFO gearman - [192.168.56.102:4730] : Connected [gearman-1] INFO gearman - [192.168.56.102:4730] : OUT : SUBMIT_JOB [gearman-1] INFO gearman - [192.168.56.102:4730] : IN : JOB_CREATED [gearman-1] INFO gearman - [192.168.56.102:4730] : IN : WORK_COMPLETE [main] INFO gearman - [192.168.56.102:4730] : Disconnected Hello World \u6b64\u65f6Client\u5df2\u7ecf\u63a5\u6536Worker\u76f4\u63a5\u8fd4\u56de\u7684 Hello World \u3002\u518d\u56de\u5934\u770b\u770bWorker\u7684log\uff0c\u5982\u4e0b [gearman-3] INFO gearman - [192.168.56.102:4730] : Connected [gearman-3] INFO gearman - [192.168.56.102:4730] : OUT : CAN_DO [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-5] INFO gearman - [192.168.56.102:4730] : IN : NO_JOB [gearman-5] INFO gearman - [192.168.56.102:4730] : OUT : PRE_SLEEP [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : NOOP [gearman-5] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : JOB_ASSIGN [gearman-3] INFO gearman - [192.168.56.102:4730] : OUT : WORK_COMPLETE [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : GRAB_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : IN : NO_JOB [gearman-4] INFO gearman - [192.168.56.102:4730] : OUT : PRE_SLEEP Worker\u6267\u884c\u5b8c\u4efb\u52a1\u540e\uff0c\u7ee7\u7eed\u7b49\u5f85\u63a5\u6536\u65b0\u7684\u4efb\u52a1\u3002","title":"Simple Demo"},{"location":"blog/2015/gearman-03/","tags":["PHP","Gearman"],"text":"Gearman\uff08\u4e09\uff09 \u00b6 2015-09-06 15:29 \u76d1\u63a7\u5de5\u5177\uff1aGearman-Monitor \u00b6 Gearman-Monitor\u662f\u4f7f\u7528PHP\u5b9e\u73b0\u7684Gearman Servers\u7684\u76d1\u63a7\u5de5\u5177\u3002 Github\u4ed3\u5e93 \u5728\u6b64\u3002 \u9996\u5148\u51c6\u5907\u597dPHP\u73af\u5883\u548c\u4e00\u4e2aApache\u670d\u52a1\u5668\u3002\u6211\u628a\u5b83\u88c5\u5728\u672c\u673a\u4e0a\uff0c\u73af\u5883\u662f64\u4f4d\u7684Win7\u3002\u91c7\u7528\u7684PHP\u73af\u5883\u662f PHP 5.5.29 \uff0cWeb Server\u662f Apache 2.4.12 \u3002 \u5c06\u4e0b\u8f7d\u7684Gearman-Monitor\u89e3\u538b\u81f3apache\u7684 htdocs \uff0c\u542f\u52a8apache\uff0c\u6253\u5f00 http://127.0.0.1/Gearman-Monitor/index.php \uff0c\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\u3002 Net_Gearman package not found! You can get it at http://pear.php.net/package/Net_Gearman/ or install by pear: pear install Net_Gearman \u539f\u56e0\u662fGearman-Monitor\u9700\u8981\u57fa\u4e8epear\u7684Net_Gearman\u5305\u3002Net_Gearman\u7684 \u4e0b\u8f7d\u5730\u5740 \u5728\u6b64\u3002Net_Gearman\u7684\u4f7f\u7528\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u662f\u76f4\u63a5\u5c06Net_Gearman\u5305\u4e0b\u7684Net\u6587\u4ef6\u5939copy\u5230PHP\u7684\u6839\u76ee\u5f55\u4e0b\uff08\u53e6\u4e00\u8bf4\u662fPHP\u7684lib\u76ee\u5f55\u4e0b\u7684PHP\u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u8bd5\u9a8c\u8fc7\u3002\u4e8c\u662f\u5b89\u88c5pear\uff0c\u6267\u884c pear install Net_Gearman-0.2.3 \u5373\u53ef\u3002\u4e0b\u9762\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u5b89\u88c5\u3002 \u5b89\u88c5pear \u4e3a\u9632\u6b62\u5b89\u88c5\u65f6\u51fa\u73b0\u6743\u9650\u95ee\u9898\uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00CMD\u3002\u5148\u4e0b\u8f7d http://pear.php.net/go-pear.phar \u6587\u4ef6\u5230PHP\u6839\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u6267\u884c\uff1a D:\\twen\\php-5.5.29>php go-pear.phar \u51fa\u73b0\u63d0\u793a\uff1a Are you installing a system-wide PEAR or a local copy? (system|local) [system] : \u76f4\u63a5 Enter \uff0c\u91c7\u7528\u9ed8\u8ba4system\u3002 Below is a suggested file layout for your new PEAR installation. To change individual locations, type the number in front of the directory. Type 'all' to change all of them or simply press Enter to accept these locations. 1. Installation base ($prefix) : D:\\twen\\php-5.5.29 2. Temporary directory for processing : D:\\twen\\php-5.5.29\\tmp 3. Temporary directory for downloads : D:\\twen\\php-5.5.29\\tmp 4. Binaries directory : D:\\twen\\php-5.5.29 5. PHP code directory ($php_dir) : D:\\twen\\php-5.5.29\\pear 6. Documentation directory : D:\\twen\\php-5.5.29\\docs 7. Data directory : D:\\twen\\php-5.5.29\\data 8. User-modifiable configuration files directory : D:\\twen\\php-5.5.29\\cfg 9. Public Web Files directory : D:\\twen\\php-5.5.29\\www 10. Tests directory : D:\\twen\\php-5.5.29\\tests 11. Name of configuration file : C:\\Windows\\pear.ini 12. Path to CLI php.exe : D:\\twen\\php-5.5.29 1-12, 'all' or Enter to continue: \u76f4\u63a5 Enter \uff0c\u63a5\u7740\u4f1a\u51fa\u73b0\u4e00\u4e9b\u8b66\u544a\uff0c\u4f8b\u5982\uff1a Beginning install... PHP Warning: date(): It is not safe to rely on the system's timezone settings. You are *required* to use the date.timez one setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone 'UTC' for now, but please se t date.timezone to select your timezone. in phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/Registry.php on line 1012 \u56e0\u4e3a\u5b89\u88c5PHP\u73af\u5883\u662f\u6211\u6ca1\u6709\u8bbe\u7f6e\u65f6\u533a\uff0c\u8fd9\u91cc\u5148\u5ffd\u7565\u3002 Configuration written to C:\\Windows\\pear.ini... Initialized registry... Preparing to install... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/Archive_Tar-1.3.12.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/Console_Getopt-1.3.1.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/PEAR-1.9.5.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/Structures_Graph-1.0.4.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/XML_Util-1.2.3.tar... install ok: channel://pear.php.net/Archive_Tar-1.3.12 install ok: channel://pear.php.net/Console_Getopt-1.3.1 install ok: channel://pear.php.net/Structures_Graph-1.0.4 install ok: channel://pear.php.net/XML_Util-1.2.3 install ok: channel://pear.php.net/PEAR-1.9.5 PEAR: Optional feature webinstaller available (PEAR's web-based installer) PEAR: Optional feature gtkinstaller available (PEAR's PHP-GTK-based installer) PEAR: Optional feature gtk2installer available (PEAR's PHP-GTK2-based installer) PEAR: To install optional features use \"pear install pear/PEAR#featurename\" ****************************************************************************** WARNING! The include_path defined in the currently used php.ini does not contain the PEAR PHP directory you just specified: <D:\\twen\\php-5.5.29\\pear> If the specified directory is also not in the include_path used by your scripts, you will have problems getting any PEAR packages working. Would you like to alter php.ini <D:\\twen\\php-5.5.29\\php.ini>? [Y/n] : Y \u9009\u62e9 Y \uff0c\u8fd9\u91cc\u589e\u52a0pear\u914d\u7f6e\u5230 php.ini \u3002 php.ini <D:\\twen\\php-5.5.29\\php.ini> include_path updated. Current include path : .;C:\\php\\pear Configured directory : D:\\twen\\php-5.5.29\\pear Currently used php.ini (guess) : D:\\twen\\php-5.5.29\\php.ini Press Enter to continue: ** WARNING! Old version found at D:\\twen\\php-5.5.29, please remove it or be sure to use the new d:\\twen\\php-5.5.29\\pear. bat command The 'pear' command is now at your service at d:\\twen\\php-5.5.29\\pear.bat ** The 'pear' command is not currently in your PATH, so you need to ** use 'd:\\twen\\php-5.5.29\\pear.bat' until you have added ** 'D:\\twen\\php-5.5.29' to your PATH environment variable. Run it without parameters to see the available actions, try 'pear list' to see what packages are installed, or 'pear help' for help. For more information about PEAR, see: http://pear.php.net/faq.php http://pear.php.net/manual/ Thanks for using go-pear! * WINDOWS ENVIRONMENT VARIABLES * For convenience, a REG file is available under D:\\twen\\php-5.5.29PEAR_ENV.reg . This file creates ENV variables for the current user. Double-click this file to add it to the current user registry. \u81f3\u6b64pear\u5b89\u88c5\u5b8c\u6210\uff0c\u6267\u884c pear list \uff0c\u5217\u51fa\u5df2\u5b89\u88c5\u7684\u5305\u3002\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002 D:\\twen\\php-5.5.29>pear list INSTALLED PACKAGES, CHANNEL PEAR.PHP.NET: ========================================= PACKAGE VERSION STATE Archive_Tar 1.3.12 stable Console_Getopt 1.3.1 stable PEAR 1.9.5 stable Structures_Graph 1.0.4 stable XML_Util 1.2.3 stable \u5b89\u88c5Net_Gearman D:\\twen\\php-5.5.29>pear install Net_Gearman-0.2.3 downloading Net_Gearman-0.2.3.tgz ... Starting to download Net_Gearman-0.2.3.tgz (17,572 bytes) .....done: 17,572 bytes install ok: channel://pear.php.net/Net_Gearman-0.2.3 7.\u518d\u6b21\u5237\u65b0 http://127.0.0.1/Gearman-Monitor/index.php \u3002 \u81f3\u6b64\uff0cGearman-Monitor\u5b89\u88c5\u5b8c\u6210\u3002 \u6ce8\uff1a \u914d\u7f6eGearman-Monitor\u53ea\u9700\u914d\u7f6e _config.php ,\u6211\u7684\u914d\u7f6e\u5982\u4e0b\uff1a $i = 0; $cfgServers = array(); $cfgServers[$i]['address'] = '192.168.56.101:4730'; $cfgServers[$i]['name'] = '192.168.56.101'; ++ $i; /** \u591a\u4e2aServer\u914d\u7f6e **/ // $cfgServers[$i]['address'] = '192.168.56.102:4730'; // $cfgServers[$i]['name'] = '192.168.56.102'; // ++ $i;","title":"Gearman\uff08\u4e09\uff09"},{"location":"blog/2015/gearman-03/#gearman","text":"2015-09-06 15:29","title":"Gearman\uff08\u4e09\uff09"},{"location":"blog/2015/gearman-03/#gearman-monitor","text":"Gearman-Monitor\u662f\u4f7f\u7528PHP\u5b9e\u73b0\u7684Gearman Servers\u7684\u76d1\u63a7\u5de5\u5177\u3002 Github\u4ed3\u5e93 \u5728\u6b64\u3002 \u9996\u5148\u51c6\u5907\u597dPHP\u73af\u5883\u548c\u4e00\u4e2aApache\u670d\u52a1\u5668\u3002\u6211\u628a\u5b83\u88c5\u5728\u672c\u673a\u4e0a\uff0c\u73af\u5883\u662f64\u4f4d\u7684Win7\u3002\u91c7\u7528\u7684PHP\u73af\u5883\u662f PHP 5.5.29 \uff0cWeb Server\u662f Apache 2.4.12 \u3002 \u5c06\u4e0b\u8f7d\u7684Gearman-Monitor\u89e3\u538b\u81f3apache\u7684 htdocs \uff0c\u542f\u52a8apache\uff0c\u6253\u5f00 http://127.0.0.1/Gearman-Monitor/index.php \uff0c\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\u3002 Net_Gearman package not found! You can get it at http://pear.php.net/package/Net_Gearman/ or install by pear: pear install Net_Gearman \u539f\u56e0\u662fGearman-Monitor\u9700\u8981\u57fa\u4e8epear\u7684Net_Gearman\u5305\u3002Net_Gearman\u7684 \u4e0b\u8f7d\u5730\u5740 \u5728\u6b64\u3002Net_Gearman\u7684\u4f7f\u7528\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u662f\u76f4\u63a5\u5c06Net_Gearman\u5305\u4e0b\u7684Net\u6587\u4ef6\u5939copy\u5230PHP\u7684\u6839\u76ee\u5f55\u4e0b\uff08\u53e6\u4e00\u8bf4\u662fPHP\u7684lib\u76ee\u5f55\u4e0b\u7684PHP\u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u8bd5\u9a8c\u8fc7\u3002\u4e8c\u662f\u5b89\u88c5pear\uff0c\u6267\u884c pear install Net_Gearman-0.2.3 \u5373\u53ef\u3002\u4e0b\u9762\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u5b89\u88c5\u3002 \u5b89\u88c5pear \u4e3a\u9632\u6b62\u5b89\u88c5\u65f6\u51fa\u73b0\u6743\u9650\u95ee\u9898\uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00CMD\u3002\u5148\u4e0b\u8f7d http://pear.php.net/go-pear.phar \u6587\u4ef6\u5230PHP\u6839\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u6267\u884c\uff1a D:\\twen\\php-5.5.29>php go-pear.phar \u51fa\u73b0\u63d0\u793a\uff1a Are you installing a system-wide PEAR or a local copy? (system|local) [system] : \u76f4\u63a5 Enter \uff0c\u91c7\u7528\u9ed8\u8ba4system\u3002 Below is a suggested file layout for your new PEAR installation. To change individual locations, type the number in front of the directory. Type 'all' to change all of them or simply press Enter to accept these locations. 1. Installation base ($prefix) : D:\\twen\\php-5.5.29 2. Temporary directory for processing : D:\\twen\\php-5.5.29\\tmp 3. Temporary directory for downloads : D:\\twen\\php-5.5.29\\tmp 4. Binaries directory : D:\\twen\\php-5.5.29 5. PHP code directory ($php_dir) : D:\\twen\\php-5.5.29\\pear 6. Documentation directory : D:\\twen\\php-5.5.29\\docs 7. Data directory : D:\\twen\\php-5.5.29\\data 8. User-modifiable configuration files directory : D:\\twen\\php-5.5.29\\cfg 9. Public Web Files directory : D:\\twen\\php-5.5.29\\www 10. Tests directory : D:\\twen\\php-5.5.29\\tests 11. Name of configuration file : C:\\Windows\\pear.ini 12. Path to CLI php.exe : D:\\twen\\php-5.5.29 1-12, 'all' or Enter to continue: \u76f4\u63a5 Enter \uff0c\u63a5\u7740\u4f1a\u51fa\u73b0\u4e00\u4e9b\u8b66\u544a\uff0c\u4f8b\u5982\uff1a Beginning install... PHP Warning: date(): It is not safe to rely on the system's timezone settings. You are *required* to use the date.timez one setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone 'UTC' for now, but please se t date.timezone to select your timezone. in phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/Registry.php on line 1012 \u56e0\u4e3a\u5b89\u88c5PHP\u73af\u5883\u662f\u6211\u6ca1\u6709\u8bbe\u7f6e\u65f6\u533a\uff0c\u8fd9\u91cc\u5148\u5ffd\u7565\u3002 Configuration written to C:\\Windows\\pear.ini... Initialized registry... Preparing to install... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/Archive_Tar-1.3.12.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/Console_Getopt-1.3.1.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/PEAR-1.9.5.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/Structures_Graph-1.0.4.tar... installing phar://D:/twen/php-5.5.29/go-pear.phar/PEAR/go-pear-tarballs/XML_Util-1.2.3.tar... install ok: channel://pear.php.net/Archive_Tar-1.3.12 install ok: channel://pear.php.net/Console_Getopt-1.3.1 install ok: channel://pear.php.net/Structures_Graph-1.0.4 install ok: channel://pear.php.net/XML_Util-1.2.3 install ok: channel://pear.php.net/PEAR-1.9.5 PEAR: Optional feature webinstaller available (PEAR's web-based installer) PEAR: Optional feature gtkinstaller available (PEAR's PHP-GTK-based installer) PEAR: Optional feature gtk2installer available (PEAR's PHP-GTK2-based installer) PEAR: To install optional features use \"pear install pear/PEAR#featurename\" ****************************************************************************** WARNING! The include_path defined in the currently used php.ini does not contain the PEAR PHP directory you just specified: <D:\\twen\\php-5.5.29\\pear> If the specified directory is also not in the include_path used by your scripts, you will have problems getting any PEAR packages working. Would you like to alter php.ini <D:\\twen\\php-5.5.29\\php.ini>? [Y/n] : Y \u9009\u62e9 Y \uff0c\u8fd9\u91cc\u589e\u52a0pear\u914d\u7f6e\u5230 php.ini \u3002 php.ini <D:\\twen\\php-5.5.29\\php.ini> include_path updated. Current include path : .;C:\\php\\pear Configured directory : D:\\twen\\php-5.5.29\\pear Currently used php.ini (guess) : D:\\twen\\php-5.5.29\\php.ini Press Enter to continue: ** WARNING! Old version found at D:\\twen\\php-5.5.29, please remove it or be sure to use the new d:\\twen\\php-5.5.29\\pear. bat command The 'pear' command is now at your service at d:\\twen\\php-5.5.29\\pear.bat ** The 'pear' command is not currently in your PATH, so you need to ** use 'd:\\twen\\php-5.5.29\\pear.bat' until you have added ** 'D:\\twen\\php-5.5.29' to your PATH environment variable. Run it without parameters to see the available actions, try 'pear list' to see what packages are installed, or 'pear help' for help. For more information about PEAR, see: http://pear.php.net/faq.php http://pear.php.net/manual/ Thanks for using go-pear! * WINDOWS ENVIRONMENT VARIABLES * For convenience, a REG file is available under D:\\twen\\php-5.5.29PEAR_ENV.reg . This file creates ENV variables for the current user. Double-click this file to add it to the current user registry. \u81f3\u6b64pear\u5b89\u88c5\u5b8c\u6210\uff0c\u6267\u884c pear list \uff0c\u5217\u51fa\u5df2\u5b89\u88c5\u7684\u5305\u3002\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002 D:\\twen\\php-5.5.29>pear list INSTALLED PACKAGES, CHANNEL PEAR.PHP.NET: ========================================= PACKAGE VERSION STATE Archive_Tar 1.3.12 stable Console_Getopt 1.3.1 stable PEAR 1.9.5 stable Structures_Graph 1.0.4 stable XML_Util 1.2.3 stable \u5b89\u88c5Net_Gearman D:\\twen\\php-5.5.29>pear install Net_Gearman-0.2.3 downloading Net_Gearman-0.2.3.tgz ... Starting to download Net_Gearman-0.2.3.tgz (17,572 bytes) .....done: 17,572 bytes install ok: channel://pear.php.net/Net_Gearman-0.2.3 7.\u518d\u6b21\u5237\u65b0 http://127.0.0.1/Gearman-Monitor/index.php \u3002 \u81f3\u6b64\uff0cGearman-Monitor\u5b89\u88c5\u5b8c\u6210\u3002 \u6ce8\uff1a \u914d\u7f6eGearman-Monitor\u53ea\u9700\u914d\u7f6e _config.php ,\u6211\u7684\u914d\u7f6e\u5982\u4e0b\uff1a $i = 0; $cfgServers = array(); $cfgServers[$i]['address'] = '192.168.56.101:4730'; $cfgServers[$i]['name'] = '192.168.56.101'; ++ $i; /** \u591a\u4e2aServer\u914d\u7f6e **/ // $cfgServers[$i]['address'] = '192.168.56.102:4730'; // $cfgServers[$i]['name'] = '192.168.56.102'; // ++ $i;","title":"\u76d1\u63a7\u5de5\u5177\uff1aGearman-Monitor"},{"location":"blog/2015/httpsqs-01/","tags":["HTTPSQS"],"text":"HTTPSQS\uff08\u4e00\uff09 \u00b6 2015-09-15 13:40 \u7b80\u5355\u4ecb\u7ecd \u00b6 HTTPSQS\uff08HTTP Simple Queue Service\uff09\u662f\u4e00\u6b3e\u57fa\u4e8e HTTP GET/POST \u534f\u8bae\u7684\u8f7b\u91cf\u7ea7\u5f00\u6e90\u7b80\u5355\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u4f7f\u7528 Tokyo Cabinet \u7684 B+Tree Key/Value \u6570\u636e\u5e93\u6765\u505a\u6570\u636e\u7684\u6301\u4e45\u5316\u5b58\u50a8\u3002 HTTPSQS \u5177\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a - \u975e\u5e38\u7b80\u5355\uff0c\u57fa\u4e8e HTTP GET/POST \u534f\u8bae\u3002PHP\u3001Java\u3001Perl\u3001Shell\u3001Python\u3001Ruby\u7b49\u652f\u6301HTTP\u534f\u8bae\u7684\u7f16\u7a0b\u8bed\u8a00\u5747\u53ef\u8c03\u7528\u3002 - \u975e\u5e38\u5feb\u901f\uff0c\u5165\u961f\u5217\u3001\u51fa\u961f\u5217\u901f\u5ea6\u8d85\u8fc710000\u6b21/\u79d2\u3002 - \u9ad8\u5e76\u53d1\uff0c\u652f\u6301\u4e0a\u4e07\u7684\u5e76\u53d1\u8fde\u63a5\uff0cC10K\u4e0d\u6210\u95ee\u9898\u3002 - \u652f\u6301\u591a\u961f\u5217\u3002 - \u5355\u4e2a\u961f\u5217\u652f\u6301\u7684\u6700\u5927\u961f\u5217\u6570\u91cf\u9ad8\u8fbe10\u4ebf\u6761\u3002 - \u4f4e\u5185\u5b58\u6d88\u8017\uff0c\u6d77\u91cf\u6570\u636e\u5b58\u50a8\uff0c\u5b58\u50a8\u51e0\u5341GB\u7684\u6570\u636e\u53ea\u9700\u4e0d\u5230100MB\u7684\u7269\u7406\u5185\u5b58\u7f13\u51b2\u533a\u3002 - \u53ef\u4ee5\u5728\u4e0d\u505c\u6b62\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\u4fbf\u6377\u5730\u4fee\u6539\u5355\u4e2a\u961f\u5217\u7684\u6700\u5927\u961f\u5217\u6570\u91cf\u3002 - \u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u961f\u5217\u72b6\u6001\uff08\u5165\u961f\u5217\u4f4d\u7f6e\u3001\u51fa\u961f\u5217\u4f4d\u7f6e\u3001\u672a\u8bfb\u961f\u5217\u6570\u91cf\u3001\u6700\u5927\u961f\u5217\u6570\u91cf\uff09\u3002 - \u53ef\u4ee5\u67e5\u770b\u6307\u5b9a\u961f\u5217ID\uff08\u961f\u5217\u70b9\uff09\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u672a\u51fa\u3001\u5df2\u51fa\u7684\u961f\u5217\u5185\u5bb9\u3002 - \u67e5\u770b\u961f\u5217\u5185\u5bb9\u65f6\uff0c\u652f\u6301\u591a\u5b57\u7b26\u96c6\u7f16\u7801\u3002 - \u6e90\u4ee3\u7801\u4e0d\u8d85\u8fc7800\u884c\uff0c\u9002\u5408\u4e8c\u6b21\u5f00\u53d1\u3002 \u63a8\u8350 : \u57fa\u4e8eHTTP\u534f\u8bae\u7684\u8f7b\u91cf\u7ea7\u5f00\u6e90\u7b80\u5355\u961f\u5217\u670d\u52a1\uff1aHTTPSQS[\u539f\u521b] -------------HTTPSQS\u4f5c\u8005\u5f20\u5bb4 HTTPSQS\u5b89\u88c5 \u00b6 \u5b89\u88c5\u4f9d\u8d56\uff08\u672c\u673a\u662fcentos6.6-DVD1 miniDeskTop\u7248\u672c\uff0c\u5df2\u5b89\u88c5yum\u5de5\u5177\uff09 libevent cd /usr/servers wget http://httpsqs.googlecode.com/files/libevent-2.0.12-stable.tar.gz tar -zxvf libevent-2.0.12-stable.tar.gz cd libevent-2.0.12-stable/ ./configure --prefix = /usr/local/libevent-2.0.12-stable/ \u5982\u679c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u63d0\u793a\u7f3a\u5c11zlib.h\u6216\u8005bzlib.h\uff0c\u5229\u7528yum\u5b89\u88c5zlib-devel\u6216\u8005bzip2-devel yum install zlib-devel yum install bzip2-devel make make install cd ../ tokyocabinet wget http://httpsqs.googlecode.com/files/tokyocabinet-1.4.47.tar.gz tar zxvf tokyocabinet-1.4.47.tar.gz cd tokyocabinet-1.4.47/ ./configure --prefix = /usr/local/tokyocabinet-1.4.47/ #\u6ce8\uff1a\u572832\u4f4dLinux\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7f16\u8bd1Tokyo cabinet\uff0c\u8bf7\u4f7f\u7528./configure --enable-off64\u4ee3\u66ff./configure\uff0c\u53ef\u4ee5\u4f7f\u6570\u636e\u5e93\u6587\u4ef6\u7a81\u78342GB\u7684\u9650\u5236\u3002 #./configure --enable-off64 --prefix=/usr/local/tokyocabinet-1.4.47/ make make install cd ../ \u81f3\u6b64\uff0c\u4f9d\u8d56\u5b89\u88c5\u5b8c\u6210\u3002 \u5b89\u88c5httpsqs-1.7 wget http://httpsqs.googlecode.com/files/httpsqs-1.7.tar.gz tar zxvf httpsqs-1.7.tar.gz cd httpsqs-1.7/ make ------------------------------------------------------------------------ gcc -o httpsqs httpsqs.c prename.c -Wl,-rpath,/usr/local/libevent-2.0.12-stable/lib/:/usr/local/tokyocabinet-1.4.47/lib/ -L/usr/local/libevent-2.0.12-stable/lib/ -levent -L/usr/local/tokyocabinet-1.4.47/lib/ -ltokyocabinet -I/usr/local/libevent-2.0.12-stable/include/ -I/usr/local/tokyocabinet-1.4.47/include/ -lz -lbz2 -lrt -lpthread -lm -lc -O2 -g httpsqs build complete. ------------------------------------------------------------------------ make install ------------------------------------------------------------------------ install -m 4755 -o root httpsqs /usr/bin ------------------------------------------------------------------------ \u6267\u884c httpsqs -h \uff0c\u51fa\u73b0\u5e2e\u52a9\u6587\u6863 [ root@localhost httpsqs-1.7 ] # httpsqs -h ------------------------------------------------------------------------ HTTP Simple Queue Service - httpsqs v1.7 ( April 14 , 2011 ) Author: Zhang Yan ( http://blog.s135.com ) , E-mail: net@s135.com This is free software, and you are welcome to modify and redistribute it under the New BSD License -l <ip_addr> interface to listen on, default is 0 .0.0.0 -p <num> TCP port number to listen on ( default: 1218 ) -x <path> database directory ( example: /opt/httpsqs/data ) -t <second> keep-alive timeout for an http request ( default: 60 ) -s <second> the interval to sync updated contents to the disk ( default: 5 ) -c <num> the maximum number of non-leaf nodes to be cached ( default: 1024 ) -m <size> database memory cache size in MB ( default: 100 ) -i <file> save PID in <file> ( default: /tmp/httpsqs.pid ) -a <auth> the auth password to access httpsqs ( example: mypass123 ) -d run as a daemon -h print this help and exit Use command \"killall httpsqs\" , \"pkill httpsqs\" and \"kill `cat /tmp/httpsqs.pid`\" to stop httpsqs. Please note that don ' t use the command \"pkill -9 httpsqs\" and \"kill -9 PID of httpsqs\" ! Please visit \"http://code.google.com/p/httpsqs\" for more help information. ------------------------------------------------------------------------ \u81f3\u6b64\uff0c\u5b89\u88c5\u5b8c\u6210\u3002 \u6ce8 \uff1a\u4e0d\u8981\u5c06\u4f9d\u8d56\u5305 libevent \u548c tokyocabinet \u89e3\u538b\u8def\u5f84\u4e0d\u8981\u5728 /usr/local/ \u4e0b\uff0c\u5426\u5219 ./configure \u7684\u65f6\u5019\u4f1a\u62a5\u51b2\u7a81\u3002","title":"HTTPSQS\uff08\u4e00\uff09"},{"location":"blog/2015/httpsqs-01/#httpsqs","text":"2015-09-15 13:40","title":"HTTPSQS\uff08\u4e00\uff09"},{"location":"blog/2015/httpsqs-01/#_1","text":"HTTPSQS\uff08HTTP Simple Queue Service\uff09\u662f\u4e00\u6b3e\u57fa\u4e8e HTTP GET/POST \u534f\u8bae\u7684\u8f7b\u91cf\u7ea7\u5f00\u6e90\u7b80\u5355\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u4f7f\u7528 Tokyo Cabinet \u7684 B+Tree Key/Value \u6570\u636e\u5e93\u6765\u505a\u6570\u636e\u7684\u6301\u4e45\u5316\u5b58\u50a8\u3002 HTTPSQS \u5177\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a - \u975e\u5e38\u7b80\u5355\uff0c\u57fa\u4e8e HTTP GET/POST \u534f\u8bae\u3002PHP\u3001Java\u3001Perl\u3001Shell\u3001Python\u3001Ruby\u7b49\u652f\u6301HTTP\u534f\u8bae\u7684\u7f16\u7a0b\u8bed\u8a00\u5747\u53ef\u8c03\u7528\u3002 - \u975e\u5e38\u5feb\u901f\uff0c\u5165\u961f\u5217\u3001\u51fa\u961f\u5217\u901f\u5ea6\u8d85\u8fc710000\u6b21/\u79d2\u3002 - \u9ad8\u5e76\u53d1\uff0c\u652f\u6301\u4e0a\u4e07\u7684\u5e76\u53d1\u8fde\u63a5\uff0cC10K\u4e0d\u6210\u95ee\u9898\u3002 - \u652f\u6301\u591a\u961f\u5217\u3002 - \u5355\u4e2a\u961f\u5217\u652f\u6301\u7684\u6700\u5927\u961f\u5217\u6570\u91cf\u9ad8\u8fbe10\u4ebf\u6761\u3002 - \u4f4e\u5185\u5b58\u6d88\u8017\uff0c\u6d77\u91cf\u6570\u636e\u5b58\u50a8\uff0c\u5b58\u50a8\u51e0\u5341GB\u7684\u6570\u636e\u53ea\u9700\u4e0d\u5230100MB\u7684\u7269\u7406\u5185\u5b58\u7f13\u51b2\u533a\u3002 - \u53ef\u4ee5\u5728\u4e0d\u505c\u6b62\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\u4fbf\u6377\u5730\u4fee\u6539\u5355\u4e2a\u961f\u5217\u7684\u6700\u5927\u961f\u5217\u6570\u91cf\u3002 - \u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u961f\u5217\u72b6\u6001\uff08\u5165\u961f\u5217\u4f4d\u7f6e\u3001\u51fa\u961f\u5217\u4f4d\u7f6e\u3001\u672a\u8bfb\u961f\u5217\u6570\u91cf\u3001\u6700\u5927\u961f\u5217\u6570\u91cf\uff09\u3002 - \u53ef\u4ee5\u67e5\u770b\u6307\u5b9a\u961f\u5217ID\uff08\u961f\u5217\u70b9\uff09\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u672a\u51fa\u3001\u5df2\u51fa\u7684\u961f\u5217\u5185\u5bb9\u3002 - \u67e5\u770b\u961f\u5217\u5185\u5bb9\u65f6\uff0c\u652f\u6301\u591a\u5b57\u7b26\u96c6\u7f16\u7801\u3002 - \u6e90\u4ee3\u7801\u4e0d\u8d85\u8fc7800\u884c\uff0c\u9002\u5408\u4e8c\u6b21\u5f00\u53d1\u3002 \u63a8\u8350 : \u57fa\u4e8eHTTP\u534f\u8bae\u7684\u8f7b\u91cf\u7ea7\u5f00\u6e90\u7b80\u5355\u961f\u5217\u670d\u52a1\uff1aHTTPSQS[\u539f\u521b] -------------HTTPSQS\u4f5c\u8005\u5f20\u5bb4","title":"\u7b80\u5355\u4ecb\u7ecd"},{"location":"blog/2015/httpsqs-01/#httpsqs_1","text":"\u5b89\u88c5\u4f9d\u8d56\uff08\u672c\u673a\u662fcentos6.6-DVD1 miniDeskTop\u7248\u672c\uff0c\u5df2\u5b89\u88c5yum\u5de5\u5177\uff09 libevent cd /usr/servers wget http://httpsqs.googlecode.com/files/libevent-2.0.12-stable.tar.gz tar -zxvf libevent-2.0.12-stable.tar.gz cd libevent-2.0.12-stable/ ./configure --prefix = /usr/local/libevent-2.0.12-stable/ \u5982\u679c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u63d0\u793a\u7f3a\u5c11zlib.h\u6216\u8005bzlib.h\uff0c\u5229\u7528yum\u5b89\u88c5zlib-devel\u6216\u8005bzip2-devel yum install zlib-devel yum install bzip2-devel make make install cd ../ tokyocabinet wget http://httpsqs.googlecode.com/files/tokyocabinet-1.4.47.tar.gz tar zxvf tokyocabinet-1.4.47.tar.gz cd tokyocabinet-1.4.47/ ./configure --prefix = /usr/local/tokyocabinet-1.4.47/ #\u6ce8\uff1a\u572832\u4f4dLinux\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7f16\u8bd1Tokyo cabinet\uff0c\u8bf7\u4f7f\u7528./configure --enable-off64\u4ee3\u66ff./configure\uff0c\u53ef\u4ee5\u4f7f\u6570\u636e\u5e93\u6587\u4ef6\u7a81\u78342GB\u7684\u9650\u5236\u3002 #./configure --enable-off64 --prefix=/usr/local/tokyocabinet-1.4.47/ make make install cd ../ \u81f3\u6b64\uff0c\u4f9d\u8d56\u5b89\u88c5\u5b8c\u6210\u3002 \u5b89\u88c5httpsqs-1.7 wget http://httpsqs.googlecode.com/files/httpsqs-1.7.tar.gz tar zxvf httpsqs-1.7.tar.gz cd httpsqs-1.7/ make ------------------------------------------------------------------------ gcc -o httpsqs httpsqs.c prename.c -Wl,-rpath,/usr/local/libevent-2.0.12-stable/lib/:/usr/local/tokyocabinet-1.4.47/lib/ -L/usr/local/libevent-2.0.12-stable/lib/ -levent -L/usr/local/tokyocabinet-1.4.47/lib/ -ltokyocabinet -I/usr/local/libevent-2.0.12-stable/include/ -I/usr/local/tokyocabinet-1.4.47/include/ -lz -lbz2 -lrt -lpthread -lm -lc -O2 -g httpsqs build complete. ------------------------------------------------------------------------ make install ------------------------------------------------------------------------ install -m 4755 -o root httpsqs /usr/bin ------------------------------------------------------------------------ \u6267\u884c httpsqs -h \uff0c\u51fa\u73b0\u5e2e\u52a9\u6587\u6863 [ root@localhost httpsqs-1.7 ] # httpsqs -h ------------------------------------------------------------------------ HTTP Simple Queue Service - httpsqs v1.7 ( April 14 , 2011 ) Author: Zhang Yan ( http://blog.s135.com ) , E-mail: net@s135.com This is free software, and you are welcome to modify and redistribute it under the New BSD License -l <ip_addr> interface to listen on, default is 0 .0.0.0 -p <num> TCP port number to listen on ( default: 1218 ) -x <path> database directory ( example: /opt/httpsqs/data ) -t <second> keep-alive timeout for an http request ( default: 60 ) -s <second> the interval to sync updated contents to the disk ( default: 5 ) -c <num> the maximum number of non-leaf nodes to be cached ( default: 1024 ) -m <size> database memory cache size in MB ( default: 100 ) -i <file> save PID in <file> ( default: /tmp/httpsqs.pid ) -a <auth> the auth password to access httpsqs ( example: mypass123 ) -d run as a daemon -h print this help and exit Use command \"killall httpsqs\" , \"pkill httpsqs\" and \"kill `cat /tmp/httpsqs.pid`\" to stop httpsqs. Please note that don ' t use the command \"pkill -9 httpsqs\" and \"kill -9 PID of httpsqs\" ! Please visit \"http://code.google.com/p/httpsqs\" for more help information. ------------------------------------------------------------------------ \u81f3\u6b64\uff0c\u5b89\u88c5\u5b8c\u6210\u3002 \u6ce8 \uff1a\u4e0d\u8981\u5c06\u4f9d\u8d56\u5305 libevent \u548c tokyocabinet \u89e3\u538b\u8def\u5f84\u4e0d\u8981\u5728 /usr/local/ \u4e0b\uff0c\u5426\u5219 ./configure \u7684\u65f6\u5019\u4f1a\u62a5\u51b2\u7a81\u3002","title":"HTTPSQS\u5b89\u88c5"},{"location":"blog/2015/httpsqs-02/","tags":["HTTPSQS"],"text":"HTTPSQS\uff08\u4e8c\uff09 \u00b6 2015-09-23 19:46 Test \u00b6 \u65b0\u5efa\u5de5\u7a0b\uff0c\u6dfb\u52a0jar\u5305 httpsq4j.jar \u65b0\u5efaJUnit\u6d4b\u8bd5 import com.daguu.lib.httpsqs4j.Httpsqs4j ; import com.daguu.lib.httpsqs4j.HttpsqsClient ; import com.daguu.lib.httpsqs4j.HttpsqsException ; import com.daguu.lib.httpsqs4j.HttpsqsStatus ; import org.junit.Before ; import org.junit.Test ; import org.springframework.util.StopWatch ; import static junit.framework.Assert.fail ; /** * Created by congye on 9/23/2015. */ public class HttpsqsTest { private final static String QUEUE_NAME = \"KQ\" ; private static final int COUNT = 5000 ; HttpsqsClient client ; /** * @throws Exception */ @Before public void before () throws Exception { Httpsqs4j . setConnectionInfo ( \"192.168.56.101\" , 1218 , \"UTF-8\" ); client = Httpsqs4j . createNewClient (); HttpsqsStatus status = client . getStatus ( QUEUE_NAME ); System . out . println ( status . version ); System . out . println ( status . queueName ); System . out . println ( status . maxNumber ); System . out . println ( status . getLap ); System . out . println ( status . getPosition ); System . out . println ( status . putLap ); System . out . println ( status . putPosition ); System . out . println ( status . unreadNumber ); } /** *\u53d1\u5305\u6d4b\u8bd5 */ @Test public void send () { StopWatch stopWatch = new StopWatch ( \"send\" ); stopWatch . start ( \"set\" ); for ( int i = 0 ; i < COUNT ; i ++ ) { try { client . putString ( QUEUE_NAME , \"http://\" + i + \"_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo\" ); } catch ( Exception e ) { fail ( e . getMessage ()); e . printStackTrace (); } } stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } /** * \u6536\u5305\u6d4b\u8bd5 */ @Test public void receive () { String value = \"\" ; StopWatch stopWatch = new StopWatch ( \"receive\" ); stopWatch . start ( \"get\" ); try { while ( true ) { value = client . getString ( QUEUE_NAME ); //System.out.println(value); } } catch ( HttpsqsException e ) { System . out . println ( e . getMessage ()); //e.printStackTrace(); } finally { stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } } } \u6d4b\u8bd5\u73af\u5883\uff08\u548c\u4e4b\u524dKestrel\u73af\u5883\u76f8\u540c\uff09 - kestrel server\u670d\u52a1\u73af\u5883\uff0c\u672c\u5730\u865a\u62df\u673a\uff0ccentOS6.6\uff0c\u53ea\u5206\u914d\u4e86650M\u5185\u5b58\uff0c1\u6838CPU - jdk7\uff0c\u5355\u7ebf\u7a0b\uff0c\u5355client - \u6d88\u606f\u4e2a\u65705000\uff0c\u6d88\u606f\u957f\u5ea6\u7ea6256 \u53d1\u9001\u6d4b\u8bd5\u7ed3\u679c StopWatch 'send': running time (millis) = 3730 ----------------------------------------- ms % Task name ----------------------------------------- 03730 100% set \u63a5\u6536\u6d4b\u8bd5\u7ed3\u679c There's no data in queue [KQ]. StopWatch 'receive': running time (millis) = 3644 ----------------------------------------- ms % Task name ----------------------------------------- 03644 100% get","title":"HTTPSQS\uff08\u4e8c\uff09"},{"location":"blog/2015/httpsqs-02/#httpsqs","text":"2015-09-23 19:46","title":"HTTPSQS\uff08\u4e8c\uff09"},{"location":"blog/2015/httpsqs-02/#test","text":"\u65b0\u5efa\u5de5\u7a0b\uff0c\u6dfb\u52a0jar\u5305 httpsq4j.jar \u65b0\u5efaJUnit\u6d4b\u8bd5 import com.daguu.lib.httpsqs4j.Httpsqs4j ; import com.daguu.lib.httpsqs4j.HttpsqsClient ; import com.daguu.lib.httpsqs4j.HttpsqsException ; import com.daguu.lib.httpsqs4j.HttpsqsStatus ; import org.junit.Before ; import org.junit.Test ; import org.springframework.util.StopWatch ; import static junit.framework.Assert.fail ; /** * Created by congye on 9/23/2015. */ public class HttpsqsTest { private final static String QUEUE_NAME = \"KQ\" ; private static final int COUNT = 5000 ; HttpsqsClient client ; /** * @throws Exception */ @Before public void before () throws Exception { Httpsqs4j . setConnectionInfo ( \"192.168.56.101\" , 1218 , \"UTF-8\" ); client = Httpsqs4j . createNewClient (); HttpsqsStatus status = client . getStatus ( QUEUE_NAME ); System . out . println ( status . version ); System . out . println ( status . queueName ); System . out . println ( status . maxNumber ); System . out . println ( status . getLap ); System . out . println ( status . getPosition ); System . out . println ( status . putLap ); System . out . println ( status . putPosition ); System . out . println ( status . unreadNumber ); } /** *\u53d1\u5305\u6d4b\u8bd5 */ @Test public void send () { StopWatch stopWatch = new StopWatch ( \"send\" ); stopWatch . start ( \"set\" ); for ( int i = 0 ; i < COUNT ; i ++ ) { try { client . putString ( QUEUE_NAME , \"http://\" + i + \"_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo\" ); } catch ( Exception e ) { fail ( e . getMessage ()); e . printStackTrace (); } } stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } /** * \u6536\u5305\u6d4b\u8bd5 */ @Test public void receive () { String value = \"\" ; StopWatch stopWatch = new StopWatch ( \"receive\" ); stopWatch . start ( \"get\" ); try { while ( true ) { value = client . getString ( QUEUE_NAME ); //System.out.println(value); } } catch ( HttpsqsException e ) { System . out . println ( e . getMessage ()); //e.printStackTrace(); } finally { stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } } } \u6d4b\u8bd5\u73af\u5883\uff08\u548c\u4e4b\u524dKestrel\u73af\u5883\u76f8\u540c\uff09 - kestrel server\u670d\u52a1\u73af\u5883\uff0c\u672c\u5730\u865a\u62df\u673a\uff0ccentOS6.6\uff0c\u53ea\u5206\u914d\u4e86650M\u5185\u5b58\uff0c1\u6838CPU - jdk7\uff0c\u5355\u7ebf\u7a0b\uff0c\u5355client - \u6d88\u606f\u4e2a\u65705000\uff0c\u6d88\u606f\u957f\u5ea6\u7ea6256 \u53d1\u9001\u6d4b\u8bd5\u7ed3\u679c StopWatch 'send': running time (millis) = 3730 ----------------------------------------- ms % Task name ----------------------------------------- 03730 100% set \u63a5\u6536\u6d4b\u8bd5\u7ed3\u679c There's no data in queue [KQ]. StopWatch 'receive': running time (millis) = 3644 ----------------------------------------- ms % Task name ----------------------------------------- 03644 100% get","title":"Test"},{"location":"blog/2015/kestrel-01/","tags":["Kestrel"],"text":"Kestrel\uff08\u4e00\uff09 \u00b6 2015-09-07 14:22 \u7b80\u5355\u4ecb\u7ecd \u00b6 Kestrel\u662ftwitter\u5f00\u6e90\u7684\u57fa\u4e8escale\u8bed\u8a00\u7684\u5f00\u6e90\u6d88\u606f\u4e2d\u95f4\u4ef6\u3002\u5b83\u6709\u5982\u4e0b\u7279\u6027\uff1a - \u5feb\uff0c\u8fd0\u884c\u5728JVM\u4e0a\uff0c\u5229\u7528java\u6027\u80fd\u4f18\u52bf\u3002 - \u5c0f\u5de7\uff0c\u5927\u7ea62500\u884cscale\u4ee3\u7801\u3002 - \u6301\u4e45\uff0c\u4e0d\u4f46\u5feb\u901f\u5b58\u50a8\u5728\u5185\u5b58\uff0c\u8fd8\u8bb0\u5f55journal\u5230\u786c\u76d8\uff0c\u9632\u6b62\u6570\u636e\u4e22\u5931\u3002 - \u53ef\u9760\uff0c\u652f\u6301\u53ef\u9760\u83b7\u53d6\u3002 Kestrel\u91c7\u7528\u7684\u534f\u8bae\u662fmemcached\u7684\u6587\u672c\u534f\u8bae\uff0c\u4f46\u662f\u5e76\u4e0d\u5b8c\u5168\u652f\u6301\u6240\u6709memcached\u534f\u8bae\uff0c\u4e5f\u4e0d\u662f\u5b8c\u5168\u517c\u5bb9\u73b0\u6709\u534f\u8bae\u3002 \u53ef\u652f\u6301\u7684\u6807\u51c6\u534f\u8bae\uff1a - SET \u5b58 - GET \u53d6 - FLUSH_ALL \u6e05\u7406 - STATS \u72b6\u6001 \u6269\u5c55\u534f\u8bae\uff1a - SHUTDOWN \u5173\u95edkestrel server\uff0c\u5982\u679c\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u9700\u5f3a\u5236\u91cd\u542fKestrel - RELOAD \u52a8\u6001\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 - DUMP_CONFIG dump\u914d\u7f6e\u6587\u4ef6 - FLUSH queueName flush\u67d0\u4e2a\u961f\u5217 \u63a8\u8350 \uff1a* Kernel\u5b98\u65b9 * \u5f81\u670d Kestrel Kestrel\u5b89\u88c5 \u00b6 \u5b89\u88c5\u4f9d\u8d56\uff08\u672c\u673a\u662fcentos6.6-DVD1 miniDeskTop\u7248\u672c\uff0c\u5df2\u5b89\u88c5yum\u5de5\u5177\uff09 sbt curl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo yum install sbt daemon wget http://libslack.org/daemon/download/daemon-0.6.4.tar.gz tar -xzvf daemon-0.6.4.tar.gz ./configure make & make install \u5b89\u88c5Kestrel cd /usr/servers wget http://robey.github.com/kestrel/download/kestrel-2.4.1.zip unzip kestrel-2.4.1.zip \u542f\u52a8 \u8fdb\u5165 ${kestrel_path}/kestrel/script cd /usr/servers/kestrel-2.4.1/script \u4fee\u6539\u6743\u9650 chmod -777 devel.sh \u540e\u53f0\u542f\u52a8\u670d\u52a1 nohup ./devel/sh & \u67e5\u770b nohup.out Starting kestrel in development mode... \u8bf4\u660eKestrel\u5df2\u7ecf\u4ee5\u5f00\u53d1\u6a21\u5f0f\u542f\u52a8\u3002 Kestrel\u811a\u672c&\u914d\u7f6e\u8bf4\u660e \u00b6 \u6211\u4eec\u53ea\u9700\u5173\u5fc3\u4ee5\u4e0b\u6587\u4ef6\uff1a Kestrel-2.4.1 |-kestrel_2.9.2-2.4.1.jar |-config |-development.scale |-production.scale |-libs |-scripts |-devel.sh |-kestrel.sh \u9002\u7528\u4e8e\u5f00\u53d1\u73af\u5883\uff1a script/devel.sh \u7528\u4e8e\u9a8c\u8bc1\u670d\u52a1\u914d\u7f6e\u662f\u5426\u53ef\u7528 config/development.scale \u914d\u5408devel.sh\u8fdb\u884c\u64cd\u4f5c\u7684\u914d\u7f6e\u6587\u4ef6 devel.sh #!/bin/bash echo \"Starting kestrel in development mode...\" # find jar no matter what the root dir name SCRIPT_DIR=$(cd `dirname \"$0\"`; pwd) ROOT_DIR=`dirname \"$SCRIPT_DIR\"` java -server -Xmx800m -Dstage=development -jar \"$ROOT_DIR\"/kestrel_2.9.2-2.4.1.jar development.scale import com.twitter.conversions.storage._ import com.twitter.conversions.time._ import com.twitter.logging.config._ import com.twitter.ostrich.admin.config._ import net.lag.kestrel.config._ new KestrelConfig { listenAddress = \"0.0.0.0\" memcacheListenPort = 22133 textListenPort = 2222 thriftListenPort = 2229 queuePath = \"/var/spool/kestrel\" clientTimeout = 30.seconds expirationTimerFrequency = 1.second maxOpenTransactions = 100 // default queue settings: default.defaultJournalSize = 16.megabytes default.maxMemorySize = 128.megabytes default.maxJournalSize = 1.gigabyte admin.httpPort = 2223 admin.statsNodes = new StatsConfig { reporters = new TimeSeriesCollectorConfig } queues = new QueueBuilder { // keep items for no longer than a half hour, and don't accept any more if // the queue reaches 1.5M items. name = \"weather_updates\" maxAge = 1800.seconds maxItems = 1500000 } :: new QueueBuilder { // don't keep a journal file for this queue. when kestrel exits, any // remaining contents will be lost. name = \"transient_events\" keepJournal = false } :: new QueueBuilder { name = \"jobs_pending\" expireToQueue = \"jobs_ready\" maxAge = 30.seconds } :: new QueueBuilder { name = \"jobs_ready\" syncJournal = 0.seconds } :: new QueueBuilder { name = \"spam\" } :: new QueueBuilder { name = \"spam0\" } :: new QueueBuilder { name = \"hello\" fanoutOnly = true } :: new QueueBuilder { name = \"small\" maxSize = 128.megabytes maxMemorySize = 16.megabytes maxJournalSize = 128.megabytes discardOldWhenFull = true } :: new QueueBuilder { name = \"slow\" syncJournal = 10.milliseconds } aliases = new AliasBuilder { name = \"wx_updates\" destinationQueues = List(\"weather_updates\") } :: new AliasBuilder { name = \"spam_all\" destinationQueues = List(\"spam\", \"spam0\") } loggers = new LoggerConfig { level = Level.INFO handlers = new FileHandlerConfig { filename = \"/var/log/kestrel/kestrel.log\" roll = Policy.Never } } } \u81ea\u5df1\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4fee\u6539\u65e5\u5fd7\u7b49\u914d\u7f6e\u9879\u3002 \u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff1a scripts/kestrel.sh \u6838\u5fc3\u6267\u884c\u6587\u4ef6 config/production.scale \u6838\u5fc3\u914d\u7f6e\u6587\u4ef6 kestrel.sh #!/bin/bash # # kestrel init.d script. # # All java services require the same directory structure: # /usr/local/$APP_NAME # /var/log/$APP_NAME # /var/run/$APP_NAME APP_NAME=\"kestrel\" ADMIN_PORT=\"2223\" VERSION=\"2.4.1\" SCALA_VERSION=\"2.9.2\" APP_HOME=\"/usr/local/$APP_NAME/current\" INITIAL_SLEEP=15 JAR_NAME=\"${APP_NAME}_${SCALA_VERSION}-${VERSION}.jar\" STAGE=\"production\" FD_LIMIT=\"262144\" HEAP_OPTS=\"-Xmx4096m -Xms4096m -XX:NewSize=768m\" GC_OPTS=\"-XX:+UseConcMarkSweepGC -XX:+UseParNewGC\" GC_TRACE=\"-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintHeapAtGC\" GC_LOG=\"-Xloggc:/var/log/$APP_NAME/gc.log\" DEBUG_OPTS=\"-XX:ErrorFile=/var/log/$APP_NAME/java_error%p.log\" # allow a separate file to override settings. test -f /etc/sysconfig/kestrel && . /etc/sysconfig/kestrel JAVA_OPTS=\"-server -Dstage=$STAGE $GC_OPTS $GC_TRACE $GC_LOG $HEAP_OPTS $DEBUG_OPTS\" pidfile=\"/var/run/$APP_NAME/$APP_NAME.pid\" # This second pidfile exists for legacy purposes, from the days when kestrel # was started by daemon(1) daemon_pidfile=\"/var/run/$APP_NAME/$APP_NAME-daemon.pid\" running() { kill -0 `cat $pidfile` } find_java() { if [ ! -z \"$JAVA_HOME\" ]; then return fi for dir in /opt/jdk /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home /usr/java/default; do if [ -x $dir/bin/java ]; then JAVA_HOME=$dir break fi done } find_java case \"$1\" in start) echo -n \"Starting $APP_NAME... \" if [ ! -r $APP_HOME/$JAR_NAME ]; then echo \"FAIL\" echo \"*** $APP_NAME jar missing: $APP_HOME/$JAR_NAME - not starting\" exit 1 fi if [ ! -x $JAVA_HOME/bin/java ]; then echo \"FAIL\" echo \"*** $JAVA_HOME/bin/java doesn't exist -- check JAVA_HOME?\" exit 1 fi if running; then echo \"already running.\" exit 0 fi TIMESTAMP=$(date +%Y%m%d%H%M%S); # Move the existing gc log to a timestamped file in case we want to examine it. # We must do this here because we have no option to append this via the JVM's # command line args. if [ -f /var/log/$APP_NAME/gc.log ]; then mv /var/log/$APP_NAME/gc.log /var/log/$APP_NAME/gc_$TIMESTAMP.log; fi ulimit -n $FD_LIMIT || echo -n \" (no ulimit)\" ulimit -c unlimited || echo -n \" (no coredump)\" sh -c \"echo \"'$$'\" > $pidfile; echo \"'$$'\" > $daemon_pidfile; exec ${JAVA_HOME}/bin/java ${JAVA_OPTS} -jar ${APP_HOME}/${JAR_NAME} >> /var/log/$APP_NAME/stdout 2>> /var/log/$APP_NAME/error\" & disown %- sleep $INITIAL_SLEEP tries=0 while ! running; do tries=$((tries + 1)) if [ $tries -ge 5 ]; then echo \"FAIL\" exit 1 fi sleep 1 done echo \"done.\" ;; stop) echo -n \"Stopping $APP_NAME... \" if ! running; then echo \"wasn't running.\" exit 0 fi curl -m 5 -s http://localhost:${ADMIN_PORT}/shutdown.txt > /dev/null tries=0 while running; do tries=$((tries + 1)) if [ $tries -ge 15 ]; then echo \"FAILED SOFT SHUTDOWN, TRYING HARDER\" if [ -f $daemon_pidfile ]; then kill $(cat $daemon_pidfile) else echo \"CAN'T FIND PID, TRY KILL MANUALLY\" exit 1 fi hardtries=0 while running; do hardtries=$((hardtries + 1)) if [ $hardtries -ge 5 ]; then echo \"FAILED HARD SHUTDOWN, TRY KILL -9 MANUALLY\" kill -9 $(cat $daemon_pidfile) fi sleep 1 done fi sleep 1 done echo \"done.\" ;; status) if running; then echo \"$APP_NAME is running.\" else echo \"$APP_NAME is NOT running.\" fi ;; restart) $0 stop sleep 2 $0 start ;; *) echo \"Usage: /etc/init.d/${APP_NAME}.sh {start|stop|restart|status}\" exit 1 ;; esac exit 0 \u81ea\u5df1\u53ef\u80fd\u8981\u4fee\u6539 APP_NAME \uff0c APP_HOME \uff0c JAVA_OPTS \u7b49\u76f8\u5173\u914d\u7f6e\u3002 production.scale import com.twitter.conversions.storage._ import com.twitter.conversions.time._ import com.twitter.logging.config._ import com.twitter.ostrich.admin.config._ import net.lag.kestrel.config._ new KestrelConfig { listenAddress = \"0.0.0.0\" memcacheListenPort = 22133 textListenPort = 2222 thriftListenPort = 2229 queuePath = \"/var/spool/kestrel\" clientTimeout = None expirationTimerFrequency = 1.second maxOpenTransactions = 100 // default queue settings: default.defaultJournalSize = 16.megabytes default.maxMemorySize = 128.megabytes default.maxJournalSize = 1.gigabyte default.syncJournal = 100.milliseconds admin.httpPort = 2223 admin.statsNodes = new StatsConfig { reporters = new TimeSeriesCollectorConfig } queues = new QueueBuilder { // keep items for no longer than a half hour, and don't accept any more if // the queue reaches 1.5M items. name = \"weather_updates\" maxAge = 1800.seconds maxItems = 1500000 } :: new QueueBuilder { // don't keep a journal file for this queue. when kestrel exits, any // remaining contents will be lost. name = \"transient_events\" keepJournal = false } loggers = new LoggerConfig { level = Level.INFO handlers = new FileHandlerConfig { filename = \"/var/log/kestrel/kestrel.log\" roll = Policy.SigHup } } } \u81ea\u5df1\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4fee\u6539\u65e5\u5fd7\u7b49\u914d\u7f6e\u9879\u3002","title":"Kestrel\uff08\u4e00\uff09"},{"location":"blog/2015/kestrel-01/#kestrel","text":"2015-09-07 14:22","title":"Kestrel\uff08\u4e00\uff09"},{"location":"blog/2015/kestrel-01/#_1","text":"Kestrel\u662ftwitter\u5f00\u6e90\u7684\u57fa\u4e8escale\u8bed\u8a00\u7684\u5f00\u6e90\u6d88\u606f\u4e2d\u95f4\u4ef6\u3002\u5b83\u6709\u5982\u4e0b\u7279\u6027\uff1a - \u5feb\uff0c\u8fd0\u884c\u5728JVM\u4e0a\uff0c\u5229\u7528java\u6027\u80fd\u4f18\u52bf\u3002 - \u5c0f\u5de7\uff0c\u5927\u7ea62500\u884cscale\u4ee3\u7801\u3002 - \u6301\u4e45\uff0c\u4e0d\u4f46\u5feb\u901f\u5b58\u50a8\u5728\u5185\u5b58\uff0c\u8fd8\u8bb0\u5f55journal\u5230\u786c\u76d8\uff0c\u9632\u6b62\u6570\u636e\u4e22\u5931\u3002 - \u53ef\u9760\uff0c\u652f\u6301\u53ef\u9760\u83b7\u53d6\u3002 Kestrel\u91c7\u7528\u7684\u534f\u8bae\u662fmemcached\u7684\u6587\u672c\u534f\u8bae\uff0c\u4f46\u662f\u5e76\u4e0d\u5b8c\u5168\u652f\u6301\u6240\u6709memcached\u534f\u8bae\uff0c\u4e5f\u4e0d\u662f\u5b8c\u5168\u517c\u5bb9\u73b0\u6709\u534f\u8bae\u3002 \u53ef\u652f\u6301\u7684\u6807\u51c6\u534f\u8bae\uff1a - SET \u5b58 - GET \u53d6 - FLUSH_ALL \u6e05\u7406 - STATS \u72b6\u6001 \u6269\u5c55\u534f\u8bae\uff1a - SHUTDOWN \u5173\u95edkestrel server\uff0c\u5982\u679c\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u9700\u5f3a\u5236\u91cd\u542fKestrel - RELOAD \u52a8\u6001\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 - DUMP_CONFIG dump\u914d\u7f6e\u6587\u4ef6 - FLUSH queueName flush\u67d0\u4e2a\u961f\u5217 \u63a8\u8350 \uff1a* Kernel\u5b98\u65b9 * \u5f81\u670d Kestrel","title":"\u7b80\u5355\u4ecb\u7ecd"},{"location":"blog/2015/kestrel-01/#kestrel_1","text":"\u5b89\u88c5\u4f9d\u8d56\uff08\u672c\u673a\u662fcentos6.6-DVD1 miniDeskTop\u7248\u672c\uff0c\u5df2\u5b89\u88c5yum\u5de5\u5177\uff09 sbt curl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo yum install sbt daemon wget http://libslack.org/daemon/download/daemon-0.6.4.tar.gz tar -xzvf daemon-0.6.4.tar.gz ./configure make & make install \u5b89\u88c5Kestrel cd /usr/servers wget http://robey.github.com/kestrel/download/kestrel-2.4.1.zip unzip kestrel-2.4.1.zip \u542f\u52a8 \u8fdb\u5165 ${kestrel_path}/kestrel/script cd /usr/servers/kestrel-2.4.1/script \u4fee\u6539\u6743\u9650 chmod -777 devel.sh \u540e\u53f0\u542f\u52a8\u670d\u52a1 nohup ./devel/sh & \u67e5\u770b nohup.out Starting kestrel in development mode... \u8bf4\u660eKestrel\u5df2\u7ecf\u4ee5\u5f00\u53d1\u6a21\u5f0f\u542f\u52a8\u3002","title":"Kestrel\u5b89\u88c5"},{"location":"blog/2015/kestrel-01/#kestrel_2","text":"\u6211\u4eec\u53ea\u9700\u5173\u5fc3\u4ee5\u4e0b\u6587\u4ef6\uff1a Kestrel-2.4.1 |-kestrel_2.9.2-2.4.1.jar |-config |-development.scale |-production.scale |-libs |-scripts |-devel.sh |-kestrel.sh \u9002\u7528\u4e8e\u5f00\u53d1\u73af\u5883\uff1a script/devel.sh \u7528\u4e8e\u9a8c\u8bc1\u670d\u52a1\u914d\u7f6e\u662f\u5426\u53ef\u7528 config/development.scale \u914d\u5408devel.sh\u8fdb\u884c\u64cd\u4f5c\u7684\u914d\u7f6e\u6587\u4ef6 devel.sh #!/bin/bash echo \"Starting kestrel in development mode...\" # find jar no matter what the root dir name SCRIPT_DIR=$(cd `dirname \"$0\"`; pwd) ROOT_DIR=`dirname \"$SCRIPT_DIR\"` java -server -Xmx800m -Dstage=development -jar \"$ROOT_DIR\"/kestrel_2.9.2-2.4.1.jar development.scale import com.twitter.conversions.storage._ import com.twitter.conversions.time._ import com.twitter.logging.config._ import com.twitter.ostrich.admin.config._ import net.lag.kestrel.config._ new KestrelConfig { listenAddress = \"0.0.0.0\" memcacheListenPort = 22133 textListenPort = 2222 thriftListenPort = 2229 queuePath = \"/var/spool/kestrel\" clientTimeout = 30.seconds expirationTimerFrequency = 1.second maxOpenTransactions = 100 // default queue settings: default.defaultJournalSize = 16.megabytes default.maxMemorySize = 128.megabytes default.maxJournalSize = 1.gigabyte admin.httpPort = 2223 admin.statsNodes = new StatsConfig { reporters = new TimeSeriesCollectorConfig } queues = new QueueBuilder { // keep items for no longer than a half hour, and don't accept any more if // the queue reaches 1.5M items. name = \"weather_updates\" maxAge = 1800.seconds maxItems = 1500000 } :: new QueueBuilder { // don't keep a journal file for this queue. when kestrel exits, any // remaining contents will be lost. name = \"transient_events\" keepJournal = false } :: new QueueBuilder { name = \"jobs_pending\" expireToQueue = \"jobs_ready\" maxAge = 30.seconds } :: new QueueBuilder { name = \"jobs_ready\" syncJournal = 0.seconds } :: new QueueBuilder { name = \"spam\" } :: new QueueBuilder { name = \"spam0\" } :: new QueueBuilder { name = \"hello\" fanoutOnly = true } :: new QueueBuilder { name = \"small\" maxSize = 128.megabytes maxMemorySize = 16.megabytes maxJournalSize = 128.megabytes discardOldWhenFull = true } :: new QueueBuilder { name = \"slow\" syncJournal = 10.milliseconds } aliases = new AliasBuilder { name = \"wx_updates\" destinationQueues = List(\"weather_updates\") } :: new AliasBuilder { name = \"spam_all\" destinationQueues = List(\"spam\", \"spam0\") } loggers = new LoggerConfig { level = Level.INFO handlers = new FileHandlerConfig { filename = \"/var/log/kestrel/kestrel.log\" roll = Policy.Never } } } \u81ea\u5df1\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4fee\u6539\u65e5\u5fd7\u7b49\u914d\u7f6e\u9879\u3002 \u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff1a scripts/kestrel.sh \u6838\u5fc3\u6267\u884c\u6587\u4ef6 config/production.scale \u6838\u5fc3\u914d\u7f6e\u6587\u4ef6 kestrel.sh #!/bin/bash # # kestrel init.d script. # # All java services require the same directory structure: # /usr/local/$APP_NAME # /var/log/$APP_NAME # /var/run/$APP_NAME APP_NAME=\"kestrel\" ADMIN_PORT=\"2223\" VERSION=\"2.4.1\" SCALA_VERSION=\"2.9.2\" APP_HOME=\"/usr/local/$APP_NAME/current\" INITIAL_SLEEP=15 JAR_NAME=\"${APP_NAME}_${SCALA_VERSION}-${VERSION}.jar\" STAGE=\"production\" FD_LIMIT=\"262144\" HEAP_OPTS=\"-Xmx4096m -Xms4096m -XX:NewSize=768m\" GC_OPTS=\"-XX:+UseConcMarkSweepGC -XX:+UseParNewGC\" GC_TRACE=\"-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintHeapAtGC\" GC_LOG=\"-Xloggc:/var/log/$APP_NAME/gc.log\" DEBUG_OPTS=\"-XX:ErrorFile=/var/log/$APP_NAME/java_error%p.log\" # allow a separate file to override settings. test -f /etc/sysconfig/kestrel && . /etc/sysconfig/kestrel JAVA_OPTS=\"-server -Dstage=$STAGE $GC_OPTS $GC_TRACE $GC_LOG $HEAP_OPTS $DEBUG_OPTS\" pidfile=\"/var/run/$APP_NAME/$APP_NAME.pid\" # This second pidfile exists for legacy purposes, from the days when kestrel # was started by daemon(1) daemon_pidfile=\"/var/run/$APP_NAME/$APP_NAME-daemon.pid\" running() { kill -0 `cat $pidfile` } find_java() { if [ ! -z \"$JAVA_HOME\" ]; then return fi for dir in /opt/jdk /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home /usr/java/default; do if [ -x $dir/bin/java ]; then JAVA_HOME=$dir break fi done } find_java case \"$1\" in start) echo -n \"Starting $APP_NAME... \" if [ ! -r $APP_HOME/$JAR_NAME ]; then echo \"FAIL\" echo \"*** $APP_NAME jar missing: $APP_HOME/$JAR_NAME - not starting\" exit 1 fi if [ ! -x $JAVA_HOME/bin/java ]; then echo \"FAIL\" echo \"*** $JAVA_HOME/bin/java doesn't exist -- check JAVA_HOME?\" exit 1 fi if running; then echo \"already running.\" exit 0 fi TIMESTAMP=$(date +%Y%m%d%H%M%S); # Move the existing gc log to a timestamped file in case we want to examine it. # We must do this here because we have no option to append this via the JVM's # command line args. if [ -f /var/log/$APP_NAME/gc.log ]; then mv /var/log/$APP_NAME/gc.log /var/log/$APP_NAME/gc_$TIMESTAMP.log; fi ulimit -n $FD_LIMIT || echo -n \" (no ulimit)\" ulimit -c unlimited || echo -n \" (no coredump)\" sh -c \"echo \"'$$'\" > $pidfile; echo \"'$$'\" > $daemon_pidfile; exec ${JAVA_HOME}/bin/java ${JAVA_OPTS} -jar ${APP_HOME}/${JAR_NAME} >> /var/log/$APP_NAME/stdout 2>> /var/log/$APP_NAME/error\" & disown %- sleep $INITIAL_SLEEP tries=0 while ! running; do tries=$((tries + 1)) if [ $tries -ge 5 ]; then echo \"FAIL\" exit 1 fi sleep 1 done echo \"done.\" ;; stop) echo -n \"Stopping $APP_NAME... \" if ! running; then echo \"wasn't running.\" exit 0 fi curl -m 5 -s http://localhost:${ADMIN_PORT}/shutdown.txt > /dev/null tries=0 while running; do tries=$((tries + 1)) if [ $tries -ge 15 ]; then echo \"FAILED SOFT SHUTDOWN, TRYING HARDER\" if [ -f $daemon_pidfile ]; then kill $(cat $daemon_pidfile) else echo \"CAN'T FIND PID, TRY KILL MANUALLY\" exit 1 fi hardtries=0 while running; do hardtries=$((hardtries + 1)) if [ $hardtries -ge 5 ]; then echo \"FAILED HARD SHUTDOWN, TRY KILL -9 MANUALLY\" kill -9 $(cat $daemon_pidfile) fi sleep 1 done fi sleep 1 done echo \"done.\" ;; status) if running; then echo \"$APP_NAME is running.\" else echo \"$APP_NAME is NOT running.\" fi ;; restart) $0 stop sleep 2 $0 start ;; *) echo \"Usage: /etc/init.d/${APP_NAME}.sh {start|stop|restart|status}\" exit 1 ;; esac exit 0 \u81ea\u5df1\u53ef\u80fd\u8981\u4fee\u6539 APP_NAME \uff0c APP_HOME \uff0c JAVA_OPTS \u7b49\u76f8\u5173\u914d\u7f6e\u3002 production.scale import com.twitter.conversions.storage._ import com.twitter.conversions.time._ import com.twitter.logging.config._ import com.twitter.ostrich.admin.config._ import net.lag.kestrel.config._ new KestrelConfig { listenAddress = \"0.0.0.0\" memcacheListenPort = 22133 textListenPort = 2222 thriftListenPort = 2229 queuePath = \"/var/spool/kestrel\" clientTimeout = None expirationTimerFrequency = 1.second maxOpenTransactions = 100 // default queue settings: default.defaultJournalSize = 16.megabytes default.maxMemorySize = 128.megabytes default.maxJournalSize = 1.gigabyte default.syncJournal = 100.milliseconds admin.httpPort = 2223 admin.statsNodes = new StatsConfig { reporters = new TimeSeriesCollectorConfig } queues = new QueueBuilder { // keep items for no longer than a half hour, and don't accept any more if // the queue reaches 1.5M items. name = \"weather_updates\" maxAge = 1800.seconds maxItems = 1500000 } :: new QueueBuilder { // don't keep a journal file for this queue. when kestrel exits, any // remaining contents will be lost. name = \"transient_events\" keepJournal = false } loggers = new LoggerConfig { level = Level.INFO handlers = new FileHandlerConfig { filename = \"/var/log/kestrel/kestrel.log\" roll = Policy.SigHup } } } \u81ea\u5df1\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4fee\u6539\u65e5\u5fd7\u7b49\u914d\u7f6e\u9879\u3002","title":"Kestrel\u811a\u672c&amp;\u914d\u7f6e\u8bf4\u660e"},{"location":"blog/2015/kestrel-02/","tags":["XMemcached","Kestrel","Memcached"],"text":"Kestrel\uff08\u4e8c\uff09 \u00b6 2015-09-08 16:03 Kestrel Java Client \u00b6 XMemcached,\u770b\u540d\u5b57\u597d\u50cf\u5b83\u548cMemcached\u6709\u5173\u7cfb\u3002\u5bf9\u4e86\uff0cMemcached\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\uff0cC\u5199\u7684\u5206\u5e03\u5f0fkey-value\u7f13\u5b58\uff0cXMemcached\u662f\u5b83\u7684\u4e00\u4e2a\u8bbf\u95ee\u5ba2\u6237\u7aef\u3002 XMemcached\u4e3aMemcached\u800c\u751f\uff0c\u5b83\u652f\u6301\u5982\u4e0b\u7279\u6027\uff1a \u652f\u6301\u6240\u6709\u7684\u6587\u672c\u534f\u8bae\u548c\u4e8c\u8fdb\u5236\u534f\u8bae\uff0c\u652f\u6301\u8fde\u63a5 Kestrel \u548cTokyoTyrant\u7b49Memcached\u534f\u8bae\u517c\u5bb9\u7684\u7cfb\u7edf\u5e76\u4f5c\u7279\u6b8a\u5904\u7406\u3002 \u652f\u6301\u52a8\u6001\u6dfb\u52a0\u548c\u5220\u9664Memcached\u8282\u70b9\u3002 \u652f\u6301\u5ba2\u6237\u7aef\u7edf\u8ba1\u3002 \u652f\u6301JMX\u76d1\u63a7\u548c\u7edf\u8ba1\uff0c\u53ef\u4ee5\u901a\u8fc7JMX\u589e\u5220\u8282\u70b9\u3002 \u9ad8\u6027\u80fd\u3002 \u652f\u6301\u8282\u70b9\u7684\u6743\u91cd\u8bbe\u7f6e\u3002 \u652f\u6301nio\u7684\u8fde\u63a5\u6c60\uff0c\u5728\u9ad8\u8d1f\u8f7d\u73af\u5883\u4e0b\u63d0\u9ad8\u541e\u5410\u91cf\u3002 \u6b63\u56e0\u4e3aKestrel\u91c7\u7528\u7684\u534f\u8bae\u662fMemcached\u7684\u6587\u672c\u534f\u8bae\uff0c\u6240\u4ee5XMemcached\u652f\u6301\u4e86Kestrel\uff01 \u63a8\u8350 \uff1a \u521d\u8bc6Kestrel Xmemcached\u7684FAQ\u548c\u6027\u80fd\u8c03\u6574\u5efa\u8bae ------------- killme2008\uff08XMemcached\u4f5c\u8005\uff09 XMemcached\u4e0eSpring\u96c6\u6210 \u00b6 \u76ee\u5f55\u7ed3\u6784 Kestrel |-main |-resources |-applicationContext.xml |-kestrel.properties |-kestrel.xml |-test |-java |-\u5305\u540d |-KestrelTest.java pom\u6587\u4ef6\u4e2d\u52a0\u5165XMemcached\u4f9d\u8d56 <dependency> <groupId> com.googlecode.xmemcached </groupId> <artifactId> xmemcached </artifactId> <version> 1.3.7 </version> <type> jar </type> <scope> compile </scope> </dependency> kestrel.propertis #\\u8fde\\u63a5\\u6c60\\u5927\\u5c0f\\u5373\\u5ba2\\u6237\\u7aef\\u4e2a\\u6570 kestrel.connectionPoolSize = 50 kestrel.failureMode = true #server1 #kestrel.server1.host=192.168.56.101 kestrel.server1.host = 172.16.128.248 kestrel.server1.port = 22133 kestrel.server1.weight = 1 #server2 #kestrel.server2.host=10.11.155.41 #kestrel.server2.port=22133 #kestrel.server2.weight=1 \u591a\u4e2aserver\u914d\u7f6e\u53ea\u9700\u6253\u5f00server2\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 Spring\u914d\u7f6e kestrel.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <!-- http://code.google.com/p/xmemcached/wiki/Spring_Integration --> <bean id= \"memcachedClientBuilder\" class= \"net.rubyeye.xmemcached.XMemcachedClientBuilder\" p:connectionPoolSize= \"${kestrel.connectionPoolSize}\" p:failureMode= \"${kestrel.failureMode}\" > <!-- XMemcachedClientBuilder have two arguments.First is server list,and second is weights array. --> <constructor-arg> <list> <bean class= \"java.net.InetSocketAddress\" > <constructor-arg> <value> ${kestrel.server1.host} </value> </constructor-arg> <constructor-arg> <value> ${kestrel.server1.port} </value> </constructor-arg> </bean> <!-- <bean class=\"java.net.InetSocketAddress\"> --> <!-- <constructor-arg> --> <!-- <value>${kestrel.server2.host}</value> --> <!-- </constructor-arg> --> <!-- <constructor-arg> --> <!-- <value>${kestrel.server2.port}</value> --> <!-- </constructor-arg> --> <!-- </bean> --> </list> </constructor-arg> <constructor-arg> <list> <value> ${kestrel.server1.weight} </value> <!-- <value>${kestrel.server2.weight}</value> --> </list> </constructor-arg> <property name= \"commandFactory\" > <bean class= \"net.rubyeye.xmemcached.command.KestrelCommandFactory\" /> </property> <property name= \"sessionLocator\" > <bean class= \"net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator\" /> </property> <property name= \"transcoder\" > <bean class= \"net.rubyeye.xmemcached.transcoders.SerializingTranscoder\" /> </property> </bean> <!-- Use factory bean to build memcached client --> <bean id= \"memcachedClient\" factory-bean= \"memcachedClientBuilder\" factory-method= \"build\" destroy-method= \"shutdown\" > <!-- \u5982\u679c\u6536\u53d1\u53cc\u65b9\u4f7f\u7528Client\u4e0d\u540c\uff0c\u5f00\u542f\u8be5\u9009\u9879 --> <!-- <property --> <!-- name=\"primitiveAsString\" --> <!-- value=\"true\" /> --> </bean> </beans> \u6ce8 \uff1a\u8fd9\u91cc\u8981\u4f7f\u7528KestrelCommandFactory <property name= \"commandFactory\" > <bean class= \"net.rubyeye.xmemcached.command.KestrelCommandFactory\" /> </property> KestrelCommandFactory\u4f1a\u5728\u6570\u636e\u5934\u52a0\u4e00\u4e2a4\u5b57\u8282\u7684flag\uff0c\u652f\u6301\u5b58\u50a8\u4efb\u610f\u53ef\u5e8f\u5217\u5316\u7c7b\u578b\u3002\u5982\u679c\u6536\u53d1\u53cc\u65b9Client\u4e0d\u540c\uff0c\u4e3a\u786e\u4fdd\u79fb\u690d\u6027\uff0c\u9700\u8981\u5c06\u6570\u636e\u8f6c\u4e3aString\u683c\u5f0f\uff0c\u820d\u5f03\u8fd9\u4e2aflag\u3002\u65b9\u5f0f\u662f\u5f00\u542f\u5982\u4e0b\u9009\u9879\uff0c\u7f3a\u70b9\u662f\u5f00\u542f\u4e4b\u540e\uff0c\u6570\u636e\u5c31\u4e0d\u80fd\u652f\u6301\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u4ec5\u652f\u6301String\u7c7b\u578b\u3002 <bean id= \"memcachedClient\" factory-bean= \"memcachedClientBuilder\" factory-method= \"build\" destroy-method= \"shutdown\" > <!-- \u5982\u679c\u6536\u53d1\u53cc\u65b9\u4f7f\u7528Client\u4e0d\u540c\uff0c\u5f00\u542f\u8be5\u9009\u9879 --> <property name= \"primitiveAsString\" value= \"true\" /> </bean>","title":"Kestrel\uff08\u4e8c\uff09"},{"location":"blog/2015/kestrel-02/#kestrel","text":"2015-09-08 16:03","title":"Kestrel\uff08\u4e8c\uff09"},{"location":"blog/2015/kestrel-02/#kestrel-java-client","text":"XMemcached,\u770b\u540d\u5b57\u597d\u50cf\u5b83\u548cMemcached\u6709\u5173\u7cfb\u3002\u5bf9\u4e86\uff0cMemcached\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\uff0cC\u5199\u7684\u5206\u5e03\u5f0fkey-value\u7f13\u5b58\uff0cXMemcached\u662f\u5b83\u7684\u4e00\u4e2a\u8bbf\u95ee\u5ba2\u6237\u7aef\u3002 XMemcached\u4e3aMemcached\u800c\u751f\uff0c\u5b83\u652f\u6301\u5982\u4e0b\u7279\u6027\uff1a \u652f\u6301\u6240\u6709\u7684\u6587\u672c\u534f\u8bae\u548c\u4e8c\u8fdb\u5236\u534f\u8bae\uff0c\u652f\u6301\u8fde\u63a5 Kestrel \u548cTokyoTyrant\u7b49Memcached\u534f\u8bae\u517c\u5bb9\u7684\u7cfb\u7edf\u5e76\u4f5c\u7279\u6b8a\u5904\u7406\u3002 \u652f\u6301\u52a8\u6001\u6dfb\u52a0\u548c\u5220\u9664Memcached\u8282\u70b9\u3002 \u652f\u6301\u5ba2\u6237\u7aef\u7edf\u8ba1\u3002 \u652f\u6301JMX\u76d1\u63a7\u548c\u7edf\u8ba1\uff0c\u53ef\u4ee5\u901a\u8fc7JMX\u589e\u5220\u8282\u70b9\u3002 \u9ad8\u6027\u80fd\u3002 \u652f\u6301\u8282\u70b9\u7684\u6743\u91cd\u8bbe\u7f6e\u3002 \u652f\u6301nio\u7684\u8fde\u63a5\u6c60\uff0c\u5728\u9ad8\u8d1f\u8f7d\u73af\u5883\u4e0b\u63d0\u9ad8\u541e\u5410\u91cf\u3002 \u6b63\u56e0\u4e3aKestrel\u91c7\u7528\u7684\u534f\u8bae\u662fMemcached\u7684\u6587\u672c\u534f\u8bae\uff0c\u6240\u4ee5XMemcached\u652f\u6301\u4e86Kestrel\uff01 \u63a8\u8350 \uff1a \u521d\u8bc6Kestrel Xmemcached\u7684FAQ\u548c\u6027\u80fd\u8c03\u6574\u5efa\u8bae ------------- killme2008\uff08XMemcached\u4f5c\u8005\uff09","title":"Kestrel Java Client"},{"location":"blog/2015/kestrel-02/#xmemcachedspring","text":"\u76ee\u5f55\u7ed3\u6784 Kestrel |-main |-resources |-applicationContext.xml |-kestrel.properties |-kestrel.xml |-test |-java |-\u5305\u540d |-KestrelTest.java pom\u6587\u4ef6\u4e2d\u52a0\u5165XMemcached\u4f9d\u8d56 <dependency> <groupId> com.googlecode.xmemcached </groupId> <artifactId> xmemcached </artifactId> <version> 1.3.7 </version> <type> jar </type> <scope> compile </scope> </dependency> kestrel.propertis #\\u8fde\\u63a5\\u6c60\\u5927\\u5c0f\\u5373\\u5ba2\\u6237\\u7aef\\u4e2a\\u6570 kestrel.connectionPoolSize = 50 kestrel.failureMode = true #server1 #kestrel.server1.host=192.168.56.101 kestrel.server1.host = 172.16.128.248 kestrel.server1.port = 22133 kestrel.server1.weight = 1 #server2 #kestrel.server2.host=10.11.155.41 #kestrel.server2.port=22133 #kestrel.server2.weight=1 \u591a\u4e2aserver\u914d\u7f6e\u53ea\u9700\u6253\u5f00server2\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 Spring\u914d\u7f6e kestrel.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <!-- http://code.google.com/p/xmemcached/wiki/Spring_Integration --> <bean id= \"memcachedClientBuilder\" class= \"net.rubyeye.xmemcached.XMemcachedClientBuilder\" p:connectionPoolSize= \"${kestrel.connectionPoolSize}\" p:failureMode= \"${kestrel.failureMode}\" > <!-- XMemcachedClientBuilder have two arguments.First is server list,and second is weights array. --> <constructor-arg> <list> <bean class= \"java.net.InetSocketAddress\" > <constructor-arg> <value> ${kestrel.server1.host} </value> </constructor-arg> <constructor-arg> <value> ${kestrel.server1.port} </value> </constructor-arg> </bean> <!-- <bean class=\"java.net.InetSocketAddress\"> --> <!-- <constructor-arg> --> <!-- <value>${kestrel.server2.host}</value> --> <!-- </constructor-arg> --> <!-- <constructor-arg> --> <!-- <value>${kestrel.server2.port}</value> --> <!-- </constructor-arg> --> <!-- </bean> --> </list> </constructor-arg> <constructor-arg> <list> <value> ${kestrel.server1.weight} </value> <!-- <value>${kestrel.server2.weight}</value> --> </list> </constructor-arg> <property name= \"commandFactory\" > <bean class= \"net.rubyeye.xmemcached.command.KestrelCommandFactory\" /> </property> <property name= \"sessionLocator\" > <bean class= \"net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator\" /> </property> <property name= \"transcoder\" > <bean class= \"net.rubyeye.xmemcached.transcoders.SerializingTranscoder\" /> </property> </bean> <!-- Use factory bean to build memcached client --> <bean id= \"memcachedClient\" factory-bean= \"memcachedClientBuilder\" factory-method= \"build\" destroy-method= \"shutdown\" > <!-- \u5982\u679c\u6536\u53d1\u53cc\u65b9\u4f7f\u7528Client\u4e0d\u540c\uff0c\u5f00\u542f\u8be5\u9009\u9879 --> <!-- <property --> <!-- name=\"primitiveAsString\" --> <!-- value=\"true\" /> --> </bean> </beans> \u6ce8 \uff1a\u8fd9\u91cc\u8981\u4f7f\u7528KestrelCommandFactory <property name= \"commandFactory\" > <bean class= \"net.rubyeye.xmemcached.command.KestrelCommandFactory\" /> </property> KestrelCommandFactory\u4f1a\u5728\u6570\u636e\u5934\u52a0\u4e00\u4e2a4\u5b57\u8282\u7684flag\uff0c\u652f\u6301\u5b58\u50a8\u4efb\u610f\u53ef\u5e8f\u5217\u5316\u7c7b\u578b\u3002\u5982\u679c\u6536\u53d1\u53cc\u65b9Client\u4e0d\u540c\uff0c\u4e3a\u786e\u4fdd\u79fb\u690d\u6027\uff0c\u9700\u8981\u5c06\u6570\u636e\u8f6c\u4e3aString\u683c\u5f0f\uff0c\u820d\u5f03\u8fd9\u4e2aflag\u3002\u65b9\u5f0f\u662f\u5f00\u542f\u5982\u4e0b\u9009\u9879\uff0c\u7f3a\u70b9\u662f\u5f00\u542f\u4e4b\u540e\uff0c\u6570\u636e\u5c31\u4e0d\u80fd\u652f\u6301\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u4ec5\u652f\u6301String\u7c7b\u578b\u3002 <bean id= \"memcachedClient\" factory-bean= \"memcachedClientBuilder\" factory-method= \"build\" destroy-method= \"shutdown\" > <!-- \u5982\u679c\u6536\u53d1\u53cc\u65b9\u4f7f\u7528Client\u4e0d\u540c\uff0c\u5f00\u542f\u8be5\u9009\u9879 --> <property name= \"primitiveAsString\" value= \"true\" /> </bean>","title":"XMemcached\u4e0eSpring\u96c6\u6210"},{"location":"blog/2015/kestrel-03/","tags":["Kestrel"],"text":"Kestrel\uff08\u4e09\uff09 \u00b6 2015-09-15 13:38 Test \u00b6 \u65b0\u5efa\u4e00\u4e2aspring\u914d\u7f6e\u6587\u4ef6 applicationContext.xml ,\u5bfc\u5165\u4e4b\u524d\u7684 - kestrel.properties - kestrel.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <context:property-placeholder location= \"classpath:kestrel.properties\" /> <import resource= \"kestrel.xml\" /> </beans> \u65b0\u5efaJUnit\u6d4b\u8bd5 import static junit.framework.Assert.* ; import net.rubyeye.xmemcached.MemcachedClient ; import org.junit.Before ; import org.junit.Test ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import org.springframework.util.StopWatch ; /** * Kestrel \u6d4b\u8bd5 * */ public class KestrelTest { private final static String QUEUE_NAME = \"KQ\" ; private ApplicationContext app ; private MemcachedClient memcachedClient ; private static final int COUNT = 5000 ; /** * @throws Exception */ @Before public void before () throws Exception { app = new ClassPathXmlApplicationContext ( \"spring/applicationContext.xml\" ); memcachedClient = ( MemcachedClient ) app . getBean ( \"memcachedClient\" ); } /** * \u53d1\u5305\u6d4b\u8bd5 */ @Test public void send () { StopWatch stopWatch = new StopWatch ( \"send\" ); stopWatch . start ( \"set\" ); memcachedClient . setOpTimeout ( 5000L ); for ( int i = 0 ; i < COUNT ; i ++ ) { try { memcachedClient . set ( QUEUE_NAME , 0 , \"http://\" + i + \"_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo\" ); } catch ( Exception e ) { fail ( e . getMessage ()); e . printStackTrace (); } } stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } /** * \u6536\u5305\u6d4b\u8bd5 */ @Test public void receive () { String value ; StopWatch stopWatch = new StopWatch ( \"receive\" ); stopWatch . start ( \"get\" ); try { while ( true ) { memcachedClient . setOpTimeout ( 5000L ); value = ( String ) memcachedClient . get ( QUEUE_NAME ); if ( value == null ) { break ; } System . out . println ( value ); } } catch ( Exception e ) { fail ( e . getMessage ()); e . printStackTrace (); } stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } } \u6d4b\u8bd5\u73af\u5883 - kestrel server\u670d\u52a1\u73af\u5883\uff0c\u672c\u5730\u865a\u62df\u673a\uff0ccentOS6.6\uff0c\u53ea\u5206\u914d\u4e86650M\u5185\u5b58\uff0c1\u6838CPU - jdk7\uff0c\u5355\u7ebf\u7a0b\uff0c\u5355client - \u6d88\u606f\u4e2a\u65705000\uff0c\u6d88\u606f\u957f\u5ea6\u7ea6256 \u53d1\u9001\u6d4b\u8bd5\u7ed3\u679c StopWatch 'send': running time (millis) = 2248 ----------------------------------------- ms % Task name ----------------------------------------- 02248 100% set \u63a5\u6536\u6d4b\u8bd5\u7ed3\u679c StopWatch 'receive': running time (millis) = 2896 ----------------------------------------- ms % Task name ----------------------------------------- 02896 100% get","title":"Kestrel\uff08\u4e09\uff09"},{"location":"blog/2015/kestrel-03/#kestrel","text":"2015-09-15 13:38","title":"Kestrel\uff08\u4e09\uff09"},{"location":"blog/2015/kestrel-03/#test","text":"\u65b0\u5efa\u4e00\u4e2aspring\u914d\u7f6e\u6587\u4ef6 applicationContext.xml ,\u5bfc\u5165\u4e4b\u524d\u7684 - kestrel.properties - kestrel.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <context:property-placeholder location= \"classpath:kestrel.properties\" /> <import resource= \"kestrel.xml\" /> </beans> \u65b0\u5efaJUnit\u6d4b\u8bd5 import static junit.framework.Assert.* ; import net.rubyeye.xmemcached.MemcachedClient ; import org.junit.Before ; import org.junit.Test ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import org.springframework.util.StopWatch ; /** * Kestrel \u6d4b\u8bd5 * */ public class KestrelTest { private final static String QUEUE_NAME = \"KQ\" ; private ApplicationContext app ; private MemcachedClient memcachedClient ; private static final int COUNT = 5000 ; /** * @throws Exception */ @Before public void before () throws Exception { app = new ClassPathXmlApplicationContext ( \"spring/applicationContext.xml\" ); memcachedClient = ( MemcachedClient ) app . getBean ( \"memcachedClient\" ); } /** * \u53d1\u5305\u6d4b\u8bd5 */ @Test public void send () { StopWatch stopWatch = new StopWatch ( \"send\" ); stopWatch . start ( \"set\" ); memcachedClient . setOpTimeout ( 5000L ); for ( int i = 0 ; i < COUNT ; i ++ ) { try { memcachedClient . set ( QUEUE_NAME , 0 , \"http://\" + i + \"_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo_twentwo\" ); } catch ( Exception e ) { fail ( e . getMessage ()); e . printStackTrace (); } } stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } /** * \u6536\u5305\u6d4b\u8bd5 */ @Test public void receive () { String value ; StopWatch stopWatch = new StopWatch ( \"receive\" ); stopWatch . start ( \"get\" ); try { while ( true ) { memcachedClient . setOpTimeout ( 5000L ); value = ( String ) memcachedClient . get ( QUEUE_NAME ); if ( value == null ) { break ; } System . out . println ( value ); } } catch ( Exception e ) { fail ( e . getMessage ()); e . printStackTrace (); } stopWatch . stop (); System . out . println ( stopWatch . prettyPrint ()); } } \u6d4b\u8bd5\u73af\u5883 - kestrel server\u670d\u52a1\u73af\u5883\uff0c\u672c\u5730\u865a\u62df\u673a\uff0ccentOS6.6\uff0c\u53ea\u5206\u914d\u4e86650M\u5185\u5b58\uff0c1\u6838CPU - jdk7\uff0c\u5355\u7ebf\u7a0b\uff0c\u5355client - \u6d88\u606f\u4e2a\u65705000\uff0c\u6d88\u606f\u957f\u5ea6\u7ea6256 \u53d1\u9001\u6d4b\u8bd5\u7ed3\u679c StopWatch 'send': running time (millis) = 2248 ----------------------------------------- ms % Task name ----------------------------------------- 02248 100% set \u63a5\u6536\u6d4b\u8bd5\u7ed3\u679c StopWatch 'receive': running time (millis) = 2896 ----------------------------------------- ms % Task name ----------------------------------------- 02896 100% get","title":"Test"},{"location":"blog/2015/maven-remote-deploy-jboss/","tags":["Maven","Jboss"],"text":"Maven \u8fdc\u7a0b\u90e8\u7f72\u9879\u76ee\u5230jboss-as-7 \u00b6 2015/08/14 22:07 \u6700\u8fd1\u5728\u770b\u8bb8\u6653\u658c\uff08Juven Xu\uff09\u7f16\u5199\u7684\u300aMaven\u5b9e\u6218\u300b\uff0c\u4e66\u4e2d\u63d0\u5230Maven\u8fdc\u7a0b\u90e8\u7f72\u9879\u76ee\u5230\u670d\u52a1\u5668\u3002\u521a\u597d\u6700\u8fd1\u505a\u7684\u9879\u76ee\u5728\u6d4b\u8bd5\u9636\u6bb5\uff0c\u4e0d\u8fc7\u6d4b\u8bd5\u73af\u5883\u7528\u7684\u670d\u52a1\u5668\u662fJboss\uff08jboss-as-7.1.0.Final\uff09\uff0c\u9042\u5f00\u59cb\u6298\u817e\u3002\u4ee5jboss-as-7.1.1.Final\u4e3a\u4f8b\u3002 \u4e00\u3001\u542f\u52a8Jboss \u00b6 \u5b89\u88c5Jboss\u5728Linux\u4e0b\u89e3\u538b\u5373\u53ef\u3002\u542f\u52a8\u5305\u62ecstandalone\u6a21\u5f0f\u548cdomain\u6a21\u5f0f\u3002 standalone\u6a21\u5f0f \u7b80\u5355\u5f00\u542f\u670d\u52a1\u5668\u7684\u547d\u4ee4\uff1a\u8fdb\u5165\u5230 bin \u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u547d\u4ee4\u3002 ./standalone.sh \u8fd9\u79cd\u5f00\u542f\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u6709\u4e2a\u7f3a\u70b9\uff0c\u5f53\u4f60\u7684\u547d\u4ee4\u7a97\u53e3\u5173\u95ed\u540e\uff0c\u670d\u52a1\u81ea\u52a8down\u4e86\u3002 \u8ba9\u670d\u52a1\u5668\u5f00\u542f\u540e\u5728\u540e\u53f0\u8fd0\u884c\uff1a\u8fdb\u5165\u5230bin\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u547d\u4ee4\u3002 nohup ./standalone.sh& \u6216 nohup ./standalone.sh run& \u8fd9\u6837\u670d\u52a1\u5668\u5c31\u4f1a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5373\u4f7f\u5173\u95ed\u547d\u4ee4\u7a97\u53e3\uff0c\u670d\u52a1\u5668\u4f9d\u7136\u8fd0\u884c\u3002\u670d\u52a1\u9700\u5173\u95ed\u65f6\uff0c\u91c7\u7528 ps -ef | grep jboss \uff0c\u67e5\u770b\u8fdb\u7a0b\u53f7\uff0c\u7136\u540e kill -9 \u8fdb\u7a0b\u53f7 \uff0c\u518d\u91cd\u542f\u3002 \u6267\u884cnohup\u547d\u4ee4\uff0c\u63a7\u5236\u53f0logout\u540e\uff0c\u8fdb\u7a0b\u4ecd\u7136\u7ee7\u7eed\u8fd0\u884c\uff0c\u8d77\u5230\u5b88\u62a4\u8fdb\u7a0b\u7684\u4f5c\u7528\uff08\u867d\u7136\u5b83\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u5b88\u62a4\u8fdb\u7a0b\uff09\u3002\u539f\u7a0b\u5e8f\u7684\u7684\u6807\u51c6\u8f93\u51fa\u88ab\u81ea\u52a8\u6539\u5411\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u7684nohup.out\u6587\u4ef6\uff0c\u8d77\u5230\u4e86log\u7684\u4f5c\u7528\uff0c\u5b9e\u73b0\u4e86\u5b8c\u6574\u7684\u5b88\u62a4\u8fdb\u7a0b\u529f\u80fd\u3002 \u9644\uff1a \u7b80\u5355\u800c\u6709\u7528\u7684nohup\u547d\u4ee4 domain\u6a21\u5f0f \u8be5\u6a21\u5f0f\u6682\u4e0d\u53d9\u8ff0\u3002 \u4e8c\u3001\u914d\u7f6eJboss \u00b6 \u9ed8\u8ba4Jboss\u53ea\u7ed1\u5b9a\u5728\u672c\u5730 127.0.0.1 \u5916\u7f51\u65e0\u6cd5\u8bbf\u95ee\u3002\u9700\u914d\u7f6estandalone\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u7b2c\u4e00\u6b65\uff0c\u6253\u5f00 ${JBOSS_HOME}/standalone/configuration/standalone.xml \u7b2c\u4e8c\u6b65\uff0c\u67e5\u627e\u5230\u5982\u4e0b\u914d\u7f6e <interfaces> <interface name= \"management\" > <inet-address value= \"${jboss.bind.address.management:127.0.0.1}\" /> </interface> <interface name= \"public\" > <inet-address value= \"${jboss.bind.address:127.0.0.1}\" /> </interface> </interfaces> \u5c06 127.0.0.1 \u6539\u6210 0.0.0.0 \uff0c\u8fd9\u6837\u5916\u7f51\u5c31\u80fd\u8bbf\u95eeJboss\uff0c\u540c\u65f6\u53ef\u4ee5\u8fdb\u5165\u7ba1\u7406\u6a21\u5f0f\u3002 \u7b2c\u4e09\u6b65\uff0c\u8bbe\u7f6eURI\u7f16\u7801\uff0c\u5c06\u4ee5\u4e0b\u5185\u5bb9\u63d2\u5165\u5230 standalone.xml \u6587\u4ef6\u4e2d <extensions></extensions> \u8282\u70b9\u4e4b\u540e\u3002 <system-properties> <property name= \"org.apache.catalina.connector.URI_ENCODING\" value= \"UTF-8\" /> <property name= \"org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING\" value= \"true\" /> </system-properties> \u7b2c\u56db\u6b65\uff0c\u4fdd\u5b58\u91cd\u542f\u3002 \u4e09\u3001\u90e8\u7f72Jboss \u00b6 \u5982\u4e0b\u56fe\u4e2d\u63cf\u8ff0\u4e86\u90e8\u7f72\u5e94\u7528\u7684\u56db\u79cd\u65b9\u5f0f\uff1a Administration UI Console Command Line Console Maven Plugin copy \u5728\u6b64\u4e4b\u524d\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u5316\u7ba1\u7406\u8d26\u6237\uff0c\u8fdb\u5165 ${JBOSS_HOME}/bin \u4e0b\uff0c\u6267\u884c ./add-user.sh \u9009\u62e9Management User\uff0c\u5982\u4e0b\u56fe \u5982\u4e0a\uff0c\u5728\u63d0\u793a\u8f93\u5165username\u548cpassword\u65f6\u8f93\u5165\u76f8\u5e94\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6211\u4eec\u968f\u540e\u4f1a\u4f7f\u7528\u5b83\u767b\u5f55\u7ba1\u7406\u63a7\u5236\u53f0\u3002 Administration UI Console\u90e8\u7f72 \u8bbf\u95ee http://127.0.0.1:9990/console \uff08\u672c\u5730\uff09\u6216 http://serverIP:9990/console \uff08\u5916\u7f51\uff09\u8fdb\u5165\u7ba1\u7406\u754c\u9762\uff0c\u8be5\u6a21\u5f0f\u662f\u56fe\u5f62\u5316\u754c\u9762\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 Command Line Console\u90e8\u7f72 \u6267\u884c ./jboss-cli.sh \u8fdb\u5165\u5230Command Line Console\u754c\u9762 [twen@localhost bin]$ ./jboss-cli.sh You are disconnected at the moment. Type 'connect' to connect to the server or 'help' for the list of supported commands. [disconnected /] connect [standalone@localhost:9999 /] \u4f7f\u7528deploy\u547d\u4ee4\u90e8\u7f72XXX.war [standalone@localhost:9999 /] deploy /dir/target/XXX.war \u540c\u6837\u4f7f\u7528undeploy [standalone@localhost:9999 /] undeploy XXX.war Maven Plugin \u5229\u7528\u63d2\u4ef6\u524d\u5148\u6267\u884c mvn clean package \u6253\u5305\uff0c\u786e\u4fdd\u5728 target \u76ee\u5f55\u4e0b\u6709war\u5b58\u5728\u3002 - jboss-as-maven-plugin \u914d\u7f6eMaven <plugin> <groupId> org.jboss.as.plugins </groupId> <artifactId> jboss-as-maven-plugin </artifactId> <version> 7.1.1.Final </version> <configuration> <hostname> serverIP </hostname> <port> 9999 </port> <username> user </username> <password> pass </password> </configuration> </plugin> cargo-maven2-plugin *\u8350 Maven\u914d\u7f6e <plugin> <groupId> org.codehaus.cargo </groupId> <artifactId> cargo-maven2-plugin </artifactId> <version> 1.4.14 </version> <configuration> <!-- Container configuration --> <container> <timeout> 60000 </timeout> <!-- 1 minutes --> <containerId> jboss71x </containerId> <type> remote </type> </container> <!-- Configuration to use with the container --> <configuration> <type> runtime </type> <properties> <cargo.hostname> serverIP </cargo.hostname> <cargo.jboss.management-native.port> 9999 </cargo.jboss.management-native.port> <cargo.remote.username> user </cargo.remote.username> <cargo.remote.password> pass </cargo.remote.password> </properties> </configuration> <!-- Deployer configuration --> <deployer> <type> remote </type> </deployer> </configuration> <dependencies> <dependency> <groupId> org.jboss.as </groupId> <artifactId> jboss-as-controller-client </artifactId> <version> 7.1.0.Final </version> </dependency> </dependencies> </plugin> \u8fd9\u6837\u5229\u7528Maven Plugin\u5c31\u53ef\u4ee5\u6267\u884c mvn jboss-as:deploy\uff08mvn cargo:deploy\uff09 \u7b49\u547d\u4ee4\u4e86\u3002 copy \u62f7\u8d1dwar\u5305\u5230 ${JBOSS_HOME}/standalone/deployments \u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u4f1a\u521b\u5efa war\u5305\u540d.dodeploy \u6587\u4ef6\uff0c\u8bf4\u660e\u6b63\u6267\u884c\u90e8\u7f72\uff0c\u5b8c\u6210\u540e\u4f1a\u751f\u6210 war\u5305\u540d.deployed \u6587\u4ef6,\u8bf4\u660e\u90e8\u7f72\u6210\u529f\u3002 \u56db\u3001\u9047\u5230\u7684\u5751 \u00b6 \u6ca1\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4fee\u6539\u7aef\u53e3\u7684\u65f6\u5019\u6267\u884c mvn jboss-as:deploy \uff0c\u62a5\u9519log\u5982\u4e0b\uff1a Could not connect to remote://serverIP:9999. The connection timed out... \u89e3\u51b3\u65b9\u6cd5\u89c1 \u4e8c\u3001\u914d\u7f6eJboss \u7b2c\u4e8c\u6b65\u3002 ${jboss.bind.address.management:127.0.0.1} \u5c06 127.0.0.1 \u6539\u6210 0.0.0.0 \u8fdc\u7a0b\u90e8\u7f72\u540e\uff0c\u5f53Jboss\u542f\u52a8\u65f6\uff0c\u5e94\u7528\u62a5\u9519\uff0c\u4f46Jboss\u4ecd\u7136\u542f\u52a8\u4e86\u3002\u8fd9\u65f6\u5019\u5c06 XXX.war \u7684\u6587\u4ef6\u5220\u9664\uff0c\u5728\u6b64\u542f\u52a8Jboss\u62a5\u9519\u5982\u4e0b\uff1a [Host Controller] 09:03:13,042 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) JBAS014613: Operation (\"deploy\") failed - address: ([(\"deployment\" => \"XXX.war\")]) - failure description: \"JBAS010876: No deployment content with hash 5f870cae18c7f6f29b8964e18895199c3754de09 is available in the deployment content repository for deployment 'ez-message.war'. This is a fatal boot error. To correct the problem, either restart with the --admin-only switch set and use the CLI to install the missing content or remove it from the configuration, or remove the deployment from the xml configuraiton file and restart.\" \u89e3\u51b3\u65b9\u6cd5\uff0c\u4fee\u6539 ${JBOSS_HOME}/standalone/configuration/standalone.xml \u914d\u7f6e\u6587\u4ef6\uff0c\u628a <deployments/> \u5185\u5bb9\u5220\u9664\u3002 <deployments> <deployment name= \"XXX.war\" runtime-name= \"XXX.war\" /> </deployments> \u6ce8\uff1a \u8fdc\u7a0b\u90e8\u7f72\u65f6\u5c06war\u5305\u4e0a\u4f20\u81f3 ${JBOSS_HOME}/standalone/data/content \u76ee\u5f55\u4e0b\u3002","title":"Maven \u8fdc\u7a0b\u90e8\u7f72\u9879\u76ee\u5230jboss-as-7"},{"location":"blog/2015/maven-remote-deploy-jboss/#maven-jboss-as-7","text":"2015/08/14 22:07 \u6700\u8fd1\u5728\u770b\u8bb8\u6653\u658c\uff08Juven Xu\uff09\u7f16\u5199\u7684\u300aMaven\u5b9e\u6218\u300b\uff0c\u4e66\u4e2d\u63d0\u5230Maven\u8fdc\u7a0b\u90e8\u7f72\u9879\u76ee\u5230\u670d\u52a1\u5668\u3002\u521a\u597d\u6700\u8fd1\u505a\u7684\u9879\u76ee\u5728\u6d4b\u8bd5\u9636\u6bb5\uff0c\u4e0d\u8fc7\u6d4b\u8bd5\u73af\u5883\u7528\u7684\u670d\u52a1\u5668\u662fJboss\uff08jboss-as-7.1.0.Final\uff09\uff0c\u9042\u5f00\u59cb\u6298\u817e\u3002\u4ee5jboss-as-7.1.1.Final\u4e3a\u4f8b\u3002","title":"Maven \u8fdc\u7a0b\u90e8\u7f72\u9879\u76ee\u5230jboss-as-7"},{"location":"blog/2015/maven-remote-deploy-jboss/#jboss","text":"\u5b89\u88c5Jboss\u5728Linux\u4e0b\u89e3\u538b\u5373\u53ef\u3002\u542f\u52a8\u5305\u62ecstandalone\u6a21\u5f0f\u548cdomain\u6a21\u5f0f\u3002 standalone\u6a21\u5f0f \u7b80\u5355\u5f00\u542f\u670d\u52a1\u5668\u7684\u547d\u4ee4\uff1a\u8fdb\u5165\u5230 bin \u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u547d\u4ee4\u3002 ./standalone.sh \u8fd9\u79cd\u5f00\u542f\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u6709\u4e2a\u7f3a\u70b9\uff0c\u5f53\u4f60\u7684\u547d\u4ee4\u7a97\u53e3\u5173\u95ed\u540e\uff0c\u670d\u52a1\u81ea\u52a8down\u4e86\u3002 \u8ba9\u670d\u52a1\u5668\u5f00\u542f\u540e\u5728\u540e\u53f0\u8fd0\u884c\uff1a\u8fdb\u5165\u5230bin\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u547d\u4ee4\u3002 nohup ./standalone.sh& \u6216 nohup ./standalone.sh run& \u8fd9\u6837\u670d\u52a1\u5668\u5c31\u4f1a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5373\u4f7f\u5173\u95ed\u547d\u4ee4\u7a97\u53e3\uff0c\u670d\u52a1\u5668\u4f9d\u7136\u8fd0\u884c\u3002\u670d\u52a1\u9700\u5173\u95ed\u65f6\uff0c\u91c7\u7528 ps -ef | grep jboss \uff0c\u67e5\u770b\u8fdb\u7a0b\u53f7\uff0c\u7136\u540e kill -9 \u8fdb\u7a0b\u53f7 \uff0c\u518d\u91cd\u542f\u3002 \u6267\u884cnohup\u547d\u4ee4\uff0c\u63a7\u5236\u53f0logout\u540e\uff0c\u8fdb\u7a0b\u4ecd\u7136\u7ee7\u7eed\u8fd0\u884c\uff0c\u8d77\u5230\u5b88\u62a4\u8fdb\u7a0b\u7684\u4f5c\u7528\uff08\u867d\u7136\u5b83\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u5b88\u62a4\u8fdb\u7a0b\uff09\u3002\u539f\u7a0b\u5e8f\u7684\u7684\u6807\u51c6\u8f93\u51fa\u88ab\u81ea\u52a8\u6539\u5411\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u7684nohup.out\u6587\u4ef6\uff0c\u8d77\u5230\u4e86log\u7684\u4f5c\u7528\uff0c\u5b9e\u73b0\u4e86\u5b8c\u6574\u7684\u5b88\u62a4\u8fdb\u7a0b\u529f\u80fd\u3002 \u9644\uff1a \u7b80\u5355\u800c\u6709\u7528\u7684nohup\u547d\u4ee4 domain\u6a21\u5f0f \u8be5\u6a21\u5f0f\u6682\u4e0d\u53d9\u8ff0\u3002","title":"\u4e00\u3001\u542f\u52a8Jboss"},{"location":"blog/2015/maven-remote-deploy-jboss/#jboss_1","text":"\u9ed8\u8ba4Jboss\u53ea\u7ed1\u5b9a\u5728\u672c\u5730 127.0.0.1 \u5916\u7f51\u65e0\u6cd5\u8bbf\u95ee\u3002\u9700\u914d\u7f6estandalone\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u7b2c\u4e00\u6b65\uff0c\u6253\u5f00 ${JBOSS_HOME}/standalone/configuration/standalone.xml \u7b2c\u4e8c\u6b65\uff0c\u67e5\u627e\u5230\u5982\u4e0b\u914d\u7f6e <interfaces> <interface name= \"management\" > <inet-address value= \"${jboss.bind.address.management:127.0.0.1}\" /> </interface> <interface name= \"public\" > <inet-address value= \"${jboss.bind.address:127.0.0.1}\" /> </interface> </interfaces> \u5c06 127.0.0.1 \u6539\u6210 0.0.0.0 \uff0c\u8fd9\u6837\u5916\u7f51\u5c31\u80fd\u8bbf\u95eeJboss\uff0c\u540c\u65f6\u53ef\u4ee5\u8fdb\u5165\u7ba1\u7406\u6a21\u5f0f\u3002 \u7b2c\u4e09\u6b65\uff0c\u8bbe\u7f6eURI\u7f16\u7801\uff0c\u5c06\u4ee5\u4e0b\u5185\u5bb9\u63d2\u5165\u5230 standalone.xml \u6587\u4ef6\u4e2d <extensions></extensions> \u8282\u70b9\u4e4b\u540e\u3002 <system-properties> <property name= \"org.apache.catalina.connector.URI_ENCODING\" value= \"UTF-8\" /> <property name= \"org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING\" value= \"true\" /> </system-properties> \u7b2c\u56db\u6b65\uff0c\u4fdd\u5b58\u91cd\u542f\u3002","title":"\u4e8c\u3001\u914d\u7f6eJboss"},{"location":"blog/2015/maven-remote-deploy-jboss/#jboss_2","text":"\u5982\u4e0b\u56fe\u4e2d\u63cf\u8ff0\u4e86\u90e8\u7f72\u5e94\u7528\u7684\u56db\u79cd\u65b9\u5f0f\uff1a Administration UI Console Command Line Console Maven Plugin copy \u5728\u6b64\u4e4b\u524d\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u5316\u7ba1\u7406\u8d26\u6237\uff0c\u8fdb\u5165 ${JBOSS_HOME}/bin \u4e0b\uff0c\u6267\u884c ./add-user.sh \u9009\u62e9Management User\uff0c\u5982\u4e0b\u56fe \u5982\u4e0a\uff0c\u5728\u63d0\u793a\u8f93\u5165username\u548cpassword\u65f6\u8f93\u5165\u76f8\u5e94\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6211\u4eec\u968f\u540e\u4f1a\u4f7f\u7528\u5b83\u767b\u5f55\u7ba1\u7406\u63a7\u5236\u53f0\u3002 Administration UI Console\u90e8\u7f72 \u8bbf\u95ee http://127.0.0.1:9990/console \uff08\u672c\u5730\uff09\u6216 http://serverIP:9990/console \uff08\u5916\u7f51\uff09\u8fdb\u5165\u7ba1\u7406\u754c\u9762\uff0c\u8be5\u6a21\u5f0f\u662f\u56fe\u5f62\u5316\u754c\u9762\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 Command Line Console\u90e8\u7f72 \u6267\u884c ./jboss-cli.sh \u8fdb\u5165\u5230Command Line Console\u754c\u9762 [twen@localhost bin]$ ./jboss-cli.sh You are disconnected at the moment. Type 'connect' to connect to the server or 'help' for the list of supported commands. [disconnected /] connect [standalone@localhost:9999 /] \u4f7f\u7528deploy\u547d\u4ee4\u90e8\u7f72XXX.war [standalone@localhost:9999 /] deploy /dir/target/XXX.war \u540c\u6837\u4f7f\u7528undeploy [standalone@localhost:9999 /] undeploy XXX.war Maven Plugin \u5229\u7528\u63d2\u4ef6\u524d\u5148\u6267\u884c mvn clean package \u6253\u5305\uff0c\u786e\u4fdd\u5728 target \u76ee\u5f55\u4e0b\u6709war\u5b58\u5728\u3002 - jboss-as-maven-plugin \u914d\u7f6eMaven <plugin> <groupId> org.jboss.as.plugins </groupId> <artifactId> jboss-as-maven-plugin </artifactId> <version> 7.1.1.Final </version> <configuration> <hostname> serverIP </hostname> <port> 9999 </port> <username> user </username> <password> pass </password> </configuration> </plugin> cargo-maven2-plugin *\u8350 Maven\u914d\u7f6e <plugin> <groupId> org.codehaus.cargo </groupId> <artifactId> cargo-maven2-plugin </artifactId> <version> 1.4.14 </version> <configuration> <!-- Container configuration --> <container> <timeout> 60000 </timeout> <!-- 1 minutes --> <containerId> jboss71x </containerId> <type> remote </type> </container> <!-- Configuration to use with the container --> <configuration> <type> runtime </type> <properties> <cargo.hostname> serverIP </cargo.hostname> <cargo.jboss.management-native.port> 9999 </cargo.jboss.management-native.port> <cargo.remote.username> user </cargo.remote.username> <cargo.remote.password> pass </cargo.remote.password> </properties> </configuration> <!-- Deployer configuration --> <deployer> <type> remote </type> </deployer> </configuration> <dependencies> <dependency> <groupId> org.jboss.as </groupId> <artifactId> jboss-as-controller-client </artifactId> <version> 7.1.0.Final </version> </dependency> </dependencies> </plugin> \u8fd9\u6837\u5229\u7528Maven Plugin\u5c31\u53ef\u4ee5\u6267\u884c mvn jboss-as:deploy\uff08mvn cargo:deploy\uff09 \u7b49\u547d\u4ee4\u4e86\u3002 copy \u62f7\u8d1dwar\u5305\u5230 ${JBOSS_HOME}/standalone/deployments \u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u4f1a\u521b\u5efa war\u5305\u540d.dodeploy \u6587\u4ef6\uff0c\u8bf4\u660e\u6b63\u6267\u884c\u90e8\u7f72\uff0c\u5b8c\u6210\u540e\u4f1a\u751f\u6210 war\u5305\u540d.deployed \u6587\u4ef6,\u8bf4\u660e\u90e8\u7f72\u6210\u529f\u3002","title":"\u4e09\u3001\u90e8\u7f72Jboss"},{"location":"blog/2015/maven-remote-deploy-jboss/#_1","text":"\u6ca1\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4fee\u6539\u7aef\u53e3\u7684\u65f6\u5019\u6267\u884c mvn jboss-as:deploy \uff0c\u62a5\u9519log\u5982\u4e0b\uff1a Could not connect to remote://serverIP:9999. The connection timed out... \u89e3\u51b3\u65b9\u6cd5\u89c1 \u4e8c\u3001\u914d\u7f6eJboss \u7b2c\u4e8c\u6b65\u3002 ${jboss.bind.address.management:127.0.0.1} \u5c06 127.0.0.1 \u6539\u6210 0.0.0.0 \u8fdc\u7a0b\u90e8\u7f72\u540e\uff0c\u5f53Jboss\u542f\u52a8\u65f6\uff0c\u5e94\u7528\u62a5\u9519\uff0c\u4f46Jboss\u4ecd\u7136\u542f\u52a8\u4e86\u3002\u8fd9\u65f6\u5019\u5c06 XXX.war \u7684\u6587\u4ef6\u5220\u9664\uff0c\u5728\u6b64\u542f\u52a8Jboss\u62a5\u9519\u5982\u4e0b\uff1a [Host Controller] 09:03:13,042 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) JBAS014613: Operation (\"deploy\") failed - address: ([(\"deployment\" => \"XXX.war\")]) - failure description: \"JBAS010876: No deployment content with hash 5f870cae18c7f6f29b8964e18895199c3754de09 is available in the deployment content repository for deployment 'ez-message.war'. This is a fatal boot error. To correct the problem, either restart with the --admin-only switch set and use the CLI to install the missing content or remove it from the configuration, or remove the deployment from the xml configuraiton file and restart.\" \u89e3\u51b3\u65b9\u6cd5\uff0c\u4fee\u6539 ${JBOSS_HOME}/standalone/configuration/standalone.xml \u914d\u7f6e\u6587\u4ef6\uff0c\u628a <deployments/> \u5185\u5bb9\u5220\u9664\u3002 <deployments> <deployment name= \"XXX.war\" runtime-name= \"XXX.war\" /> </deployments> \u6ce8\uff1a \u8fdc\u7a0b\u90e8\u7f72\u65f6\u5c06war\u5305\u4e0a\u4f20\u81f3 ${JBOSS_HOME}/standalone/data/content \u76ee\u5f55\u4e0b\u3002","title":"\u56db\u3001\u9047\u5230\u7684\u5751"},{"location":"blog/2016/db-isolation-level-spring-transaction/","tags":["Spring","Transaction"],"text":"\u6570\u636e\u5e93\u9694\u79bb\u7ea7\u522b\u548cspring\u4e8b\u52a1\uff08\u4e00\uff09 \u00b6 2016-05-18 00:27:00","title":"\u6570\u636e\u5e93\u9694\u79bb\u7ea7\u522b\u548cspring\u4e8b\u52a1\uff08\u4e00\uff09"},{"location":"blog/2016/db-isolation-level-spring-transaction/#spring","text":"2016-05-18 00:27:00","title":"\u6570\u636e\u5e93\u9694\u79bb\u7ea7\u522b\u548cspring\u4e8b\u52a1\uff08\u4e00\uff09"},{"location":"blog/2016/git-flow/","tags":["Git"],"text":"Git Flow \u00b6 2016-10-07 01:04:00","title":"Git Flow"},{"location":"blog/2016/git-flow/#git-flow","text":"2016-10-07 01:04:00","title":"Git Flow"},{"location":"blog/2016/gogs-replace-gitlab-01/","tags":["Gogs","Gitlab"],"text":"\u7528Gogs\u66ff\u4ee3Gitlab\uff08\u4e00\uff09 \u00b6 2016-02-09 23:49:00 \u5b89\u88c5\u8bf4\u660e \u00b6 \u5df2\u5b89\u88c5git\uff08yum -y install git\uff09 \u5df2\u5b89\u88c5mysql\uff08 yum install mysql \uff09 \u670d\u52a1\u5b89\u88c5\u8def\u5f84\uff1a/usr/servers gogs\u7248\u672c\u53f7\uff1a gogs_v0.8.25_linux_amd64.tar.gz \u4ee5\u7528\u6237git\uff08\u975eroot\uff09\u542f\u52a8 1.\u4e0b\u8f7d\u5e76\u89e3\u538b \u5c06gogs_v0.8.25_linux_amd64.tar.gz\u62f7\u8d1d\u5230/usr/servers,\u89e3\u538b tar -zxvf gogs_v0.8.25_linux_amd64.tar.gz \u89e3\u538b\u6587\u4ef6\u5939\u4e3agogs 2.\u65b0\u5efa\u7cfb\u7edf\u7528\u6237 adduser --system --shell /bin/bash --comment 'GitLab' --create-home --home-dir /home/git/ git \u4e3a\u4e86\u5305\u542b /usr/local/bin \u5230git\u7528\u6237\u7684 $PATH \uff0c\u65b9\u6cd5\u662f\u7f16\u8f91\u8d85\u7ea7\u7528\u6237\u6587\u4ef6\u3002 \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff1a visudo \u7136\u540e\u641c\u7d22\uff1a Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin \u5c06\u5176\u6539\u6210\uff1a Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin 3.\u4fee\u6539\u76ee\u5f55\u6743\u9650 \u4fee\u6539 /usr/servers/gogs \u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u3001\u6240\u6709\u5b50\u6587\u4ef6\u3001\u6587\u4ef6\u5939\u7684\u6240\u6709\u7528\u6237 chown -R git /usr/servers/gogs 4.\u542f\u52a8 \u4ee5\u7528\u6237git\u542f\u52a8 [git@vdlmobile16 gogs]$ ./gogs web 2016/02/22 15:16:02 [W] Custom config '/usr/servers/gogs/custom/conf/app.ini' not found, ignore this if you're running first time 2016/02/22 15:16:02 [T] Custom path: /usr/servers/gogs/custom 2016/02/22 15:16:02 [T] Log path: /usr/servers/gogs/log 2016/02/22 15:16:02 [I] codeRepo 0.8.25.0129 2016/02/22 15:16:02 [I] Log Mode: File(Info) 2016/02/22 15:16:02 [I] Cache Service Enabled 2016/02/22 15:16:02 [I] Session Service Enabled 2016/02/22 15:16:02 [I] Git Version: 1.7.1 2016/02/22 15:16:03 [T] Doing: CheckRepoStats 2016/02/22 15:16:03 [I] SQLite3 Supported 2016/02/22 15:16:03 [I] Run Mode: Production [mysql] 2016/02/22 15:16:03 statement.go:27: invalid connection 2016/02/22 15:16:03 [I] Listen: http://0.0.0.0:3000 5.\u8bbf\u95ee\u6d4f\u89c8\u5668 \u521d\u59cb\u5316\u914d\u7f6e\u5e76\u5b89\u88c5 6.\u914d\u7f6eSSH \u5b89\u88c5\u5b8c\u6210\u5e76\u6ce8\u518c\uff0c\u589e\u52a0\u516c\u94a5\uff0c\u8fd0\u884c ssh -T git@ip_addr \u65f6\u62a5\u9519Permission denied (publickey,gssapi-keyex,gssapi-with-mic)\uff0c\u89e3\u51b3\u5982\u4e0b\uff1a 1)\u4fee\u6539sshd_config\u6587\u4ef6 vi /etc/ssh/sshd_config \u5f00\u542f\u4ee5\u4e0b\u5185\u5bb9 HostKey /etc/ssh/ssh_host_rsa_key RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys \u91cd\u542f /etc/init.d/sshd restart 2)\u6743\u9650\u8bbe\u7f6e chown -R git /home/git //\u5982\u679c\u4ee5git\u542f\u52a8\uff0cowner\u9ed8\u8ba4\u4e3agit chmod 700 /home/git chmod 700 /home/git/.ssh chmod 644 /home/git/.ssh/authorized_keys //\u516c\u94a5\u6587\u4ef6\u7684\u6240\u6709\u6743\u9650 \u81f3\u6b64\u5e94\u8be5\u5b8c\u6210\uff0c\u5982\u679c\u5728\u5ba2\u6237\u7aef\u6267\u884c ssh -T git@ip_addr \u4f9d\u7136\u62a5\u9519 Permission denied (publickey,gssapi-keyex,gssapi-with-mic). \u7ee7\u7eed\u4e0b\u6587\u3002 \u5173\u95edSELinux\u89e3\u51b3\u95ee\u9898\uff1a 1)\u6682\u65f6\u5173\u95ed\uff08\u91cd\u542f\u540e\u6062\u590d\uff09\uff1a setenforce 0 2)\u6c38\u4e45\u5173\u95ed\uff08\u9700\u8981\u91cd\u542f\uff09\uff1a vi /etc/selinux/config SELINUX = disabled \u6700\u540e\u6267\u884c ssh -T git@ip_addr \uff0c\u7ed3\u679c\uff1a Hi there, You've successfully authenticated, but Gogs does not provide shell access. If this is unexpected, please log in with password and setup Gogs under another user. 7.\u81f3\u6b64\u6210\u529f","title":"\u7528Gogs\u66ff\u4ee3Gitlab\uff08\u4e00\uff09"},{"location":"blog/2016/gogs-replace-gitlab-01/#gogsgitlab","text":"2016-02-09 23:49:00","title":"\u7528Gogs\u66ff\u4ee3Gitlab\uff08\u4e00\uff09"},{"location":"blog/2016/gogs-replace-gitlab-01/#_1","text":"\u5df2\u5b89\u88c5git\uff08yum -y install git\uff09 \u5df2\u5b89\u88c5mysql\uff08 yum install mysql \uff09 \u670d\u52a1\u5b89\u88c5\u8def\u5f84\uff1a/usr/servers gogs\u7248\u672c\u53f7\uff1a gogs_v0.8.25_linux_amd64.tar.gz \u4ee5\u7528\u6237git\uff08\u975eroot\uff09\u542f\u52a8 1.\u4e0b\u8f7d\u5e76\u89e3\u538b \u5c06gogs_v0.8.25_linux_amd64.tar.gz\u62f7\u8d1d\u5230/usr/servers,\u89e3\u538b tar -zxvf gogs_v0.8.25_linux_amd64.tar.gz \u89e3\u538b\u6587\u4ef6\u5939\u4e3agogs 2.\u65b0\u5efa\u7cfb\u7edf\u7528\u6237 adduser --system --shell /bin/bash --comment 'GitLab' --create-home --home-dir /home/git/ git \u4e3a\u4e86\u5305\u542b /usr/local/bin \u5230git\u7528\u6237\u7684 $PATH \uff0c\u65b9\u6cd5\u662f\u7f16\u8f91\u8d85\u7ea7\u7528\u6237\u6587\u4ef6\u3002 \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff1a visudo \u7136\u540e\u641c\u7d22\uff1a Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin \u5c06\u5176\u6539\u6210\uff1a Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin 3.\u4fee\u6539\u76ee\u5f55\u6743\u9650 \u4fee\u6539 /usr/servers/gogs \u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u3001\u6240\u6709\u5b50\u6587\u4ef6\u3001\u6587\u4ef6\u5939\u7684\u6240\u6709\u7528\u6237 chown -R git /usr/servers/gogs 4.\u542f\u52a8 \u4ee5\u7528\u6237git\u542f\u52a8 [git@vdlmobile16 gogs]$ ./gogs web 2016/02/22 15:16:02 [W] Custom config '/usr/servers/gogs/custom/conf/app.ini' not found, ignore this if you're running first time 2016/02/22 15:16:02 [T] Custom path: /usr/servers/gogs/custom 2016/02/22 15:16:02 [T] Log path: /usr/servers/gogs/log 2016/02/22 15:16:02 [I] codeRepo 0.8.25.0129 2016/02/22 15:16:02 [I] Log Mode: File(Info) 2016/02/22 15:16:02 [I] Cache Service Enabled 2016/02/22 15:16:02 [I] Session Service Enabled 2016/02/22 15:16:02 [I] Git Version: 1.7.1 2016/02/22 15:16:03 [T] Doing: CheckRepoStats 2016/02/22 15:16:03 [I] SQLite3 Supported 2016/02/22 15:16:03 [I] Run Mode: Production [mysql] 2016/02/22 15:16:03 statement.go:27: invalid connection 2016/02/22 15:16:03 [I] Listen: http://0.0.0.0:3000 5.\u8bbf\u95ee\u6d4f\u89c8\u5668 \u521d\u59cb\u5316\u914d\u7f6e\u5e76\u5b89\u88c5 6.\u914d\u7f6eSSH \u5b89\u88c5\u5b8c\u6210\u5e76\u6ce8\u518c\uff0c\u589e\u52a0\u516c\u94a5\uff0c\u8fd0\u884c ssh -T git@ip_addr \u65f6\u62a5\u9519Permission denied (publickey,gssapi-keyex,gssapi-with-mic)\uff0c\u89e3\u51b3\u5982\u4e0b\uff1a 1)\u4fee\u6539sshd_config\u6587\u4ef6 vi /etc/ssh/sshd_config \u5f00\u542f\u4ee5\u4e0b\u5185\u5bb9 HostKey /etc/ssh/ssh_host_rsa_key RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys \u91cd\u542f /etc/init.d/sshd restart 2)\u6743\u9650\u8bbe\u7f6e chown -R git /home/git //\u5982\u679c\u4ee5git\u542f\u52a8\uff0cowner\u9ed8\u8ba4\u4e3agit chmod 700 /home/git chmod 700 /home/git/.ssh chmod 644 /home/git/.ssh/authorized_keys //\u516c\u94a5\u6587\u4ef6\u7684\u6240\u6709\u6743\u9650 \u81f3\u6b64\u5e94\u8be5\u5b8c\u6210\uff0c\u5982\u679c\u5728\u5ba2\u6237\u7aef\u6267\u884c ssh -T git@ip_addr \u4f9d\u7136\u62a5\u9519 Permission denied (publickey,gssapi-keyex,gssapi-with-mic). \u7ee7\u7eed\u4e0b\u6587\u3002 \u5173\u95edSELinux\u89e3\u51b3\u95ee\u9898\uff1a 1)\u6682\u65f6\u5173\u95ed\uff08\u91cd\u542f\u540e\u6062\u590d\uff09\uff1a setenforce 0 2)\u6c38\u4e45\u5173\u95ed\uff08\u9700\u8981\u91cd\u542f\uff09\uff1a vi /etc/selinux/config SELINUX = disabled \u6700\u540e\u6267\u884c ssh -T git@ip_addr \uff0c\u7ed3\u679c\uff1a Hi there, You've successfully authenticated, but Gogs does not provide shell access. If this is unexpected, please log in with password and setup Gogs under another user. 7.\u81f3\u6b64\u6210\u529f","title":"\u5b89\u88c5\u8bf4\u660e"},{"location":"blog/2016/gogs-replace-gitlab-02/","tags":["Gogs","Gitlab"],"text":"\u7528Gogs\u66ff\u4ee3Gitlab\uff08\u4e8c\uff09 \u00b6 2016-02-09 23:49:00 nginx\u53cd\u5411\u4ee3\u7406gogs \u00b6 1.\u5148\u5bfc\u8bf4\u660e - \u5df2\u5b89\u88c5nginx - nginx\u5b89\u88c5\u5728\u672c\u673a 2.\u914d\u7f6enginx \u5728 nginx.conf \u6587\u4ef6\u4e2d\uff0c\u5c06\u4e0b\u9762\u7684 server \u90e8\u5206\u589e\u52a0\u81f3 http \u5206\u533a\u5185\u5e76\u91cd\u8f7d\u914d\u7f6e server { listen 80 ; server_name localhost ; access_log logs/gogs.access.log ; location / { proxy_pass http://localhost:3000/ ; keepalive_timeout 120 ; expires 5m ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header connection Keep-Alive ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; } } 3.\u81f3\u6b64\u5b8c\u6210\u53cd\u5411\u4ee3\u7406","title":"\u7528Gogs\u66ff\u4ee3Gitlab\uff08\u4e8c\uff09"},{"location":"blog/2016/gogs-replace-gitlab-02/#gogsgitlab","text":"2016-02-09 23:49:00","title":"\u7528Gogs\u66ff\u4ee3Gitlab\uff08\u4e8c\uff09"},{"location":"blog/2016/gogs-replace-gitlab-02/#nginxgogs","text":"1.\u5148\u5bfc\u8bf4\u660e - \u5df2\u5b89\u88c5nginx - nginx\u5b89\u88c5\u5728\u672c\u673a 2.\u914d\u7f6enginx \u5728 nginx.conf \u6587\u4ef6\u4e2d\uff0c\u5c06\u4e0b\u9762\u7684 server \u90e8\u5206\u589e\u52a0\u81f3 http \u5206\u533a\u5185\u5e76\u91cd\u8f7d\u914d\u7f6e server { listen 80 ; server_name localhost ; access_log logs/gogs.access.log ; location / { proxy_pass http://localhost:3000/ ; keepalive_timeout 120 ; expires 5m ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header connection Keep-Alive ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; } } 3.\u81f3\u6b64\u5b8c\u6210\u53cd\u5411\u4ee3\u7406","title":"nginx\u53cd\u5411\u4ee3\u7406gogs"},{"location":"blog/2016/nginx-on-centos6-01/","tags":["Nginx","Centos"],"text":"Nginx On Centos6\uff08\u4e00\uff09 \u00b6 2016-02-09 23:46:00 \u5b89\u88c5\u8bf4\u660e \u00b6 \u670d\u52a1\u5b89\u88c5\u8def\u5f84\uff1a/usr/servers \u6e90\u7801\u5b89\u88c5\u8def\u5f84\uff1a/usr/servers/env tar\u5305\u53ca\u89e3\u538b\u6e90\u7801\u8def\u5f84\uff1a/usr/local/src \u5b89\u88c5\u5fc5\u8981\u73af\u5883 \u00b6 C\u7684\u7f16\u8bd1\u5668\uff08\u5df2\u5b89\u88c5\u7684\u53ef\u4ee5\u7701\u7565\uff09 yum install gcc C++\u7f16\u8bd1\u5668\uff08\u5df2\u5b89\u88c5\u7684\u53ef\u4ee5\u7701\u7565\uff09 yum install gcc+c++ \u4e0b\u8f7d\u5e76 copy \u4ee5\u4e0b\u5305\u5230\u6e90\u7801\u5b89\u88c5\u8def\u5f84 - pcre-8.38 - zlib-1.2.8 - openssl-1.0.1r \u6e90\u7801\u5b89\u88c5pcre-8.38 cd /usr/local/src/pcre-8.38 ./configure --prefix = /usr/servers/env/pcre //\u6307\u5411\u5b89\u88c5\u8def\u5f84 make && make install \u6e90\u7801\u5b89\u88c5zlib-1.2.8 cd /usr/local/src/zlib-1.2.8 ./configure --prefix = /usr/servers/env/zlib //\u6307\u5411\u5b89\u88c5\u8def\u5f84 make && make install \u6e90\u7801\u5b89\u88c5openssl-1.0.1r cd /usr/local/src/openssl-1.0.1r ./configure --prefix = /usr/servers/env/openssl --openssldir = /usr/servers/env/openssl/conf //\u6307\u5411\u5b89\u88c5\u8def\u5f84 make && make install \u5b89\u88c5nginx \u00b6 \u4e0b\u8f7d\u5e76copy nginx-1.8.1 \u5230\u6e90\u7801\u5b89\u88c5\u8def\u5f84 \u914d\u7f6enginx cd /usr/local/src/nginx-1.8.1 ./configure --prefix = /usr/servers/nginx --sbin-path = /usr/servers/nginx/nginx --conf-path = /usr/servers/nginx/nginx.conf --pid-path = /usr/servers/nginx/nginx.pid --with-http_ssl_module --with-pcre = /usr/local/src/pcre-8.38 //\u6307\u5411\u6e90\u7801 --with-zlib = /usr/local/src/zlib-1.2.8 //\u6307\u5411\u6e90\u7801 --with-openssl = /usr/local/src/openssl-1.0.1r //\u6307\u5411\u6e90\u7801 \u914d\u7f6e\u7ed3\u679c Configuration summary + using PCRE library: /usr/local/src/pcre-8.38 + using OpenSSL library: /usr/local/src/openssl-1.0.1r + md5: using OpenSSL library + sha1: using OpenSSL library + using zlib library: /usr/local/src/zlib-1.2.8 nginx path prefix: \"/usr/servers/nginx\" nginx binary file: \"/usr/servers/nginx/nginx\" nginx configuration prefix: \"/usr/servers/nginx\" nginx configuration file: \"/usr/servers/nginx/nginx.conf\" nginx pid file: \"/usr/servers/nginx/nginx.pid\" nginx error log file: \"/usr/servers/nginx/logs/error.log\" nginx http access log file: \"/usr/servers/nginx/logs/access.log\" nginx http client request body temporary files: \"client_body_temp\" nginx http proxy temporary files: \"proxy_temp\" nginx http fastcgi temporary files: \"fastcgi_temp\" nginx http uwsgi temporary files: \"uwsgi_temp\" nginx http scgi temporary files: \"scgi_temp\" \u7f16\u8bd1\u5b89\u88c5 make && make install \u5b89\u88c5\u5b8c\u6210 \u6d4b\u8bd5\u5b89\u88c5\u7ed3\u679c \u00b6 \u6267\u884c cd /usr/servers/nginx ./nginx \u6d4f\u89c8\u5668\u8bbf\u95ee server_ip:80 \uff0c\u51fa\u73b0 \u5373\u5b89\u88c5\u6210\u529f \u6ce8\uff1a \u5982\u679c\u51fa\u73b0\u4e0d\u80fd\u8bbf\u95ee\u5f88\u6709\u53ef\u80fd\u662f\u9632\u706b\u5899\u7684\u539f\u56e0:)","title":"Nginx On Centos6\uff08\u4e00\uff09"},{"location":"blog/2016/nginx-on-centos6-01/#nginx-on-centos6","text":"2016-02-09 23:46:00","title":"Nginx On Centos6\uff08\u4e00\uff09"},{"location":"blog/2016/nginx-on-centos6-01/#_1","text":"\u670d\u52a1\u5b89\u88c5\u8def\u5f84\uff1a/usr/servers \u6e90\u7801\u5b89\u88c5\u8def\u5f84\uff1a/usr/servers/env tar\u5305\u53ca\u89e3\u538b\u6e90\u7801\u8def\u5f84\uff1a/usr/local/src","title":"\u5b89\u88c5\u8bf4\u660e"},{"location":"blog/2016/nginx-on-centos6-01/#_2","text":"C\u7684\u7f16\u8bd1\u5668\uff08\u5df2\u5b89\u88c5\u7684\u53ef\u4ee5\u7701\u7565\uff09 yum install gcc C++\u7f16\u8bd1\u5668\uff08\u5df2\u5b89\u88c5\u7684\u53ef\u4ee5\u7701\u7565\uff09 yum install gcc+c++ \u4e0b\u8f7d\u5e76 copy \u4ee5\u4e0b\u5305\u5230\u6e90\u7801\u5b89\u88c5\u8def\u5f84 - pcre-8.38 - zlib-1.2.8 - openssl-1.0.1r \u6e90\u7801\u5b89\u88c5pcre-8.38 cd /usr/local/src/pcre-8.38 ./configure --prefix = /usr/servers/env/pcre //\u6307\u5411\u5b89\u88c5\u8def\u5f84 make && make install \u6e90\u7801\u5b89\u88c5zlib-1.2.8 cd /usr/local/src/zlib-1.2.8 ./configure --prefix = /usr/servers/env/zlib //\u6307\u5411\u5b89\u88c5\u8def\u5f84 make && make install \u6e90\u7801\u5b89\u88c5openssl-1.0.1r cd /usr/local/src/openssl-1.0.1r ./configure --prefix = /usr/servers/env/openssl --openssldir = /usr/servers/env/openssl/conf //\u6307\u5411\u5b89\u88c5\u8def\u5f84 make && make install","title":"\u5b89\u88c5\u5fc5\u8981\u73af\u5883"},{"location":"blog/2016/nginx-on-centos6-01/#nginx","text":"\u4e0b\u8f7d\u5e76copy nginx-1.8.1 \u5230\u6e90\u7801\u5b89\u88c5\u8def\u5f84 \u914d\u7f6enginx cd /usr/local/src/nginx-1.8.1 ./configure --prefix = /usr/servers/nginx --sbin-path = /usr/servers/nginx/nginx --conf-path = /usr/servers/nginx/nginx.conf --pid-path = /usr/servers/nginx/nginx.pid --with-http_ssl_module --with-pcre = /usr/local/src/pcre-8.38 //\u6307\u5411\u6e90\u7801 --with-zlib = /usr/local/src/zlib-1.2.8 //\u6307\u5411\u6e90\u7801 --with-openssl = /usr/local/src/openssl-1.0.1r //\u6307\u5411\u6e90\u7801 \u914d\u7f6e\u7ed3\u679c Configuration summary + using PCRE library: /usr/local/src/pcre-8.38 + using OpenSSL library: /usr/local/src/openssl-1.0.1r + md5: using OpenSSL library + sha1: using OpenSSL library + using zlib library: /usr/local/src/zlib-1.2.8 nginx path prefix: \"/usr/servers/nginx\" nginx binary file: \"/usr/servers/nginx/nginx\" nginx configuration prefix: \"/usr/servers/nginx\" nginx configuration file: \"/usr/servers/nginx/nginx.conf\" nginx pid file: \"/usr/servers/nginx/nginx.pid\" nginx error log file: \"/usr/servers/nginx/logs/error.log\" nginx http access log file: \"/usr/servers/nginx/logs/access.log\" nginx http client request body temporary files: \"client_body_temp\" nginx http proxy temporary files: \"proxy_temp\" nginx http fastcgi temporary files: \"fastcgi_temp\" nginx http uwsgi temporary files: \"uwsgi_temp\" nginx http scgi temporary files: \"scgi_temp\" \u7f16\u8bd1\u5b89\u88c5 make && make install \u5b89\u88c5\u5b8c\u6210","title":"\u5b89\u88c5nginx"},{"location":"blog/2016/nginx-on-centos6-01/#_3","text":"\u6267\u884c cd /usr/servers/nginx ./nginx \u6d4f\u89c8\u5668\u8bbf\u95ee server_ip:80 \uff0c\u51fa\u73b0 \u5373\u5b89\u88c5\u6210\u529f \u6ce8\uff1a \u5982\u679c\u51fa\u73b0\u4e0d\u80fd\u8bbf\u95ee\u5f88\u6709\u53ef\u80fd\u662f\u9632\u706b\u5899\u7684\u539f\u56e0:)","title":"\u6d4b\u8bd5\u5b89\u88c5\u7ed3\u679c"},{"location":"blog/2016/nginx-on-centos6-02/","tags":["Nginx","Centos"],"text":"Nginx On Centos6\uff08\u4e8c\uff09 \u00b6 2016-02-22 22:42:00","title":"Nginx On Centos6\uff08\u4e8c\uff09"},{"location":"blog/2016/nginx-on-centos6-02/#nginx-on-centos6","text":"2016-02-22 22:42:00","title":"Nginx On Centos6\uff08\u4e8c\uff09"},{"location":"blog/2016/session-sharding-solution/","tags":["Session","Spring","Redis","Shiro"],"text":"Session\u5171\u4eab\u7684\u89e3\u51b3\u65b9\u6848 \u00b6 2016-03-27 18:24:00 spring session shiro session redis","title":"Session\u5171\u4eab\u7684\u89e3\u51b3\u65b9\u6848"},{"location":"blog/2016/session-sharding-solution/#session","text":"2016-03-27 18:24:00 spring session shiro session redis","title":"Session\u5171\u4eab\u7684\u89e3\u51b3\u65b9\u6848"},{"location":"blog/2016/shiro-01/","tags":["Shiro","RBAC"],"text":"Shiro\uff08\u4e00\uff09\uff1a\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u7ba1\u7406(RBAC) \u00b6 2016-03-28 14:53:00 \u8f6c\u81ea\uff1a http://www.thinksaas.cn/group/topic/150841/ \uff08\u539f\u6587\u5730\u5740\uff1a http://www.katasoft.com/blog/2011/05/09/new-rbac-resource-based-access-control \uff09 \u672c\u6587\u8ba8\u8bba\u4ee5\u89d2\u8272\u6982\u5ff5\u8fdb\u884c\u7684\u6743\u9650\u7ba1\u7406\u7b56\u7565\u53ca\u4e3b\u8981\u4ee5\u57fa\u4e8e\u89d2\u8272\u7684\u673a\u5236\u8fdb\u884c\u6743\u9650\u7ba1\u7406\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\u3002\u540c\u65f6\u6211\u5c06\u8ba8\u8bba\u4e00\u79cd\u6211\u8ba4\u4e3a\u66f4\u597d\u7684\u6743\u9650\u7ba1\u7406\u65b9\u5f0f\u3002 \u4ec0\u4e48\u662f\u89d2\u8272 \u00b6 \u5f53\u8bf4\u5230\u7a0b\u5e8f\u7684\u6743\u9650\u7ba1\u7406\u65f6\uff0c\u4eba\u4eec\u5f80\u5f80\u60f3\u5230\u89d2\u8272\u8fd9\u4e00\u6982\u5ff5\u3002\u89d2\u8272\u662f\u4ee3\u8868\u4e00\u7cfb\u5217\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u6216\u8d23\u4efb\u7684\u5b9e\u4f53\uff0c\u7528\u4e8e\u9650\u5b9a\u4f60\u5728\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u80fd\u505a\u4ec0\u4e48\u3001\u4e0d\u80fd\u505a\u4ec0\u4e48\u3002\u7528\u6237\u5e10\u53f7\u5f80\u5f80\u4e0e\u89d2\u8272\u76f8\u5173\u8054\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2a\u7528\u6237\u5728\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u80fd\u505a\u4ec0\u4e48\u53d6\u51b3\u4e8e\u4e0e\u4e4b\u5173\u8054\u7684\u5404\u4e2a\u89d2\u8272\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u7528\u6237\u4ee5\u5173\u8054\u4e86\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u89d2\u8272\u7684\u5e10\u53f7\u767b\u5f55\u7cfb\u7edf\uff0c\u90a3\u8fd9\u4e2a\u7528\u6237\u5c31\u53ef\u4ee5\u505a\u9879\u76ee\u7ba1\u7406\u5458\u80fd\u505a\u7684\u6240\u6709\u4e8b\u60c5\u2015\u2015\u5982\u5217\u51fa\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u3001\u7ba1\u7406\u9879\u76ee\u7ec4\u6210\u5458\u3001\u4ea7\u751f\u9879\u76ee\u62a5\u8868\u7b49\u3002 \u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u89d2\u8272\u66f4\u591a\u7684\u662f\u4e00\u79cd\u884c\u4e3a\u7684\u6982\u5ff5\uff1a\u5b83\u8868\u793a\u7528\u6237\u80fd\u5728\u7cfb\u7edf\u4e2d\u8fdb\u884c\u7684\u64cd\u4f5c\u3002 \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff08Role-Based Access Control\uff09 \u00b6 \u65e2\u7136\u89d2\u8272\u4ee3\u8868\u4e86\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u8fd9\u4e00\u6982\u5ff5\uff0c\u4e00\u4e2a\u5408\u4e4e\u903b\u8f91\u7684\u505a\u6cd5\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u4f7f\u7528\u89d2\u8272\u6765\u63a7\u5236\u5bf9\u8f6f\u4ef6\u529f\u80fd\u548c\u6570\u636e\u7684\u8bbf\u95ee\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\uff0c\u8fd9\u79cd\u6743\u9650\u63a7\u5236\u65b9\u6cd5\u5c31\u53eb\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(Role-Based Access Control)\uff0c\u6216\u7b80\u79f0\u4e3aRBAC\u3002 \u6709\u4e24\u79cd\u6b63\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u7684RBAC\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\uff1a\u9690\u5f0f(\u6a21\u7cca)\u7684\u65b9\u5f0f\u548c\u663e\u793a(\u660e\u786e)\u7684\u65b9\u5f0f\u3002 \u4eca\u5929\u4f9d\u65e7\u6709\u5927\u91cf\u7684\u8f6f\u4ef6\u5e94\u7528\u662f\u4f7f\u7528\u9690\u5f0f\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u3002\u4f46\u6211\u80af\u5b9a\u7684\u8bf4\uff0c\u663e\u793a\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u66f4\u9002\u5408\u4e8e\u5f53\u524d\u7684\u8f6f\u4ef6\u5e94\u7528\u3002 \u9690\u5f0f\u7684\u8bbf\u95ee\u63a7\u5236 \u00b6 \u524d\u9762\u63d0\u5230\uff0c\u89d2\u8272\u4ee3\u8868\u4e00\u7cfb\u5217\u7684\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u3002\u4f46\u6211\u4eec\u5982\u4f55\u77e5\u9053\u4e00\u4e2a\u89d2\u8272\u5230\u5e95\u5173\u8054\u4e86\u54ea\u4e9b\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u5462\uff1f \u7b54\u6848\u662f\uff1a\u76ee\u524d\u7684\u5927\u591a\u6570\u5e94\u7528\uff0c\u4f60\u5e76\u80fd\u4e0d\u660e\u786e\u7684\u77e5\u9053\u4e00\u4e2a\u89d2\u8272\u5230\u5e95\u5173\u8054\u4e86\u54ea\u4e9b\u53ef\u6267\u884c\u64cd\u4f5c\u3002\u53ef\u80fd\u4f60\u5fc3\u91cc\u662f\u6e05\u695a\u7684\uff08\u4f60\u77e5\u9053\u4e00\u4e2a\u6709\u201d\u7ba1\u7406\u5458\u201d\u89d2\u8272\u7684\u7528\u6237\u53ef\u4ee5\u9501\u5b9a\u7528\u6237\u5e10\u53f7\u3001\u8fdb\u884c\u7cfb\u7edf\u914d\u7f6e\uff1b\u4e00\u4e2a\u5173\u8054\u4e86\u201d\u6d88\u8d39\u8005\u201d\u8fd9\u4e00\u89d2\u8272\u7684\u7528\u6237\u53ef\u5728\u7f51\u7ad9\u4e0a\u8fdb\u884c\u5546\u54c1\u9009\u8d2d\uff09\uff0c\u4f46\u8fd9\u4e9b\u7cfb\u7edf\u5e76\u6ca1\u6709\u660e\u786e\u5b9a\u4e49\u4e00\u4e2a\u89d2\u8272\u5230\u5e95\u5305\u542b\u4e86\u54ea\u4e9b\u53ef\u6267\u884c\u7684\u884c\u4e3a\u3002 \u62ff\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u6765\u8bf4\uff0c\u7cfb\u7edf\u4e2d\u5e76\u6ca1\u6709\u5bf9\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u80fd\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\u8fdb\u884c\u660e\u786e\u5b9a\u4e49\uff0c\u5b83\u4ec5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u540d\u8bcd\u3002\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u5c06\u8fd9\u4e2a\u540d\u8bcd\u5199\u5728\u7a0b\u5e8f\u91cc\u4ee5\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\u3002\u4f8b\u5982\uff0c\u5224\u65ad\u4e00\u4e2a\u7528\u6237\u662f\u5426\u80fd\u67e5\u770b\u9879\u76ee\u62a5\u8868\uff0c\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u7f16\u7801\u5982\u4e0b\uff1a \u4ee3\u7801\u57571.\u9690\u5f0f\u5730\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236: if ( user . hasRole ( \"Project Manager\" ) ) { //show the project report button } else { //don't show the button } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u8868\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u5224\u65ad\u7528\u6237\u662f\u5426\u6709\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u89d2\u8272\u6765\u51b3\u5b9a\u662f\u5426\u663e\u793a\u67e5\u770b\u9879\u76ee\u62a5\u8868\u6309\u94ae\u3002\u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5b83\u5e76\u6ca1\u6709\u660e\u786e\u8bed\u53e5\u6765\u5b9a\u4e49\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u8fd9\u4e00\u89d2\u8272\u5230\u5e95\u5305\u542b\u54ea\u4e9b\u53ef\u6267\u884c\u7684\u884c\u4e3a\uff0c\u5b83\u53ea\u662f\u5047\u8bbe\u4e00\u4e2a\u5173\u8054\u4e86\u9879\u76ee\u7ba1\u7406\u5458\u89d2\u8272\u7684\u7528\u6237\u53ef\u67e5\u770b\u9879\u76ee\u62a5\u8868\uff0c\u800c\u5f00\u53d1\u4eba\u5458\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e00\u5047\u8bbe\u6765\u5199if/else\u8bed\u53e5\u3002 \u8106\u5f31\u7684\u6743\u9650\u7b56\u7565 \u00b6 \u50cf\u4e0a\u9762\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u662f\u975e\u5e38\u8106\u5f31\u7684\u3002\u4e00\u4e2a\u6781\u5c0f\u7684\u6743\u9650\u65b9\u9762\u7684\u9700\u6c42\u7684\u53d8\u52a8\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u91cd\u65b0\u4fee\u6539\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u5982\u67d0\u4e00\u5929\u8fd9\u4e2a\u5f00\u53d1\u56e2\u961f\u88ab\u544a\u77e5\uff1a\u201c\u54e6\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u2019\u90e8\u95e8\u7ba1\u7406\u5458\u2019\u89d2\u8272\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u67e5\u770b\u9879\u76ee\u62a5\u8868\u3002\u8bf7\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u201d \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u627e\u5230\u4e0a\u9762\u7684\u4ee3\u7801\u5757\u5e76\u5c06\u5176\u4fee\u6539\u4e3a\uff1a \u4ee3\u7801\u57572.\u4fee\u6539\u8fc7\u7684\u9690\u5f0f\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236: if ( user . hasRole ( \"Project Manager\" ) || user . hasRole ( \"Department Manager\" ) ) { //show the project report button } else { //don't show the button } \u968f\u540e\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u66f4\u65b0\u4ed6\u7684\u6d4b\u8bd5\u7528\u4f8b\u3001\u91cd\u65b0\u7f16\u8bd1\u7cfb\u7edf\uff0c\u8fd8\u53ef\u80fd\u9700\u8981\u91cd\u8d70\u8f6f\u4ef6\u8d28\u91cf\u63a7\u5236(QA)\u6d41\u7a0b\uff0c\u7136\u540e\u518d\u91cd\u65b0\u90e8\u7f72\u4e0a\u7ebf\u3002\u8fd9\u4e00\u5207\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4e00\u4e2a\u5fae\u5c0f\u7684\u6743\u9650\u65b9\u9762\u7684\u9700\u6c42\u53d8\u52a8\uff01 \u540e\u9762\u5982\u679c\u9700\u6c42\u65b9\u53c8\u56de\u6765\u544a\u8bc9\u4f60\u8bf4\u6211\u4eec\u53c8\u6709\u53e6\u4e00\u4e2a\u89d2\u8272\u53ef\u67e5\u770b\u62a5\u8868\uff0c\u6216\u662f\u524d\u9762\u5173\u4e8e\u201d\u90e8\u95e8\u7ba1\u7406\u5458\u53ef\u67e5\u770b\u62a5\u8868\u201d\u7684\u9700\u6c42\u4e0d\u518d\u9700\u8981\u4e86\uff0c\u5c82\u4e0d\u628a\u4eba\u7d2f\u6b7b\u4e86\u3002 \u5982\u679c\u9700\u6c42\u65b9\u8981\u6c42\u52a8\u6001\u5730\u521b\u5efa\u3001\u5220\u9664\u89d2\u8272\u4ee5\u4fbf\u4ed6\u4eec\u81ea\u5df1\u914d\u7f6e\u89d2\u8272\uff0c\u53c8\u8be5\u5982\u4f55\u5e94\u5bf9\u5462\uff1f \u50cf\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u9690\u5f0f\u7684(\u9759\u6001\u5b57\u7b26\u4e32)\u5f62\u5f0f\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u96be\u4ee5\u6ee1\u8db3\u9700\u6c42\u3002\u7406\u60f3\u7684\u60c5\u51b5\u662f\u5982\u679c\u6743\u9650\u9700\u6c42\u53d8\u52a8\u4e0d\u9700\u8981\u4fee\u6539\u4efb\u4f55\u4ee3\u7801\u3002\u600e\u6837\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f \u663e\u5f0f\u5730\u8bbf\u95ee\u63a7\u5236\uff1a\u66f4\u597d\u7684\u9009\u62e9 \u00b6 \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u770b\u5230\uff0c\u5f53\u6743\u9650\u9700\u6c42\u53d1\u751f\u53d8\u52a8\u65f6\uff0c\u9690\u5f0f\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u4f1a\u7ed9\u7a0b\u5e8f\u5f00\u53d1\u5e26\u6765\u6c89\u91cd\u7684\u8d1f\u62c5\u3002\u5982\u679c\u80fd\u6709\u4e00\u79cd\u65b9\u5f0f\u5728\u6743\u9650\u9700\u6c42\u53d1\u751f\u53d8\u5316\u65f6\u4e0d\u9700\u8981\u53bb\u4fee\u6539\u4ee3\u7801\u5c31\u80fd\u6ee1\u8db3\u9700\u6c42\u90a3\u5c31\u597d\u4e86\u3002\u7406\u89e3\u7684\u60c5\u51b5\u662f\uff0c\u5373\u4f7f\u662f\u6b63\u5728\u8fd0\u884c\u7684\u7cfb\u7edf\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4fee\u6539\u6743\u9650\u7b56\u7565\u5374\u53c8\u4e0d\u5f71\u54cd\u6700\u7ec8\u7528\u6237\u7684\u4f7f\u7528\u3002\u5f53\u4f60\u53d1\u73b0\u67d0\u4e9b\u9519\u8bef\u7684\u6216\u5371\u9669\u7684\u5b89\u5168\u7b56\u7565\u65f6\uff0c\u4f60\u53ef\u4ee5\u8fc5\u901f\u5730\u4fee\u6539\u7b56\u7565\u914d\u7f6e\uff0c\u540c\u65f6\u4f60\u7684\u7cfb\u7edf\u8fd8\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u6784\u4ee3\u7801\u91cd\u65b0\u90e8\u7f72\u7cfb\u7edf\u3002 \u600e\u6837\u624d\u80fd\u8fbe\u5230\u4e0a\u9762\u7684\u7406\u60f3\u6548\u679c\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u663e\u5f0f\u7684(\u660e\u786e\u7684)\u754c\u5b9a\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u80fd\u505a\u7684\u64cd\u4f5c\u6765\u8fdb\u884c\u3002 \u56de\u987e\u4e0a\u9762\u9690\u5f0f\u7684\u6743\u9650\u63a7\u5236\u7684\u4f8b\u5b50\uff0c\u601d\u8003\u4e00\u4e0b\u8fd9\u4e9b\u4ee3\u7801\u6700\u7ec8\u7684\u76ee\u7684\uff0c\u60f3\u4e00\u4e0b\u5b83\u4eec\u6700\u7ec8\u662f\u8981\u505a\u4ec0\u4e48\u6837\u7684\u63a7\u5236\uff1f \u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u8fd9\u4e9b\u4ee3\u7801\u6700\u7ec8\u662f\u5728\u4fdd\u62a4\u8d44\u6e90(\u9879\u76ee\u62a5\u8868)\uff0c\u662f\u8981\u754c\u5b9a\u4e00\u4e2a\u7528\u6237\u80fd\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c(\u67e5\u770b/\u4fee\u6539)\u3002\u5f53\u6211\u4eec\u5c06\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u5206\u89e3\u5230\u8fd9\u79cd\u6700\u539f\u59cb\u7684\u5c42\u6b21\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u79cd\u66f4\u7ec6\u7c92\u5ea6(\u66f4\u5bcc\u6709\u5f39\u6027)\u7684\u65b9\u5f0f\u6765\u8868\u8fbe\u6743\u9650\u63a7\u5236\u7b56\u7565\u3002 \u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\u5757\uff0c\u4ee5\u57fa\u4e8e\u8d44\u6e90\u7684\u8bed\u4e49\u6765\u66f4\u6709\u6548\u5730\u8fdb\u884c\u6743\u9650\u8bbf\u95ee\u63a7\u5236\uff1a \u4ee3\u7801\u57573.\u663e\u5f0f\u7684\u6743\u9650\u63a7\u5236: if ( user . isPermitted ( \"projectReport:view:12345\" )) { //show the project report button } else { //don't show the button } \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u660e\u786e\u5730\u770b\u5230\u6211\u4eec\u662f\u5728\u63a7\u5236\u4ec0\u4e48\u3002\u4e0d\u8981\u592a\u5728\u610f\u5192\u53f7\u5206\u9694\u7684\u8bed\u6cd5\uff0c\u8fd9\u4ec5\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u91cd\u70b9\u662f\u4e0a\u9762\u7684\u8bed\u53e5\u660e\u786e\u5730\u8868\u793a\u4e86\u201c\u5982\u679c\u5f53\u524d\u7528\u6237\u5141\u8bb8\u67e5\u770b\u7f16\u53f7\u4e3a12345\u7684\u9879\u76ee\u62a5\u8868\uff0c\u5219\u663e\u793a\u9879\u76ee\u62a5\u8868\u6309\u94ae\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u660e\u786e\u5730\u8bf4\u660e\u4e86\u4e00\u4e2a\u7528\u6237\u5e10\u53f7\u53ef\u5bf9\u4e00\u4e2a\u7684\u8d44\u6e90\u5b9e\u4f8b\u8fdb\u884c\u7684\u5177\u4f53\u7684\u64cd\u4f5c\u3002 \u4e3a\u4ec0\u4e48\u8bf4\u8fd9\u79cd\u65b9\u5f0f\u66f4\u597d \u00b6 \u4e0a\u9762\u6700\u540e\u7684\u793a\u4f8b\u4ee3\u7801\u5757\u4e0e\u524d\u9762\u7684\u4ee3\u7801\u7684\u4e3b\u8981\u533a\u522b\uff1a\u6700\u540e\u7684\u4ee3\u7801\u5757\u662f\u57fa\u4e8e\u4ec0\u4e48\u662f\u53d7\u4fdd\u62a4\u7684\uff0c \u800c\u4e0d\u662f\u8c01\u53ef\u80fd\u6709\u80fd\u529b\u505a\u4ec0\u4e48\u3002\u770b\u4f3c\u7b80\u5355\u7684\u533a\u522b\uff0c\u4f46\u540e\u8005\u5bf9\u7cfb\u7edf\u5f00\u53d1\u53ca\u90e8\u7f72\u6709\u7740\u6df1\u523b\u7684\u5f71\u54cd\uff1a \u66f4\u5c11\u7684\u4ee3\u7801\u91cd\u6784\uff1a\u6211\u4eec\u662f\u57fa\u4e8e\u7cfb\u7edf\u7684\u529f\u80fd(\u7cfb\u7edf\u7684\u8d44\u6e90\u53ca\u5bf9\u8d44\u6e90\u7684\u64cd\u4f5c)\u6765\u8fdb\u884c\u6743\u9650\u63a7\u5236\uff0c\u800c\u76f8\u5e94\u6765\u8bf4\uff0c\u7cfb\u7edf\u7684\u529f\u80fd\u9700\u6c42\u4e00\u65e6\u786e\u5b9a\u4e0b\u6765\u540e\uff0c\u4e00\u6bb5\u65f6\u95f4\u5185\u5bf9\u5b83\u7684\u6539\u52a8\u76f8\u5e94\u8fd8\u662f\u6bd4\u8f83\u5c11\u7684\u3002\u53ea\u662f\u5f53\u7cfb\u7edf\u7684\u529f\u80fd\u9700\u6c42\u6539\u53d8\u65f6\uff0c\u624d\u4f1a\u6d89\u53ca\u5230\u6743\u9650\u4ee3\u7801\u7684\u6539\u53d8\u3002\u4f8b\u5982\u4e0a\u9762\u63d0\u5230\u7684\u67e5\u770b\u9879\u76ee\u62a5\u8868\u7684\u529f\u80fd\uff0c\u663e\u5f0f\u7684\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u4e0d\u4f1a\u50cf\u4f20\u7edf\u9690\u5f0f\u7684RBAC\u6743\u9650\u63a7\u5236\u90a3\u6837\u56e0\u4e0d\u540c\u7684\u7528\u6237/\u89d2\u8272\u8981\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u9700\u8981\u91cd\u6784\u4ee3\u7801\uff1b\u53ea\u8981\u8fd9\u4e2a\u529f\u80fd\u5b58\u5728\uff0c\u663e\u5f0f\u7684\u65b9\u5f0f\u7684\u6743\u9650\u63a7\u5236\u4ee3\u7801\u662f\u4e0d\u9700\u8981\u6539\u53d8\u7684\u3002 \u66f4\u76f4\u89c2\uff1a\u4fdd\u62a4\u8d44\u6e90\u5bf9\u8c61\u3001\u63a7\u5236\u5bf9\u8d44\u6e90\u5bf9\u8c61\u7684\u64cd\u4f5c(\u5bf9\u8c61\u53ca\u5bf9\u8c61\u7684\u884c\u4e3a)\uff0c\u8fd9\u6837\u7684\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u66f4\u7b26\u5408\u4eba\u4eec\u7684\u601d\u60f3\u4e60\u60ef\u3002\u6b63\u56e0\u4e3a\u7b26\u5408\u8fd9\u79cd\u76f4\u89c2\u7684\u601d\u7ef4\u65b9\u5f0f\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u8f91\u601d\u60f3\u53caREST\u901a\u4fe1\u6a21\u578b\u53d8\u5f97\u975e\u5e38\u6210\u529f\u3002 \u66f4\u6709\u5f39\u6027\uff1a\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u6ca1\u6709\u5199\u6b7b\u54ea\u4e9b\u7528\u6237\u3001\u7ec4\u6216\u89d2\u8272\u53ef\u5bf9\u8d44\u6e90\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u652f\u6301\u4efb\u4f55\u5b89\u5168\u6a21\u578b\u7684\u8bbe\u8ba1\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06\u64cd\u4f5c\uff08\u6743\u9650\uff09\u76f4\u63a5\u5206\u914d\u7ed9\u7528\u6237 \uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u4ee5\u88ab\u5206\u914d\u5230\u4e00\u4e2a\u89d2\u8272\uff0c\u7136\u540e\u518d\u5c06\u89d2\u8272\u4e0e\u7528\u6237\u5173\u8054\uff0c\u6216\u8005\u5c06\u591a\u4e2a\u89d2\u8272\u5173\u8054\u5230\u7ec4(group)\u4e0a\uff0c\u7b49\u7b49\u3002\u4f60\u5b8c\u5168\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7684\u7279\u70b9\u5b9a\u5236\u6743\u9650\u6a21\u578b\u3002 \u5916\u90e8\u5b89\u5168\u7b56\u7565\u7ba1\u7406\uff1a\u7531\u4e8e\u6e90\u4ee3\u7801\u53ea\u53cd\u6620\u8d44\u6e90\u548c\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u7528\u6237\u3001\u7ec4\u548c\u89d2\u8272\uff0c\u8fd9\u6837\u8d44\u6e90/\u884c\u4e3a\u4e0e\u7528\u6237\u3001\u7ec4\u3001\u89d2\u8272\u7684\u5173\u8054\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u7684\u6a21\u5757\u6216\u4e13\u7528\u5de5\u5177\u6216\u7ba1\u7406\u63a7\u5236\u53f0\u6765\u5b8c\u6210\u3002\u8fd9\u610f\u5473\u7740\u5728\u6743\u9650\u9700\u6c42\u53d8\u5316\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u5e76\u4e0d\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u6765\u4fee\u6539\u4ee3\u7801\uff0c\u4e1a\u52a1\u5206\u6790\u5e08\u751a\u81f3\u6700\u7ec8\u7528\u6237\u5c31\u53ef\u4ee5\u901a\u8fc7\u76f8\u5e94\u7684\u7ba1\u7406\u5de5\u5177\u4fee\u6539\u6743\u9650\u7b56\u7565\u914d\u7f6e\u3002 \u53ef\u5728\u8fd0\u884c\u73af\u5883\u505a\u4fee\u6539\uff1a\u56e0\u4e3a\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u63a7\u5236\u4ee3\u7801\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u884c\u4e3a\u7684\u4e3b\u4f53(\u5982\u7ec4\u3001\u89d2\u8272\u3001\u7528\u8272)\uff0c\u4f60\u5e76\u6ca1\u6709\u5c06\u884c\u4e3a\u7684\u4e3b\u4f53\u7684\u5b57\u7b26\u540d\u8bcd\u5199\u5728\u4ee3\u7801\u4e2d\uff0c\u6240\u4ee5\u4f60\u751a\u81f3\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u5019\u901a\u8fc7\u4fee\u6539\u4e3b\u4f53\u80fd\u5bf9\u8d44\u6e90\u8fdb\u884c\u7684\u64cd\u4f5c\u8fd9\u6837\u4e00\u4e9b\u65b9\u5f0f\uff0c\u901a\u8fc7\u914d\u7f6e\u7684\u65b9\u5f0f\u5c31\u53ef\u5e94\u5bf9\u6743\u9650\u65b9\u9762\u9700\u6c42\u7684\u53d8\u52a8\uff0c\u518d\u4e5f\u4e0d\u9700\u8981\u50cf\u9690\u5f0f\u7684RBAC\u65b9\u5f0f\u90a3\u6837\u9700\u8981\u91cd\u6784\u4ee3\u7801\u3002 RBAC\u65b0\u89e3\uff1aResource-Based Access Control \u00b6 \u5bf9\u4e8e\u4e0a\u9762\u5217\u51fa\u7684\u8bf8\u591a\u597d\u5904\uff0c\u6211\u91cd\u70b9\u8981\u8bf4\u662f\u8fd9\u79cd\u663e\u5f0f\u7684\u673a\u5236\u5e26\u7ed9\u6211\u4eec\u7684\u5bcc\u6709\u5f39\u6027\u7684\u6743\u9650\u6a21\u578b\u3002 \u5982\u679c\u4f60\u4ecd\u60f3\u4fdd\u7559\u6216\u6a21\u62df\u4f20\u7edf\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u5c06\u6743\u9650(\u53ef\u6267\u884c\u7684\u64cd\u4f5c)\u76f4\u63a5\u5206\u914d\u7ed9\u67d0\u4e2a\u89d2\u8272\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f9d\u65e7\u662f\u5728\u4f7f\u7528\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f(\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4f60\u9700\u8981\u660e\u786e\u5730\u754c\u5b9a\u89d2\u8272\u4e2d\u7684\u6743\u9650\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u4f7f\u7528\u89d2\u8272\u5b57\u7b26\u4e32\u9690\u5f0f\u5730\u8fdb\u884c\u6743\u9650\u63a7\u5236)\u3002 \u4f46\u5728\u8fd9\u79cd\u65b0\u7684\u6a21\u578b\u4e0b\uff0c\u5df2\u4e0d\u5fc5\u518d\u5c40\u9650\u4e8e\u89d2\u8272\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06\u6743\u9650\u76f4\u63a5\u5206\u914d\u7ed9\u7528\u6237\u3001\u7ec4\u6216\u5176\u5b83\u4f60\u89c9\u5f97\u53ef\u4ee5\u7684\u5bf9\u8c61\u3002 \u56e0\u4e3a\u4e0a\u9762\u663e\u5f0f\u5730\u3001\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u7684\u8bf8\u591a\u597d\u5904\uff0c\u6216\u8bb8\u53ef\u4ee5\u7ed9RBAC\u4e00\u4e2a\u65b0\u7684\u5b9a\u4e49\uff1a\u201cResource-Based Access Control\u201d\u3002\u53ea\u662f\u6211\u7684\u4e00\u4e2a\u60f3\u6cd5\uff1a\uff09 \u73b0\u5b9e\u4e16\u754c\u7684\u4f8b\u5b50\uff1aApache Shiro \u00b6 \u5982\u679c\u4f60\u597d\u5947\u73b0\u5b9e\u4e16\u754c\u6709\u6ca1\u6709\u88ab\u591a\u4e2a\u7cfb\u7edf\u4f7f\u7528\u7684\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u63a7\u5236\u6846\u67b6\uff0c\u4f60\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bApache Shiro\u3002\u5b83\u662f\u4e00\u4e2ajava\u5e73\u53f0\u7684\u73b0\u4ee3\u6743\u9650\u7ba1\u7406\u6846\u67b6\u3002\u901a\u8fc7\u5b83\u7684\u6743\u9650(Permission)\u6982\u5ff5\uff0cShiro\u5f88\u597d\u5730\u652f\u6301\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u3002 \u5f53\u7136\uff0c\u5e76\u4e0d\u9700\u8981\u501f\u7528Shiro\u6765\u7406\u89e3\u672c\u6587\u6240\u8bf4\u7684\u4e00\u4e9b\u6982\u5ff5\uff0c\u4f46Shiro\u5bf9\u7406\u89e3\u672c\u6587\u6240\u8ba8\u8bba\u7684\u6982\u5ff5\u53ca\u793a\u4f8b\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002","title":"Shiro\uff08\u4e00\uff09\uff1a\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u7ba1\u7406(RBAC)"},{"location":"blog/2016/shiro-01/#shirorbac","text":"2016-03-28 14:53:00 \u8f6c\u81ea\uff1a http://www.thinksaas.cn/group/topic/150841/ \uff08\u539f\u6587\u5730\u5740\uff1a http://www.katasoft.com/blog/2011/05/09/new-rbac-resource-based-access-control \uff09 \u672c\u6587\u8ba8\u8bba\u4ee5\u89d2\u8272\u6982\u5ff5\u8fdb\u884c\u7684\u6743\u9650\u7ba1\u7406\u7b56\u7565\u53ca\u4e3b\u8981\u4ee5\u57fa\u4e8e\u89d2\u8272\u7684\u673a\u5236\u8fdb\u884c\u6743\u9650\u7ba1\u7406\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\u3002\u540c\u65f6\u6211\u5c06\u8ba8\u8bba\u4e00\u79cd\u6211\u8ba4\u4e3a\u66f4\u597d\u7684\u6743\u9650\u7ba1\u7406\u65b9\u5f0f\u3002","title":"Shiro\uff08\u4e00\uff09\uff1a\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u7ba1\u7406(RBAC)"},{"location":"blog/2016/shiro-01/#_1","text":"\u5f53\u8bf4\u5230\u7a0b\u5e8f\u7684\u6743\u9650\u7ba1\u7406\u65f6\uff0c\u4eba\u4eec\u5f80\u5f80\u60f3\u5230\u89d2\u8272\u8fd9\u4e00\u6982\u5ff5\u3002\u89d2\u8272\u662f\u4ee3\u8868\u4e00\u7cfb\u5217\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u6216\u8d23\u4efb\u7684\u5b9e\u4f53\uff0c\u7528\u4e8e\u9650\u5b9a\u4f60\u5728\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u80fd\u505a\u4ec0\u4e48\u3001\u4e0d\u80fd\u505a\u4ec0\u4e48\u3002\u7528\u6237\u5e10\u53f7\u5f80\u5f80\u4e0e\u89d2\u8272\u76f8\u5173\u8054\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2a\u7528\u6237\u5728\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u80fd\u505a\u4ec0\u4e48\u53d6\u51b3\u4e8e\u4e0e\u4e4b\u5173\u8054\u7684\u5404\u4e2a\u89d2\u8272\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u7528\u6237\u4ee5\u5173\u8054\u4e86\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u89d2\u8272\u7684\u5e10\u53f7\u767b\u5f55\u7cfb\u7edf\uff0c\u90a3\u8fd9\u4e2a\u7528\u6237\u5c31\u53ef\u4ee5\u505a\u9879\u76ee\u7ba1\u7406\u5458\u80fd\u505a\u7684\u6240\u6709\u4e8b\u60c5\u2015\u2015\u5982\u5217\u51fa\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u3001\u7ba1\u7406\u9879\u76ee\u7ec4\u6210\u5458\u3001\u4ea7\u751f\u9879\u76ee\u62a5\u8868\u7b49\u3002 \u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u89d2\u8272\u66f4\u591a\u7684\u662f\u4e00\u79cd\u884c\u4e3a\u7684\u6982\u5ff5\uff1a\u5b83\u8868\u793a\u7528\u6237\u80fd\u5728\u7cfb\u7edf\u4e2d\u8fdb\u884c\u7684\u64cd\u4f5c\u3002","title":"\u4ec0\u4e48\u662f\u89d2\u8272"},{"location":"blog/2016/shiro-01/#role-based-access-control","text":"\u65e2\u7136\u89d2\u8272\u4ee3\u8868\u4e86\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u8fd9\u4e00\u6982\u5ff5\uff0c\u4e00\u4e2a\u5408\u4e4e\u903b\u8f91\u7684\u505a\u6cd5\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u4f7f\u7528\u89d2\u8272\u6765\u63a7\u5236\u5bf9\u8f6f\u4ef6\u529f\u80fd\u548c\u6570\u636e\u7684\u8bbf\u95ee\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\uff0c\u8fd9\u79cd\u6743\u9650\u63a7\u5236\u65b9\u6cd5\u5c31\u53eb\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(Role-Based Access Control)\uff0c\u6216\u7b80\u79f0\u4e3aRBAC\u3002 \u6709\u4e24\u79cd\u6b63\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u7684RBAC\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\uff1a\u9690\u5f0f(\u6a21\u7cca)\u7684\u65b9\u5f0f\u548c\u663e\u793a(\u660e\u786e)\u7684\u65b9\u5f0f\u3002 \u4eca\u5929\u4f9d\u65e7\u6709\u5927\u91cf\u7684\u8f6f\u4ef6\u5e94\u7528\u662f\u4f7f\u7528\u9690\u5f0f\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u3002\u4f46\u6211\u80af\u5b9a\u7684\u8bf4\uff0c\u663e\u793a\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u66f4\u9002\u5408\u4e8e\u5f53\u524d\u7684\u8f6f\u4ef6\u5e94\u7528\u3002","title":"\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff08Role-Based Access Control\uff09"},{"location":"blog/2016/shiro-01/#_2","text":"\u524d\u9762\u63d0\u5230\uff0c\u89d2\u8272\u4ee3\u8868\u4e00\u7cfb\u5217\u7684\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u3002\u4f46\u6211\u4eec\u5982\u4f55\u77e5\u9053\u4e00\u4e2a\u89d2\u8272\u5230\u5e95\u5173\u8054\u4e86\u54ea\u4e9b\u53ef\u6267\u884c\u7684\u64cd\u4f5c\u5462\uff1f \u7b54\u6848\u662f\uff1a\u76ee\u524d\u7684\u5927\u591a\u6570\u5e94\u7528\uff0c\u4f60\u5e76\u80fd\u4e0d\u660e\u786e\u7684\u77e5\u9053\u4e00\u4e2a\u89d2\u8272\u5230\u5e95\u5173\u8054\u4e86\u54ea\u4e9b\u53ef\u6267\u884c\u64cd\u4f5c\u3002\u53ef\u80fd\u4f60\u5fc3\u91cc\u662f\u6e05\u695a\u7684\uff08\u4f60\u77e5\u9053\u4e00\u4e2a\u6709\u201d\u7ba1\u7406\u5458\u201d\u89d2\u8272\u7684\u7528\u6237\u53ef\u4ee5\u9501\u5b9a\u7528\u6237\u5e10\u53f7\u3001\u8fdb\u884c\u7cfb\u7edf\u914d\u7f6e\uff1b\u4e00\u4e2a\u5173\u8054\u4e86\u201d\u6d88\u8d39\u8005\u201d\u8fd9\u4e00\u89d2\u8272\u7684\u7528\u6237\u53ef\u5728\u7f51\u7ad9\u4e0a\u8fdb\u884c\u5546\u54c1\u9009\u8d2d\uff09\uff0c\u4f46\u8fd9\u4e9b\u7cfb\u7edf\u5e76\u6ca1\u6709\u660e\u786e\u5b9a\u4e49\u4e00\u4e2a\u89d2\u8272\u5230\u5e95\u5305\u542b\u4e86\u54ea\u4e9b\u53ef\u6267\u884c\u7684\u884c\u4e3a\u3002 \u62ff\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u6765\u8bf4\uff0c\u7cfb\u7edf\u4e2d\u5e76\u6ca1\u6709\u5bf9\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u80fd\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\u8fdb\u884c\u660e\u786e\u5b9a\u4e49\uff0c\u5b83\u4ec5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u540d\u8bcd\u3002\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u5c06\u8fd9\u4e2a\u540d\u8bcd\u5199\u5728\u7a0b\u5e8f\u91cc\u4ee5\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\u3002\u4f8b\u5982\uff0c\u5224\u65ad\u4e00\u4e2a\u7528\u6237\u662f\u5426\u80fd\u67e5\u770b\u9879\u76ee\u62a5\u8868\uff0c\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u7f16\u7801\u5982\u4e0b\uff1a \u4ee3\u7801\u57571.\u9690\u5f0f\u5730\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236: if ( user . hasRole ( \"Project Manager\" ) ) { //show the project report button } else { //don't show the button } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u8868\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u5224\u65ad\u7528\u6237\u662f\u5426\u6709\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u89d2\u8272\u6765\u51b3\u5b9a\u662f\u5426\u663e\u793a\u67e5\u770b\u9879\u76ee\u62a5\u8868\u6309\u94ae\u3002\u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5b83\u5e76\u6ca1\u6709\u660e\u786e\u8bed\u53e5\u6765\u5b9a\u4e49\u201d\u9879\u76ee\u7ba1\u7406\u5458\u201d\u8fd9\u4e00\u89d2\u8272\u5230\u5e95\u5305\u542b\u54ea\u4e9b\u53ef\u6267\u884c\u7684\u884c\u4e3a\uff0c\u5b83\u53ea\u662f\u5047\u8bbe\u4e00\u4e2a\u5173\u8054\u4e86\u9879\u76ee\u7ba1\u7406\u5458\u89d2\u8272\u7684\u7528\u6237\u53ef\u67e5\u770b\u9879\u76ee\u62a5\u8868\uff0c\u800c\u5f00\u53d1\u4eba\u5458\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e00\u5047\u8bbe\u6765\u5199if/else\u8bed\u53e5\u3002","title":"\u9690\u5f0f\u7684\u8bbf\u95ee\u63a7\u5236"},{"location":"blog/2016/shiro-01/#_3","text":"\u50cf\u4e0a\u9762\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u662f\u975e\u5e38\u8106\u5f31\u7684\u3002\u4e00\u4e2a\u6781\u5c0f\u7684\u6743\u9650\u65b9\u9762\u7684\u9700\u6c42\u7684\u53d8\u52a8\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u91cd\u65b0\u4fee\u6539\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u5982\u67d0\u4e00\u5929\u8fd9\u4e2a\u5f00\u53d1\u56e2\u961f\u88ab\u544a\u77e5\uff1a\u201c\u54e6\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u2019\u90e8\u95e8\u7ba1\u7406\u5458\u2019\u89d2\u8272\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u67e5\u770b\u9879\u76ee\u62a5\u8868\u3002\u8bf7\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u201d \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u627e\u5230\u4e0a\u9762\u7684\u4ee3\u7801\u5757\u5e76\u5c06\u5176\u4fee\u6539\u4e3a\uff1a \u4ee3\u7801\u57572.\u4fee\u6539\u8fc7\u7684\u9690\u5f0f\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236: if ( user . hasRole ( \"Project Manager\" ) || user . hasRole ( \"Department Manager\" ) ) { //show the project report button } else { //don't show the button } \u968f\u540e\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u66f4\u65b0\u4ed6\u7684\u6d4b\u8bd5\u7528\u4f8b\u3001\u91cd\u65b0\u7f16\u8bd1\u7cfb\u7edf\uff0c\u8fd8\u53ef\u80fd\u9700\u8981\u91cd\u8d70\u8f6f\u4ef6\u8d28\u91cf\u63a7\u5236(QA)\u6d41\u7a0b\uff0c\u7136\u540e\u518d\u91cd\u65b0\u90e8\u7f72\u4e0a\u7ebf\u3002\u8fd9\u4e00\u5207\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4e00\u4e2a\u5fae\u5c0f\u7684\u6743\u9650\u65b9\u9762\u7684\u9700\u6c42\u53d8\u52a8\uff01 \u540e\u9762\u5982\u679c\u9700\u6c42\u65b9\u53c8\u56de\u6765\u544a\u8bc9\u4f60\u8bf4\u6211\u4eec\u53c8\u6709\u53e6\u4e00\u4e2a\u89d2\u8272\u53ef\u67e5\u770b\u62a5\u8868\uff0c\u6216\u662f\u524d\u9762\u5173\u4e8e\u201d\u90e8\u95e8\u7ba1\u7406\u5458\u53ef\u67e5\u770b\u62a5\u8868\u201d\u7684\u9700\u6c42\u4e0d\u518d\u9700\u8981\u4e86\uff0c\u5c82\u4e0d\u628a\u4eba\u7d2f\u6b7b\u4e86\u3002 \u5982\u679c\u9700\u6c42\u65b9\u8981\u6c42\u52a8\u6001\u5730\u521b\u5efa\u3001\u5220\u9664\u89d2\u8272\u4ee5\u4fbf\u4ed6\u4eec\u81ea\u5df1\u914d\u7f6e\u89d2\u8272\uff0c\u53c8\u8be5\u5982\u4f55\u5e94\u5bf9\u5462\uff1f \u50cf\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u9690\u5f0f\u7684(\u9759\u6001\u5b57\u7b26\u4e32)\u5f62\u5f0f\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u96be\u4ee5\u6ee1\u8db3\u9700\u6c42\u3002\u7406\u60f3\u7684\u60c5\u51b5\u662f\u5982\u679c\u6743\u9650\u9700\u6c42\u53d8\u52a8\u4e0d\u9700\u8981\u4fee\u6539\u4efb\u4f55\u4ee3\u7801\u3002\u600e\u6837\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f","title":"\u8106\u5f31\u7684\u6743\u9650\u7b56\u7565"},{"location":"blog/2016/shiro-01/#_4","text":"\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u770b\u5230\uff0c\u5f53\u6743\u9650\u9700\u6c42\u53d1\u751f\u53d8\u52a8\u65f6\uff0c\u9690\u5f0f\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u4f1a\u7ed9\u7a0b\u5e8f\u5f00\u53d1\u5e26\u6765\u6c89\u91cd\u7684\u8d1f\u62c5\u3002\u5982\u679c\u80fd\u6709\u4e00\u79cd\u65b9\u5f0f\u5728\u6743\u9650\u9700\u6c42\u53d1\u751f\u53d8\u5316\u65f6\u4e0d\u9700\u8981\u53bb\u4fee\u6539\u4ee3\u7801\u5c31\u80fd\u6ee1\u8db3\u9700\u6c42\u90a3\u5c31\u597d\u4e86\u3002\u7406\u89e3\u7684\u60c5\u51b5\u662f\uff0c\u5373\u4f7f\u662f\u6b63\u5728\u8fd0\u884c\u7684\u7cfb\u7edf\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4fee\u6539\u6743\u9650\u7b56\u7565\u5374\u53c8\u4e0d\u5f71\u54cd\u6700\u7ec8\u7528\u6237\u7684\u4f7f\u7528\u3002\u5f53\u4f60\u53d1\u73b0\u67d0\u4e9b\u9519\u8bef\u7684\u6216\u5371\u9669\u7684\u5b89\u5168\u7b56\u7565\u65f6\uff0c\u4f60\u53ef\u4ee5\u8fc5\u901f\u5730\u4fee\u6539\u7b56\u7565\u914d\u7f6e\uff0c\u540c\u65f6\u4f60\u7684\u7cfb\u7edf\u8fd8\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u6784\u4ee3\u7801\u91cd\u65b0\u90e8\u7f72\u7cfb\u7edf\u3002 \u600e\u6837\u624d\u80fd\u8fbe\u5230\u4e0a\u9762\u7684\u7406\u60f3\u6548\u679c\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u663e\u5f0f\u7684(\u660e\u786e\u7684)\u754c\u5b9a\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u80fd\u505a\u7684\u64cd\u4f5c\u6765\u8fdb\u884c\u3002 \u56de\u987e\u4e0a\u9762\u9690\u5f0f\u7684\u6743\u9650\u63a7\u5236\u7684\u4f8b\u5b50\uff0c\u601d\u8003\u4e00\u4e0b\u8fd9\u4e9b\u4ee3\u7801\u6700\u7ec8\u7684\u76ee\u7684\uff0c\u60f3\u4e00\u4e0b\u5b83\u4eec\u6700\u7ec8\u662f\u8981\u505a\u4ec0\u4e48\u6837\u7684\u63a7\u5236\uff1f \u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u8fd9\u4e9b\u4ee3\u7801\u6700\u7ec8\u662f\u5728\u4fdd\u62a4\u8d44\u6e90(\u9879\u76ee\u62a5\u8868)\uff0c\u662f\u8981\u754c\u5b9a\u4e00\u4e2a\u7528\u6237\u80fd\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c(\u67e5\u770b/\u4fee\u6539)\u3002\u5f53\u6211\u4eec\u5c06\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u5206\u89e3\u5230\u8fd9\u79cd\u6700\u539f\u59cb\u7684\u5c42\u6b21\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u79cd\u66f4\u7ec6\u7c92\u5ea6(\u66f4\u5bcc\u6709\u5f39\u6027)\u7684\u65b9\u5f0f\u6765\u8868\u8fbe\u6743\u9650\u63a7\u5236\u7b56\u7565\u3002 \u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\u5757\uff0c\u4ee5\u57fa\u4e8e\u8d44\u6e90\u7684\u8bed\u4e49\u6765\u66f4\u6709\u6548\u5730\u8fdb\u884c\u6743\u9650\u8bbf\u95ee\u63a7\u5236\uff1a \u4ee3\u7801\u57573.\u663e\u5f0f\u7684\u6743\u9650\u63a7\u5236: if ( user . isPermitted ( \"projectReport:view:12345\" )) { //show the project report button } else { //don't show the button } \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u660e\u786e\u5730\u770b\u5230\u6211\u4eec\u662f\u5728\u63a7\u5236\u4ec0\u4e48\u3002\u4e0d\u8981\u592a\u5728\u610f\u5192\u53f7\u5206\u9694\u7684\u8bed\u6cd5\uff0c\u8fd9\u4ec5\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u91cd\u70b9\u662f\u4e0a\u9762\u7684\u8bed\u53e5\u660e\u786e\u5730\u8868\u793a\u4e86\u201c\u5982\u679c\u5f53\u524d\u7528\u6237\u5141\u8bb8\u67e5\u770b\u7f16\u53f7\u4e3a12345\u7684\u9879\u76ee\u62a5\u8868\uff0c\u5219\u663e\u793a\u9879\u76ee\u62a5\u8868\u6309\u94ae\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u660e\u786e\u5730\u8bf4\u660e\u4e86\u4e00\u4e2a\u7528\u6237\u5e10\u53f7\u53ef\u5bf9\u4e00\u4e2a\u7684\u8d44\u6e90\u5b9e\u4f8b\u8fdb\u884c\u7684\u5177\u4f53\u7684\u64cd\u4f5c\u3002","title":"\u663e\u5f0f\u5730\u8bbf\u95ee\u63a7\u5236\uff1a\u66f4\u597d\u7684\u9009\u62e9"},{"location":"blog/2016/shiro-01/#_5","text":"\u4e0a\u9762\u6700\u540e\u7684\u793a\u4f8b\u4ee3\u7801\u5757\u4e0e\u524d\u9762\u7684\u4ee3\u7801\u7684\u4e3b\u8981\u533a\u522b\uff1a\u6700\u540e\u7684\u4ee3\u7801\u5757\u662f\u57fa\u4e8e\u4ec0\u4e48\u662f\u53d7\u4fdd\u62a4\u7684\uff0c \u800c\u4e0d\u662f\u8c01\u53ef\u80fd\u6709\u80fd\u529b\u505a\u4ec0\u4e48\u3002\u770b\u4f3c\u7b80\u5355\u7684\u533a\u522b\uff0c\u4f46\u540e\u8005\u5bf9\u7cfb\u7edf\u5f00\u53d1\u53ca\u90e8\u7f72\u6709\u7740\u6df1\u523b\u7684\u5f71\u54cd\uff1a \u66f4\u5c11\u7684\u4ee3\u7801\u91cd\u6784\uff1a\u6211\u4eec\u662f\u57fa\u4e8e\u7cfb\u7edf\u7684\u529f\u80fd(\u7cfb\u7edf\u7684\u8d44\u6e90\u53ca\u5bf9\u8d44\u6e90\u7684\u64cd\u4f5c)\u6765\u8fdb\u884c\u6743\u9650\u63a7\u5236\uff0c\u800c\u76f8\u5e94\u6765\u8bf4\uff0c\u7cfb\u7edf\u7684\u529f\u80fd\u9700\u6c42\u4e00\u65e6\u786e\u5b9a\u4e0b\u6765\u540e\uff0c\u4e00\u6bb5\u65f6\u95f4\u5185\u5bf9\u5b83\u7684\u6539\u52a8\u76f8\u5e94\u8fd8\u662f\u6bd4\u8f83\u5c11\u7684\u3002\u53ea\u662f\u5f53\u7cfb\u7edf\u7684\u529f\u80fd\u9700\u6c42\u6539\u53d8\u65f6\uff0c\u624d\u4f1a\u6d89\u53ca\u5230\u6743\u9650\u4ee3\u7801\u7684\u6539\u53d8\u3002\u4f8b\u5982\u4e0a\u9762\u63d0\u5230\u7684\u67e5\u770b\u9879\u76ee\u62a5\u8868\u7684\u529f\u80fd\uff0c\u663e\u5f0f\u7684\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u4e0d\u4f1a\u50cf\u4f20\u7edf\u9690\u5f0f\u7684RBAC\u6743\u9650\u63a7\u5236\u90a3\u6837\u56e0\u4e0d\u540c\u7684\u7528\u6237/\u89d2\u8272\u8981\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u9700\u8981\u91cd\u6784\u4ee3\u7801\uff1b\u53ea\u8981\u8fd9\u4e2a\u529f\u80fd\u5b58\u5728\uff0c\u663e\u5f0f\u7684\u65b9\u5f0f\u7684\u6743\u9650\u63a7\u5236\u4ee3\u7801\u662f\u4e0d\u9700\u8981\u6539\u53d8\u7684\u3002 \u66f4\u76f4\u89c2\uff1a\u4fdd\u62a4\u8d44\u6e90\u5bf9\u8c61\u3001\u63a7\u5236\u5bf9\u8d44\u6e90\u5bf9\u8c61\u7684\u64cd\u4f5c(\u5bf9\u8c61\u53ca\u5bf9\u8c61\u7684\u884c\u4e3a)\uff0c\u8fd9\u6837\u7684\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u66f4\u7b26\u5408\u4eba\u4eec\u7684\u601d\u60f3\u4e60\u60ef\u3002\u6b63\u56e0\u4e3a\u7b26\u5408\u8fd9\u79cd\u76f4\u89c2\u7684\u601d\u7ef4\u65b9\u5f0f\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u8f91\u601d\u60f3\u53caREST\u901a\u4fe1\u6a21\u578b\u53d8\u5f97\u975e\u5e38\u6210\u529f\u3002 \u66f4\u6709\u5f39\u6027\uff1a\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u6ca1\u6709\u5199\u6b7b\u54ea\u4e9b\u7528\u6237\u3001\u7ec4\u6216\u89d2\u8272\u53ef\u5bf9\u8d44\u6e90\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u652f\u6301\u4efb\u4f55\u5b89\u5168\u6a21\u578b\u7684\u8bbe\u8ba1\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06\u64cd\u4f5c\uff08\u6743\u9650\uff09\u76f4\u63a5\u5206\u914d\u7ed9\u7528\u6237 \uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u4ee5\u88ab\u5206\u914d\u5230\u4e00\u4e2a\u89d2\u8272\uff0c\u7136\u540e\u518d\u5c06\u89d2\u8272\u4e0e\u7528\u6237\u5173\u8054\uff0c\u6216\u8005\u5c06\u591a\u4e2a\u89d2\u8272\u5173\u8054\u5230\u7ec4(group)\u4e0a\uff0c\u7b49\u7b49\u3002\u4f60\u5b8c\u5168\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7684\u7279\u70b9\u5b9a\u5236\u6743\u9650\u6a21\u578b\u3002 \u5916\u90e8\u5b89\u5168\u7b56\u7565\u7ba1\u7406\uff1a\u7531\u4e8e\u6e90\u4ee3\u7801\u53ea\u53cd\u6620\u8d44\u6e90\u548c\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u7528\u6237\u3001\u7ec4\u548c\u89d2\u8272\uff0c\u8fd9\u6837\u8d44\u6e90/\u884c\u4e3a\u4e0e\u7528\u6237\u3001\u7ec4\u3001\u89d2\u8272\u7684\u5173\u8054\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u7684\u6a21\u5757\u6216\u4e13\u7528\u5de5\u5177\u6216\u7ba1\u7406\u63a7\u5236\u53f0\u6765\u5b8c\u6210\u3002\u8fd9\u610f\u5473\u7740\u5728\u6743\u9650\u9700\u6c42\u53d8\u5316\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u5e76\u4e0d\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u6765\u4fee\u6539\u4ee3\u7801\uff0c\u4e1a\u52a1\u5206\u6790\u5e08\u751a\u81f3\u6700\u7ec8\u7528\u6237\u5c31\u53ef\u4ee5\u901a\u8fc7\u76f8\u5e94\u7684\u7ba1\u7406\u5de5\u5177\u4fee\u6539\u6743\u9650\u7b56\u7565\u914d\u7f6e\u3002 \u53ef\u5728\u8fd0\u884c\u73af\u5883\u505a\u4fee\u6539\uff1a\u56e0\u4e3a\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u63a7\u5236\u4ee3\u7801\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u884c\u4e3a\u7684\u4e3b\u4f53(\u5982\u7ec4\u3001\u89d2\u8272\u3001\u7528\u8272)\uff0c\u4f60\u5e76\u6ca1\u6709\u5c06\u884c\u4e3a\u7684\u4e3b\u4f53\u7684\u5b57\u7b26\u540d\u8bcd\u5199\u5728\u4ee3\u7801\u4e2d\uff0c\u6240\u4ee5\u4f60\u751a\u81f3\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u5019\u901a\u8fc7\u4fee\u6539\u4e3b\u4f53\u80fd\u5bf9\u8d44\u6e90\u8fdb\u884c\u7684\u64cd\u4f5c\u8fd9\u6837\u4e00\u4e9b\u65b9\u5f0f\uff0c\u901a\u8fc7\u914d\u7f6e\u7684\u65b9\u5f0f\u5c31\u53ef\u5e94\u5bf9\u6743\u9650\u65b9\u9762\u9700\u6c42\u7684\u53d8\u52a8\uff0c\u518d\u4e5f\u4e0d\u9700\u8981\u50cf\u9690\u5f0f\u7684RBAC\u65b9\u5f0f\u90a3\u6837\u9700\u8981\u91cd\u6784\u4ee3\u7801\u3002","title":"\u4e3a\u4ec0\u4e48\u8bf4\u8fd9\u79cd\u65b9\u5f0f\u66f4\u597d"},{"location":"blog/2016/shiro-01/#rbacresource-based-access-control","text":"\u5bf9\u4e8e\u4e0a\u9762\u5217\u51fa\u7684\u8bf8\u591a\u597d\u5904\uff0c\u6211\u91cd\u70b9\u8981\u8bf4\u662f\u8fd9\u79cd\u663e\u5f0f\u7684\u673a\u5236\u5e26\u7ed9\u6211\u4eec\u7684\u5bcc\u6709\u5f39\u6027\u7684\u6743\u9650\u6a21\u578b\u3002 \u5982\u679c\u4f60\u4ecd\u60f3\u4fdd\u7559\u6216\u6a21\u62df\u4f20\u7edf\u7684\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u5c06\u6743\u9650(\u53ef\u6267\u884c\u7684\u64cd\u4f5c)\u76f4\u63a5\u5206\u914d\u7ed9\u67d0\u4e2a\u89d2\u8272\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f9d\u65e7\u662f\u5728\u4f7f\u7528\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f(\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4f60\u9700\u8981\u660e\u786e\u5730\u754c\u5b9a\u89d2\u8272\u4e2d\u7684\u6743\u9650\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u4f7f\u7528\u89d2\u8272\u5b57\u7b26\u4e32\u9690\u5f0f\u5730\u8fdb\u884c\u6743\u9650\u63a7\u5236)\u3002 \u4f46\u5728\u8fd9\u79cd\u65b0\u7684\u6a21\u578b\u4e0b\uff0c\u5df2\u4e0d\u5fc5\u518d\u5c40\u9650\u4e8e\u89d2\u8272\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06\u6743\u9650\u76f4\u63a5\u5206\u914d\u7ed9\u7528\u6237\u3001\u7ec4\u6216\u5176\u5b83\u4f60\u89c9\u5f97\u53ef\u4ee5\u7684\u5bf9\u8c61\u3002 \u56e0\u4e3a\u4e0a\u9762\u663e\u5f0f\u5730\u3001\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u7684\u8bf8\u591a\u597d\u5904\uff0c\u6216\u8bb8\u53ef\u4ee5\u7ed9RBAC\u4e00\u4e2a\u65b0\u7684\u5b9a\u4e49\uff1a\u201cResource-Based Access Control\u201d\u3002\u53ea\u662f\u6211\u7684\u4e00\u4e2a\u60f3\u6cd5\uff1a\uff09","title":"RBAC\u65b0\u89e3\uff1aResource-Based Access Control"},{"location":"blog/2016/shiro-01/#apache-shiro","text":"\u5982\u679c\u4f60\u597d\u5947\u73b0\u5b9e\u4e16\u754c\u6709\u6ca1\u6709\u88ab\u591a\u4e2a\u7cfb\u7edf\u4f7f\u7528\u7684\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u63a7\u5236\u6846\u67b6\uff0c\u4f60\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bApache Shiro\u3002\u5b83\u662f\u4e00\u4e2ajava\u5e73\u53f0\u7684\u73b0\u4ee3\u6743\u9650\u7ba1\u7406\u6846\u67b6\u3002\u901a\u8fc7\u5b83\u7684\u6743\u9650(Permission)\u6982\u5ff5\uff0cShiro\u5f88\u597d\u5730\u652f\u6301\u57fa\u4e8e\u8d44\u6e90\u7684\u6743\u9650\u8bbf\u95ee\u63a7\u5236\u3002 \u5f53\u7136\uff0c\u5e76\u4e0d\u9700\u8981\u501f\u7528Shiro\u6765\u7406\u89e3\u672c\u6587\u6240\u8bf4\u7684\u4e00\u4e9b\u6982\u5ff5\uff0c\u4f46Shiro\u5bf9\u7406\u89e3\u672c\u6587\u6240\u8ba8\u8bba\u7684\u6982\u5ff5\u53ca\u793a\u4f8b\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002","title":"\u73b0\u5b9e\u4e16\u754c\u7684\u4f8b\u5b50\uff1aApache Shiro"},{"location":"blog/2016/shiro-02/","tags":["Shiro"],"text":"Shiro\uff08\u4e8c\uff09\uff1a\u8eab\u4efd\u9a8c\u8bc1 \u00b6 2016-04-04 16:59:00","title":"Shiro\uff08\u4e8c\uff09\uff1a\u8eab\u4efd\u9a8c\u8bc1"},{"location":"blog/2016/shiro-02/#shiro","text":"2016-04-04 16:59:00","title":"Shiro\uff08\u4e8c\uff09\uff1a\u8eab\u4efd\u9a8c\u8bc1"},{"location":"blog/2016/shiro-03/","tags":["Shiro"],"text":"Shiro\uff08\u4e09\uff09\uff1a\u6388\u6743 \u00b6 2016-04-04 16:59:00","title":"Shiro\uff08\u4e09\uff09\uff1a\u6388\u6743"},{"location":"blog/2016/shiro-03/#shiro","text":"2016-04-04 16:59:00","title":"Shiro\uff08\u4e09\uff09\uff1a\u6388\u6743"},{"location":"blog/2016/shiro-04/","tags":["Shiro"],"text":"Shiro\uff08\u56db\uff09\uff1a\u62e6\u622a\u5668\u673a\u5236 \u00b6 2016-04-04 17:00:00","title":"Shiro\uff08\u56db\uff09\uff1a\u62e6\u622a\u5668\u673a\u5236"},{"location":"blog/2016/shiro-04/#shiro","text":"2016-04-04 17:00:00","title":"Shiro\uff08\u56db\uff09\uff1a\u62e6\u622a\u5668\u673a\u5236"},{"location":"blog/2016/shiro-05/","tags":["Shiro"],"text":"Shiro\uff08\u4e94\uff09\uff1a\u4f1a\u8bdd\u7ba1\u7406 \u00b6 2016-04-05 22:26:00","title":"Shiro\uff08\u4e94\uff09\uff1a\u4f1a\u8bdd\u7ba1\u7406"},{"location":"blog/2016/shiro-05/#shiro","text":"2016-04-05 22:26:00","title":"Shiro\uff08\u4e94\uff09\uff1a\u4f1a\u8bdd\u7ba1\u7406"},{"location":"blog/2016/shiro-06/","tags":["Shiro"],"text":"Shiro\uff08\u516d\uff09\uff1a\u7f13\u5b58\u673a\u5236 \u00b6 2016-04-05 22:27:00","title":"Shiro\uff08\u516d\uff09\uff1a\u7f13\u5b58\u673a\u5236"},{"location":"blog/2016/shiro-06/#shiro","text":"2016-04-05 22:27:00","title":"Shiro\uff08\u516d\uff09\uff1a\u7f13\u5b58\u673a\u5236"},{"location":"blog/2016/taobao-tech-ten-years/","tags":["Web","Taobao"],"text":"\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74 \u00b6 2016-03-04 23:29:00 \u300a\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74\u300b \u5b50\u67f3 \u00b6 \u524d\u6bb5\u65f6\u95f4\u770b\u5b8c\u6b64\u4e66\uff0c\u542c\u95fb\u4f5c\u8005\u5b50\u67f3\u5df2\u7ecf\u79bb\u5f00\u6dd8\u5b9d\uff0c\u521b\u7acb\u73c0\u51b0\u79d1\u6280\u521b\u4e1a\uff0c\u5730\u5740\u5728\u6bcd\u6821\u676d\u7535\u7684\u8fb9\u4e0a\u7684\u5f17\u96f7\u5fb7\u3002\u8bf4\u6765\u4e5f\u5de7\uff0c14\u5e74\u5728\u5bdd\u5ba4\u9633\u53f0\u773a\u671b\u5f17\u96f7\u5fb7\u542c\u8fc7\u5f80\u7684\u540c\u5b66\u8ba8\u8bba\u963f\u91cc\u4e0a\u5e02\uff0c\u73b0\u5728\u60f3\u60f3\u4e5f\u662f\u611f\u6168\u4e07\u5343\u3002 \u6839\u636e\u6dd8\u5b9d\u7684\u7f13\u5b58\u7b56\u7565\u3002\u5927\u90e8\u5206\u56fe\u7247\u90fd\u5c3d\u91cf\u5728\u7f13\u5b58\u4e2d\u547d\u4e2d\uff0c\u5982\u679c\u7f13\u5b58\u4e2d\u65e0\u6cd5\u547d\u4e2d\uff0c\u5219\u4f1a\u5728\u672c\u5730\u670d\u52a1\u5668\u67e5\u627e\u662f\u5426\u5b58\u6709\u539f\u56fe\uff0c\u5e76\u6839\u636e\u539f\u56fe\u751f\u6210\u7f29\u7565\u56fe\uff0c\u5982\u679c\u90fd\u6ca1\u6709\u547d\u4e2d\uff0c\u5219\u4f1a\u8003\u8651\u53bb\u540e\u53f0TFS\u96c6\u7fa4\u6587\u4ef6\u5b58\u50a8\u7cfb\u7edf\u4e0a\u8c03\u53d6\u3002 \u4e00\u5207\u8981\u4ee5\u7a33\u5b9a\u4e3a\u4e2d\u5fc3 \u201c\u706b\u8f66\u6a21\u578b\u201d \u4e24\u79cd\u4e2d\u95f4\u4ef6\u7cfb\u7edf\uff0c\u4e00\u79cd\u662f\u5b9e\u65f6\u8c03\u7528\u7684\u4e2d\u95f4\u4ef6\uff08\u6dd8\u5b9d\u7684HSF\uff0c\u9ad8\u6027\u80fd\u670d\u52a1\u6846\u67b6\uff09\uff0c\u4e00\u79cd\u662f\u5f02\u6b65\u6d88\u606f\u901a\u77e5\u7684\u4e2d\u95f4\u4ef6\uff08\u6dd8\u5b9d\u7684Notify\uff09\u3002","title":"\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74"},{"location":"blog/2016/taobao-tech-ten-years/#_1","text":"2016-03-04 23:29:00","title":"\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74"},{"location":"blog/2016/taobao-tech-ten-years/#_2","text":"\u524d\u6bb5\u65f6\u95f4\u770b\u5b8c\u6b64\u4e66\uff0c\u542c\u95fb\u4f5c\u8005\u5b50\u67f3\u5df2\u7ecf\u79bb\u5f00\u6dd8\u5b9d\uff0c\u521b\u7acb\u73c0\u51b0\u79d1\u6280\u521b\u4e1a\uff0c\u5730\u5740\u5728\u6bcd\u6821\u676d\u7535\u7684\u8fb9\u4e0a\u7684\u5f17\u96f7\u5fb7\u3002\u8bf4\u6765\u4e5f\u5de7\uff0c14\u5e74\u5728\u5bdd\u5ba4\u9633\u53f0\u773a\u671b\u5f17\u96f7\u5fb7\u542c\u8fc7\u5f80\u7684\u540c\u5b66\u8ba8\u8bba\u963f\u91cc\u4e0a\u5e02\uff0c\u73b0\u5728\u60f3\u60f3\u4e5f\u662f\u611f\u6168\u4e07\u5343\u3002 \u6839\u636e\u6dd8\u5b9d\u7684\u7f13\u5b58\u7b56\u7565\u3002\u5927\u90e8\u5206\u56fe\u7247\u90fd\u5c3d\u91cf\u5728\u7f13\u5b58\u4e2d\u547d\u4e2d\uff0c\u5982\u679c\u7f13\u5b58\u4e2d\u65e0\u6cd5\u547d\u4e2d\uff0c\u5219\u4f1a\u5728\u672c\u5730\u670d\u52a1\u5668\u67e5\u627e\u662f\u5426\u5b58\u6709\u539f\u56fe\uff0c\u5e76\u6839\u636e\u539f\u56fe\u751f\u6210\u7f29\u7565\u56fe\uff0c\u5982\u679c\u90fd\u6ca1\u6709\u547d\u4e2d\uff0c\u5219\u4f1a\u8003\u8651\u53bb\u540e\u53f0TFS\u96c6\u7fa4\u6587\u4ef6\u5b58\u50a8\u7cfb\u7edf\u4e0a\u8c03\u53d6\u3002 \u4e00\u5207\u8981\u4ee5\u7a33\u5b9a\u4e3a\u4e2d\u5fc3 \u201c\u706b\u8f66\u6a21\u578b\u201d \u4e24\u79cd\u4e2d\u95f4\u4ef6\u7cfb\u7edf\uff0c\u4e00\u79cd\u662f\u5b9e\u65f6\u8c03\u7528\u7684\u4e2d\u95f4\u4ef6\uff08\u6dd8\u5b9d\u7684HSF\uff0c\u9ad8\u6027\u80fd\u670d\u52a1\u6846\u67b6\uff09\uff0c\u4e00\u79cd\u662f\u5f02\u6b65\u6d88\u606f\u901a\u77e5\u7684\u4e2d\u95f4\u4ef6\uff08\u6dd8\u5b9d\u7684Notify\uff09\u3002","title":"\u300a\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74\u300b \u5b50\u67f3"},{"location":"blog/2016/thinkpad-t530-linux-mint/","tags":["ThinkPad","Linux"],"text":"ThinkPad T530 Linux Mint Start \u00b6 2016-04-24 17:00:00 \u65e9\u5c31\u6709\u8fd9\u4e2a\u60f3\u6cd5\u5728\u6211\u7684Thinkpad\u4e0a\u8fd0\u884cLinux Mint\u4e86\uff0c\u4ece\u6b64\u5f00\u53d1\u4e5f\u5168\u9762\u8131\u79bbWindows\u4e86\u3002\u8fd8\u6709\u4e00\u70b9\u7684\u5c31\u662f\u65b0\u7684Macbook Pro\u8c8c\u4f3c\u662f\u5927\u66f4\u65b0\uff0c\u8fd8\u8981\u7b49\u51e0\u4e2a\u6708\u3002\u6240\u4ee5\u5c31\u5728\u4eac\u4e1c\u4e70\u4e86mSata\u63a5\u53e3\u7684\u56fa\u6001\u786c\u76d8\uff0c\u5f00\u5de5\u3002 1.\u52a0\u88c5\u56fa\u6001\u786c\u76d8 \u62c6\u673a \u65cb\u5f00\u80cc\u540e\u5e26\u6709\u952e\u76d8\u56fe\u6807\u7684\u87ba\u4e1d\uff0c\u5c31\u53ef\u4ee5\u64ac\u5f00\u524d\u9762\u7684\u952e\u76d8\u4e86\u3002 \u5b89\u88c5 \u5728\u4e2d\u95f4\u504f\u53f3\u7684\u4e0a\u65b9\u6709\u9ed1\u8272\u786c\u7eb8\u677f\u76d6\u4f4f\u7684\u5c31\u662f\u63a5\u53e3\u4f4d\u7f6e\uff0c\u5b89\u88c5\u65b9\u6cd5\u66f4\u52a0\u5185\u5b58\u4e00\u6837\u3002 \u5f00\u673a \u5f00\u673a\u8fdbBOIS\u6216\u6211\u7684\u7535\u8111->\u78c1\u76d8\u7ba1\u7406\u53ef\u4ee5\u770b\u5230\u65b0\u52a0\u7684\u786c\u76d8\u3002 \u521d\u59cb\u5316 \u56e0\u4e3a\u6211\u7684\u786c\u76d8\u9700\u8981\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u67e5\u770b\u78c1\u76d8\u7ba1\u7406\u7684\u65f6\u5019\u4f1a\u63d0\u793a\uff0c\u9009\u62e9\u9ed8\u8ba4\u5c31\u60f3\u3002 2.\u5b89\u88c5Linux Mint \u4e0b\u8f7d \u5b98\u7f51\u9009\u62e9\u4e2d\u56fd\u7684\u6e90\u4e0b\u8f7d \u523b\u5f55 \u7528\u523b\u5f55\u5de5\u5177\u523b\u5f55ISO\uff0c\u5927\u767d\u83dc\u3001\u8001\u6bdb\u6843\u7b49U\u76d8\u542f\u52a8\u5de5\u5177\u6709\u8fd9\u4e2a\u529f\u80fd\u3002 \u5b89\u88c5 BOIS\u9009\u62e9U\u76d8\u4e3a\u7b2c\u4e00\u542f\u52a8\u987a\u5e8f\u3002\u5f00\u542f\u540e\u8054\u7f51\uff0c\u6211\u9009\u62e9\u81ea\u5b9a\u4e49\u5206\u533a\uff0c\u4e09\u5206\u533a\u6a21\u5f0f\u3002 \u4ea4\u6362\u7a7a\u95f4 \u903b\u8f91\u5206\u533a \u5927\u5c0f\u8bbe\u4e3a\u5185\u5b58\u5927\u5c0f\uff08\u6211\u7684\u5185\u5b58\u591f\u5927\uff0c\u5c0f\u5185\u5b58\u53ef\u4ee5\u8bbe\u4e3a\u5176\u7684\u4e24\u500d\uff09 / \u4e3b\u5206\u533a \u5927\u5c0f80G\u5de6\u53f3 /home \u903b\u8f91\u5206\u533a \u5927\u5c0f30G\u5de6\u53f3 \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210... 3.\u542f\u52a8Linux Mint \u542f\u52a8\u540e\u6211\u53d1\u73b0\u6211\u8fde\u5c4f\u5e55\u4e4b\u540e\u753b\u9762\u5f88\u5361\uff0c\u6362\u4e86\u663e\u5361\u9a71\u52a8\u540e\uff0c\u5b8c\u7f8e\u3002\u4e4b\u540e\u5c31\u53ef\u4ee5\u5b89\u88c5\u9700\u8981\u7684\u8f6f\u4ef6\u4e86:-)","title":"ThinkPad T530 Linux Mint Start"},{"location":"blog/2016/thinkpad-t530-linux-mint/#thinkpad-t530-linux-mint-start","text":"2016-04-24 17:00:00 \u65e9\u5c31\u6709\u8fd9\u4e2a\u60f3\u6cd5\u5728\u6211\u7684Thinkpad\u4e0a\u8fd0\u884cLinux Mint\u4e86\uff0c\u4ece\u6b64\u5f00\u53d1\u4e5f\u5168\u9762\u8131\u79bbWindows\u4e86\u3002\u8fd8\u6709\u4e00\u70b9\u7684\u5c31\u662f\u65b0\u7684Macbook Pro\u8c8c\u4f3c\u662f\u5927\u66f4\u65b0\uff0c\u8fd8\u8981\u7b49\u51e0\u4e2a\u6708\u3002\u6240\u4ee5\u5c31\u5728\u4eac\u4e1c\u4e70\u4e86mSata\u63a5\u53e3\u7684\u56fa\u6001\u786c\u76d8\uff0c\u5f00\u5de5\u3002 1.\u52a0\u88c5\u56fa\u6001\u786c\u76d8 \u62c6\u673a \u65cb\u5f00\u80cc\u540e\u5e26\u6709\u952e\u76d8\u56fe\u6807\u7684\u87ba\u4e1d\uff0c\u5c31\u53ef\u4ee5\u64ac\u5f00\u524d\u9762\u7684\u952e\u76d8\u4e86\u3002 \u5b89\u88c5 \u5728\u4e2d\u95f4\u504f\u53f3\u7684\u4e0a\u65b9\u6709\u9ed1\u8272\u786c\u7eb8\u677f\u76d6\u4f4f\u7684\u5c31\u662f\u63a5\u53e3\u4f4d\u7f6e\uff0c\u5b89\u88c5\u65b9\u6cd5\u66f4\u52a0\u5185\u5b58\u4e00\u6837\u3002 \u5f00\u673a \u5f00\u673a\u8fdbBOIS\u6216\u6211\u7684\u7535\u8111->\u78c1\u76d8\u7ba1\u7406\u53ef\u4ee5\u770b\u5230\u65b0\u52a0\u7684\u786c\u76d8\u3002 \u521d\u59cb\u5316 \u56e0\u4e3a\u6211\u7684\u786c\u76d8\u9700\u8981\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u67e5\u770b\u78c1\u76d8\u7ba1\u7406\u7684\u65f6\u5019\u4f1a\u63d0\u793a\uff0c\u9009\u62e9\u9ed8\u8ba4\u5c31\u60f3\u3002 2.\u5b89\u88c5Linux Mint \u4e0b\u8f7d \u5b98\u7f51\u9009\u62e9\u4e2d\u56fd\u7684\u6e90\u4e0b\u8f7d \u523b\u5f55 \u7528\u523b\u5f55\u5de5\u5177\u523b\u5f55ISO\uff0c\u5927\u767d\u83dc\u3001\u8001\u6bdb\u6843\u7b49U\u76d8\u542f\u52a8\u5de5\u5177\u6709\u8fd9\u4e2a\u529f\u80fd\u3002 \u5b89\u88c5 BOIS\u9009\u62e9U\u76d8\u4e3a\u7b2c\u4e00\u542f\u52a8\u987a\u5e8f\u3002\u5f00\u542f\u540e\u8054\u7f51\uff0c\u6211\u9009\u62e9\u81ea\u5b9a\u4e49\u5206\u533a\uff0c\u4e09\u5206\u533a\u6a21\u5f0f\u3002 \u4ea4\u6362\u7a7a\u95f4 \u903b\u8f91\u5206\u533a \u5927\u5c0f\u8bbe\u4e3a\u5185\u5b58\u5927\u5c0f\uff08\u6211\u7684\u5185\u5b58\u591f\u5927\uff0c\u5c0f\u5185\u5b58\u53ef\u4ee5\u8bbe\u4e3a\u5176\u7684\u4e24\u500d\uff09 / \u4e3b\u5206\u533a \u5927\u5c0f80G\u5de6\u53f3 /home \u903b\u8f91\u5206\u533a \u5927\u5c0f30G\u5de6\u53f3 \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210... 3.\u542f\u52a8Linux Mint \u542f\u52a8\u540e\u6211\u53d1\u73b0\u6211\u8fde\u5c4f\u5e55\u4e4b\u540e\u753b\u9762\u5f88\u5361\uff0c\u6362\u4e86\u663e\u5361\u9a71\u52a8\u540e\uff0c\u5b8c\u7f8e\u3002\u4e4b\u540e\u5c31\u53ef\u4ee5\u5b89\u88c5\u9700\u8981\u7684\u8f6f\u4ef6\u4e86:-)","title":"ThinkPad T530 Linux Mint Start"},{"location":"blog/2016/tomcat-01/","tags":["Tomcat"],"text":"Tomcat\uff08\u4e00\uff09-\u91cd\u5b9a\u5411Web\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55 \u00b6 2016-07-02 20:46:00 \u8bf4\u660e \uff1a \u4f7f\u7528Tomcat\u4e8c\u8fdb\u5236\u53d1\u884c\u7248\uff0c\u7248\u672c6.0.45\uff0c\u4e14\u5df2\u5b89\u88c5 \u5b89\u88c5\u76ee\u5f55\u4e3a /usr/server/apache-tomcat-6.0.45 ($CATALINA_HOME) \u4ee5tomcat\u7528\u6237\u542f\u52a8\uff0ctomcat\u767b\u9646shell\u8bbe\u4e3a/sbin/nologin \u7cfb\u7edf\u73af\u5883Linux Mint 16 \u5728\u5b89\u88c5\u4e00\u4efdTomcat\u53d1\u884c\u7248\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4e0d\u540c\u914d\u7f6e\u7684Tomcat\u5b9e\u4f8b\uff1f\u4e00\u822c\u5728\u4f7f\u7528tomcat\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u4ececonf\u53cawebapps\u76ee\u5f55\u4e2d\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u5199\u5165logs\u3001temp\u3001work\u76ee\u5f55\uff0c\u5f53\u7136\uff0c\u4e00\u4e9bjar\u6587\u4ef6\u548cclass\u6587\u4ef6\u9700\u8981\u4ece\u670d\u52a1\u5668\u516c\u5171\u76ee\u5f55\u6811\u4e2d\u4e88\u4ee5\u52a0\u8f7d\u3002\u4e3a\u4e86\u8ba9\u591a\u4e2a\u5b9e\u4f8b\u90fd\u80fd\u8fd0\u884c\uff0c\u6bcf\u4e2atomcat\u5b9e\u4f8b\u5fc5\u987b\u90fd\u6709\u81ea\u5df1\u7684\u76ee\u5f55\u96c6\uff0c\u4e14\u4ed6\u4eec\u4e0d\u80fd\u5171\u4eab\u4e24\u4e2a\u4e0d\u540c\u7684\u5df2\u914d\u7f6e\u7684Tomcat JVM\u5b9e\u4f8b\u3002\u505a\u6cd5\u5c31\u662f\u5c06 CATALINA_BASE \u7684\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u6210\u4e0e\u65b0\u5b58\u50a8JVM\u5b9e\u4f8b\u6587\u4ef6\uff08\u81ea\u5df1\u751f\u6210\u7684\u7f51\u7ad9\u6587\u4ef6\u76ee\u5f55\u96c6\uff09\u76f8\u540c\u7684\u8def\u5f84\uff0c\u8fd9\u6837\u542f\u52a8\u65f6\u5c31\u4f1a\u4f7f\u7528 CATALINA_BASE \u4e2d\u5b9a\u4e49\u7684\u6587\u4ef6\u8fd0\u884c\u3002\u5982\u6b64\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u505a\u5230\u4e86\u7f51\u7ad9\u6587\u4ef6\u548cTomcat\u53d1\u884c\u7248\u6587\u4ef6\u5206\u5f00\uff0c\u5373\u91cd\u5b9a\u5411\u4e86Web\u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u5f55\u3002 1. Tomcat\u76ee\u5f55\u7ed3\u6784 Tomcat\u6839\u76ee\u5f55\u5728\u53eb $CATALINA_HOME , \u91cc\u9762\u67097\u4e2a\u76ee\u5f55 $CATALINA_HOME/bin : \u5b58\u653e\u5404\u79cd\u5e73\u53f0\u4e0b\u542f\u52a8\u548c\u5173\u95edtomcat\u7684\u811a\u672c\u6587\u4ef6 $CATALINA_HOME/lib : \u5728lib\u76ee\u5f55\u4e0b\u7684lib\u76ee\u5f55,\u5b58\u653etomcat\u670d\u52a1\u5668\u548c\u6240\u6709web\u5e94\u7528\u90fd\u80fd\u8bbf\u95ee\u7684jar $CATALINA_HOME/work : tomcat\u628a\u5404\u79cd\u7531jsp\u751f\u6210\u7684servlet\u6587\u4ef6\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b $CATALINA_HOME/temp : \u4e34\u65f6\u6d3b\u9875\u5939\uff0ctomcat\u8fd0\u884c\u65f6\u5019\u5b58\u653e\u4e34\u65f6\u6587\u4ef6\u7528\u7684 $CATALINA_HOME/logs : \u5b58\u653etomcat\u7684\u65e5\u5fd7\u6587\u4ef6 $CATALINA_HOME/conf : tomcat\u7684\u5404\u79cd\u914d\u7f6e\u6587\u4ef6,\u6700\u91cd\u8981\u7684\u662fserver.xml $CATALINA_HOME/webapps : tomcat\u7684\u4e3b\u8981web\u53d1\u5e03\u76ee\u5f55\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u628aWeb\u5e94\u7528\u6587\u4ef6\u653e\u4e8e\u6b64\u76ee\u5f55 2. \u91cd\u5b9a\u5411 \u521b\u5efa\u653e\u7f6e\u5b9e\u4f8b\u6587\u4ef6\u7684\u76ee\u5f55 twen@twen-thinkpad $ cd /opt twen@twen-thinkpad /opt $ sudo mkdir tomcat-instance twen@twen-thinkpad /opt $ cd tomcat-instance \u4e3a\u65b0\u5b9e\u4f8b\u521b\u5efa\u76ee\u5f55\uff08\u5c06\u7f51\u7ad9\u5b58\u5165\u5176\u4e2d\u540e\u6700\u597d\u5bf9\u5176\u547d\u540d\uff09 twen@twen-thinkpad /opt/tomcat-instance $ sudo mkdir twen.cn twen@twen-thinkpad /opt/tomcat-instance $ cd twen.cn \u5c06Tomcat\u53d1\u884c\u7248\u7684config\u76ee\u5f55\u590d\u5236\u5230\u65b0\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u521b\u5efaTomcat\u5176\u4ed6\u7684\u5b9e\u4f8b\u5168\u90e8\u76ee\u5f55 twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo cp -a $CATALINA_HOME/conf ./ twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo mkdir logs temp webapps work \u6700\u540e\uff0c\u5c06\u6b64\u5b9e\u4f8b\u7684Web\u5e94\u7528\u7a0b\u5e8f\u5185\u5bb9\u653e\u5165webapps\u5b50\u76ee\u5f55\u4e2d\u3002\u7f16\u8f91conf/server.xml\u6587\u4ef6\u4e3a\u6307\u5b9a\u8be5\u5b9e\u4f8b\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u4fee\u6539\u4e3a\u53ea\u5305\u542b\u8fd0\u884c\u8be5\u5b9e\u4f8b\u6240\u9700\u7684\u53c2\u6570\u3002 \u5c06\u505c\u6b62\u7aef\u53e3\u6362\u6210\u4e0d\u540c\u7684\u7aef\u53e3\u53f7 <Server port= \"8007\" shutdown= \"SHUTDOWN\" > \u8fde\u63a5\u5668\u7684\u7aef\u53e3\u53f7 <Connector port= \"8081\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" /> \u5220\u9664\u5176\u4e2d\u6240\u6709\u7684Context\u5143\u7d20 3. \u542f\u52a8\u5b9e\u4f8b \u4e3a\u4e86\u65b9\u4fbf\u542f\u52a8\uff0c\u5199\u4e00\u4e2a\u7b80\u5355\u542f\u52a8\u811a\u672c twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo mkdir bin twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ cd bin twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo touch start \u7f16\u5199start\u6587\u4ef6\uff0c\u52a0\u5165\u4e0b\u9762\u5185\u5bb9 #!/bin/sh export CATALINA_BASE=/opt/tomcat-instance/twen.cn export CATALINA_HOME=/usr/server/apache-tomcat-6.0.45 $CATALINA_HOME/bin/catalina.sh start \u5c06 $CATALINA_HOME \u5b50\u76ee\u5f55webapps\u4e0b\u7684ROOT\u62f7\u8d1d\u5230\u6b64\u523b\u7684 $CATALINA_BASE \u4e0b twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo cp -a $CATALINA_HOME/webapps/ROOT /opt/tomcat-instance/twen.cn/webapps \u6539\u53d8\u6587\u4ef6\u62e5\u6709\u8005\u4e3atomcat\uff0c \u6539\u53d8\u6a21\u5f0f\u4f7f\u4e4b\u6709\u6267\u884c\u6743\u9650 twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo chown tomcat stop twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo chmod u+x stop \u7528\u6237tomcat\u542f\u52a8 twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo -u tomcat ./start log\u5982\u4e0b Using CATALINA_BASE: /opt/tomcat-instance/twen.cn Using CATALINA_HOME: /usr/server/apache-tomcat-6.0.45 Using CATALINA_TMPDIR: /opt/tomcat-instance/twen.cn/temp Using JRE_HOME: /usr Using CLASSPATH: /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar \u8bbf\u95ee 127.0.0.1:8081 \uff0c\u663e\u793aTOM\u732b\u51fa\u73b0\u4e86\u6210\u529f\u3002 \u73b0\u5728\u540c\u65f6\u542f\u52a8 $CATALINA_HOME \u4e2d\u7684\u5b9e\u4f8b twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo -u tomcat $CATALINA_HOME/bin/catalina.sh start \u540c\u6837log\u5982\u4e0b Using CATALINA_BASE: /usr/server/apache-tomcat-6.0.45 Using CATALINA_HOME: /usr/server/apache-tomcat-6.0.45 Using CATALINA_TMPDIR: /usr/server/apache-tomcat-6.0.45/temp Using JRE_HOME: /usr Using CLASSPATH: /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar \u8bbf\u95ee 127.0.0.1:8080 \uff0c\u663e\u793aTOM\u732b\u51fa\u73b0\u4e86\uff0c\u4e5f\u6210\u529f\u3002 \u518d\u770b\u4e00\u773c\u5b9e\u4f8b twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ ps -ef | grep tomcat \u663e\u793a\u5982\u4e0b tomcat 3190 1 0 17:33 pts/0 00:00:25 /usr/bin/java -Djava.util.logging.config.file=/usr/server/apache-tomcat-6.0.45/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/server/apache-tomcat-6.0.45/endorsed -classpath /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar -Dcatalina.base=/usr/server/apache-tomcat-6.0.45 -Dcatalina.home=/usr/server/apache-tomcat-6.0.45 -Djava.io.tmpdir=/usr/server/apache-tomcat-6.0.45/temp org.apache.catalina.startup.Bootstrap start tomcat 3226 1 0 17:34 pts/0 00:00:24 /usr/bin/java -Djava.util.logging.config.file=/opt/tomcat-instance/twen.cn/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/server/apache-tomcat-6.0.45/endorsed -classpath /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar -Dcatalina.base=/opt/tomcat-instance/twen.cn -Dcatalina.home=/usr/server/apache-tomcat-6.0.45 -Djava.io.tmpdir=/opt/tomcat-instance/twen.cn/temp org.apache.catalina.startup.Bootstrap start \u53ef\u4ee5\u770b\u51fa\u4e0d\u540c","title":"Tomcat\uff08\u4e00\uff09-\u91cd\u5b9a\u5411Web\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55"},{"location":"blog/2016/tomcat-01/#tomcat-web","text":"2016-07-02 20:46:00 \u8bf4\u660e \uff1a \u4f7f\u7528Tomcat\u4e8c\u8fdb\u5236\u53d1\u884c\u7248\uff0c\u7248\u672c6.0.45\uff0c\u4e14\u5df2\u5b89\u88c5 \u5b89\u88c5\u76ee\u5f55\u4e3a /usr/server/apache-tomcat-6.0.45 ($CATALINA_HOME) \u4ee5tomcat\u7528\u6237\u542f\u52a8\uff0ctomcat\u767b\u9646shell\u8bbe\u4e3a/sbin/nologin \u7cfb\u7edf\u73af\u5883Linux Mint 16 \u5728\u5b89\u88c5\u4e00\u4efdTomcat\u53d1\u884c\u7248\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4e0d\u540c\u914d\u7f6e\u7684Tomcat\u5b9e\u4f8b\uff1f\u4e00\u822c\u5728\u4f7f\u7528tomcat\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u4ececonf\u53cawebapps\u76ee\u5f55\u4e2d\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u5199\u5165logs\u3001temp\u3001work\u76ee\u5f55\uff0c\u5f53\u7136\uff0c\u4e00\u4e9bjar\u6587\u4ef6\u548cclass\u6587\u4ef6\u9700\u8981\u4ece\u670d\u52a1\u5668\u516c\u5171\u76ee\u5f55\u6811\u4e2d\u4e88\u4ee5\u52a0\u8f7d\u3002\u4e3a\u4e86\u8ba9\u591a\u4e2a\u5b9e\u4f8b\u90fd\u80fd\u8fd0\u884c\uff0c\u6bcf\u4e2atomcat\u5b9e\u4f8b\u5fc5\u987b\u90fd\u6709\u81ea\u5df1\u7684\u76ee\u5f55\u96c6\uff0c\u4e14\u4ed6\u4eec\u4e0d\u80fd\u5171\u4eab\u4e24\u4e2a\u4e0d\u540c\u7684\u5df2\u914d\u7f6e\u7684Tomcat JVM\u5b9e\u4f8b\u3002\u505a\u6cd5\u5c31\u662f\u5c06 CATALINA_BASE \u7684\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u6210\u4e0e\u65b0\u5b58\u50a8JVM\u5b9e\u4f8b\u6587\u4ef6\uff08\u81ea\u5df1\u751f\u6210\u7684\u7f51\u7ad9\u6587\u4ef6\u76ee\u5f55\u96c6\uff09\u76f8\u540c\u7684\u8def\u5f84\uff0c\u8fd9\u6837\u542f\u52a8\u65f6\u5c31\u4f1a\u4f7f\u7528 CATALINA_BASE \u4e2d\u5b9a\u4e49\u7684\u6587\u4ef6\u8fd0\u884c\u3002\u5982\u6b64\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u505a\u5230\u4e86\u7f51\u7ad9\u6587\u4ef6\u548cTomcat\u53d1\u884c\u7248\u6587\u4ef6\u5206\u5f00\uff0c\u5373\u91cd\u5b9a\u5411\u4e86Web\u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u5f55\u3002 1. Tomcat\u76ee\u5f55\u7ed3\u6784 Tomcat\u6839\u76ee\u5f55\u5728\u53eb $CATALINA_HOME , \u91cc\u9762\u67097\u4e2a\u76ee\u5f55 $CATALINA_HOME/bin : \u5b58\u653e\u5404\u79cd\u5e73\u53f0\u4e0b\u542f\u52a8\u548c\u5173\u95edtomcat\u7684\u811a\u672c\u6587\u4ef6 $CATALINA_HOME/lib : \u5728lib\u76ee\u5f55\u4e0b\u7684lib\u76ee\u5f55,\u5b58\u653etomcat\u670d\u52a1\u5668\u548c\u6240\u6709web\u5e94\u7528\u90fd\u80fd\u8bbf\u95ee\u7684jar $CATALINA_HOME/work : tomcat\u628a\u5404\u79cd\u7531jsp\u751f\u6210\u7684servlet\u6587\u4ef6\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b $CATALINA_HOME/temp : \u4e34\u65f6\u6d3b\u9875\u5939\uff0ctomcat\u8fd0\u884c\u65f6\u5019\u5b58\u653e\u4e34\u65f6\u6587\u4ef6\u7528\u7684 $CATALINA_HOME/logs : \u5b58\u653etomcat\u7684\u65e5\u5fd7\u6587\u4ef6 $CATALINA_HOME/conf : tomcat\u7684\u5404\u79cd\u914d\u7f6e\u6587\u4ef6,\u6700\u91cd\u8981\u7684\u662fserver.xml $CATALINA_HOME/webapps : tomcat\u7684\u4e3b\u8981web\u53d1\u5e03\u76ee\u5f55\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u628aWeb\u5e94\u7528\u6587\u4ef6\u653e\u4e8e\u6b64\u76ee\u5f55 2. \u91cd\u5b9a\u5411 \u521b\u5efa\u653e\u7f6e\u5b9e\u4f8b\u6587\u4ef6\u7684\u76ee\u5f55 twen@twen-thinkpad $ cd /opt twen@twen-thinkpad /opt $ sudo mkdir tomcat-instance twen@twen-thinkpad /opt $ cd tomcat-instance \u4e3a\u65b0\u5b9e\u4f8b\u521b\u5efa\u76ee\u5f55\uff08\u5c06\u7f51\u7ad9\u5b58\u5165\u5176\u4e2d\u540e\u6700\u597d\u5bf9\u5176\u547d\u540d\uff09 twen@twen-thinkpad /opt/tomcat-instance $ sudo mkdir twen.cn twen@twen-thinkpad /opt/tomcat-instance $ cd twen.cn \u5c06Tomcat\u53d1\u884c\u7248\u7684config\u76ee\u5f55\u590d\u5236\u5230\u65b0\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u521b\u5efaTomcat\u5176\u4ed6\u7684\u5b9e\u4f8b\u5168\u90e8\u76ee\u5f55 twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo cp -a $CATALINA_HOME/conf ./ twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo mkdir logs temp webapps work \u6700\u540e\uff0c\u5c06\u6b64\u5b9e\u4f8b\u7684Web\u5e94\u7528\u7a0b\u5e8f\u5185\u5bb9\u653e\u5165webapps\u5b50\u76ee\u5f55\u4e2d\u3002\u7f16\u8f91conf/server.xml\u6587\u4ef6\u4e3a\u6307\u5b9a\u8be5\u5b9e\u4f8b\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u4fee\u6539\u4e3a\u53ea\u5305\u542b\u8fd0\u884c\u8be5\u5b9e\u4f8b\u6240\u9700\u7684\u53c2\u6570\u3002 \u5c06\u505c\u6b62\u7aef\u53e3\u6362\u6210\u4e0d\u540c\u7684\u7aef\u53e3\u53f7 <Server port= \"8007\" shutdown= \"SHUTDOWN\" > \u8fde\u63a5\u5668\u7684\u7aef\u53e3\u53f7 <Connector port= \"8081\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" /> \u5220\u9664\u5176\u4e2d\u6240\u6709\u7684Context\u5143\u7d20 3. \u542f\u52a8\u5b9e\u4f8b \u4e3a\u4e86\u65b9\u4fbf\u542f\u52a8\uff0c\u5199\u4e00\u4e2a\u7b80\u5355\u542f\u52a8\u811a\u672c twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo mkdir bin twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ cd bin twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo touch start \u7f16\u5199start\u6587\u4ef6\uff0c\u52a0\u5165\u4e0b\u9762\u5185\u5bb9 #!/bin/sh export CATALINA_BASE=/opt/tomcat-instance/twen.cn export CATALINA_HOME=/usr/server/apache-tomcat-6.0.45 $CATALINA_HOME/bin/catalina.sh start \u5c06 $CATALINA_HOME \u5b50\u76ee\u5f55webapps\u4e0b\u7684ROOT\u62f7\u8d1d\u5230\u6b64\u523b\u7684 $CATALINA_BASE \u4e0b twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo cp -a $CATALINA_HOME/webapps/ROOT /opt/tomcat-instance/twen.cn/webapps \u6539\u53d8\u6587\u4ef6\u62e5\u6709\u8005\u4e3atomcat\uff0c \u6539\u53d8\u6a21\u5f0f\u4f7f\u4e4b\u6709\u6267\u884c\u6743\u9650 twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo chown tomcat stop twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo chmod u+x stop \u7528\u6237tomcat\u542f\u52a8 twen@twen-thinkpad /opt/tomcat-instance/twen.cn/bin $ sudo -u tomcat ./start log\u5982\u4e0b Using CATALINA_BASE: /opt/tomcat-instance/twen.cn Using CATALINA_HOME: /usr/server/apache-tomcat-6.0.45 Using CATALINA_TMPDIR: /opt/tomcat-instance/twen.cn/temp Using JRE_HOME: /usr Using CLASSPATH: /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar \u8bbf\u95ee 127.0.0.1:8081 \uff0c\u663e\u793aTOM\u732b\u51fa\u73b0\u4e86\u6210\u529f\u3002 \u73b0\u5728\u540c\u65f6\u542f\u52a8 $CATALINA_HOME \u4e2d\u7684\u5b9e\u4f8b twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ sudo -u tomcat $CATALINA_HOME/bin/catalina.sh start \u540c\u6837log\u5982\u4e0b Using CATALINA_BASE: /usr/server/apache-tomcat-6.0.45 Using CATALINA_HOME: /usr/server/apache-tomcat-6.0.45 Using CATALINA_TMPDIR: /usr/server/apache-tomcat-6.0.45/temp Using JRE_HOME: /usr Using CLASSPATH: /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar \u8bbf\u95ee 127.0.0.1:8080 \uff0c\u663e\u793aTOM\u732b\u51fa\u73b0\u4e86\uff0c\u4e5f\u6210\u529f\u3002 \u518d\u770b\u4e00\u773c\u5b9e\u4f8b twen@twen-thinkpad /opt/tomcat-instance/twen.cn $ ps -ef | grep tomcat \u663e\u793a\u5982\u4e0b tomcat 3190 1 0 17:33 pts/0 00:00:25 /usr/bin/java -Djava.util.logging.config.file=/usr/server/apache-tomcat-6.0.45/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/server/apache-tomcat-6.0.45/endorsed -classpath /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar -Dcatalina.base=/usr/server/apache-tomcat-6.0.45 -Dcatalina.home=/usr/server/apache-tomcat-6.0.45 -Djava.io.tmpdir=/usr/server/apache-tomcat-6.0.45/temp org.apache.catalina.startup.Bootstrap start tomcat 3226 1 0 17:34 pts/0 00:00:24 /usr/bin/java -Djava.util.logging.config.file=/opt/tomcat-instance/twen.cn/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/server/apache-tomcat-6.0.45/endorsed -classpath /usr/server/apache-tomcat-6.0.45/bin/bootstrap.jar -Dcatalina.base=/opt/tomcat-instance/twen.cn -Dcatalina.home=/usr/server/apache-tomcat-6.0.45 -Djava.io.tmpdir=/opt/tomcat-instance/twen.cn/temp org.apache.catalina.startup.Bootstrap start \u53ef\u4ee5\u770b\u51fa\u4e0d\u540c","title":"Tomcat\uff08\u4e00\uff09-\u91cd\u5b9a\u5411Web\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55"},{"location":"blog/2016/web-full-stack-engineer/","tags":["Web","Books"],"text":"Web\u5168\u6808\u5de5\u7a0b\u5e08\u7684\u81ea\u6211\u4fee\u517b \u00b6 2016-03-04 23:07:00 \u300aWeb\u5168\u6808\u5de5\u7a0b\u5e08\u7684\u81ea\u6211\u4fee\u517b\u300b \u4f59\u679c \u00b6 \u542c\u8bf4facebook\u53ea\u62db\u5168\u6808\u5de5\u7a0b\u5e08\u3002\u672c\u4e66\u4f5c\u8005\u6765\u81ea\u817e\u8baf\u3002 \u771f\u6b63\u806a\u660e\u7684\u4eba\u4e0d\u4f1a\u663e\u9732\u81ea\u5df1\uff0c\u53cd\u800c\u4ece\u8868\u9762\u4e0a\u770b\u597d\u50cf\u5f88\u7b28\u62d9\u3002 \u8bbe\u8ba1\u56db\u5927\u539f\u5219\uff1a\u5bf9\u9f50\u3001\u5bf9\u6bd4\u3001\u8ddd\u79bb\u3001\u91cd\u590d\u3002 \u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u6700\u65e0\u5948\u7684\u4e24\u4ef6\u4e8b\u662f\u7f13\u5b58\u5931\u6548\u548c\u547d\u540d\u3002 \u4e00\u4e2a\u7a0b\u5e8f\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u5e76\u505a\u597d\u3002\u7a0b\u5e8f\u8981\u80fd\u534f\u4f5c\u3002\u7a0b\u5e8f\u8981\u80fd\u5904\u7406\u6587\u672c\u6d41\u3002\u56e0\u4e3a\u8fd9\u662f\u6700\u901a\u7528\u7684\u63a5\u53e3\u3002 \u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u3002 \u7f16\u5199\u7a0b\u5e8f\u9700\u8981\u5927\u91cf\u7684\u7cbe\u795e\u6295\u5165\uff0c\u9700\u8981\u6574\u5757\u8fde\u7eed\u7684\u601d\u8003\u65f6\u95f4\u3002 \u5168\u6808\u5de5\u7a0b\u5e08 1.\u5173\u6ce8\u5546\u4e1a\u76ee\u6807 2.\u5173\u6ce8\u7528\u6237\u4f53\u9a8c \u8bbe\u8ba1\u7684\u56db\u5927\u57fa\u672c\u7406\u8bba\u662f\uff1a\u4eb2\u5bc6\u6027\u3001\u5bf9\u9f50\u3001\u91cd\u590d\u3001\u5bf9\u6bd4\u3002 \u61d2\u60f0\u7684\u7ec8\u6781\u539f\u56e0\u5c31\u662f\u60f3\u9003\u907f\u8fd9\u4ef6\u4e8b\u3002 \u8010\u5fc3\u662f\u4e00\u79cd\u80fd\u529b\uff0c\u6709\u4e9b\u4eba\u5929\u751f\u7f3a\u4e4f\u8fd9\u79cd\u80fd\u529b\u3002 \u7a0b\u5e8f\u5458\u7684\u6c9f\u901a\u80fd\u529b\u6240\u5e26\u6765\u7684\u4ef7\u503c\u88ab\u5927\u5927\u4f4e\u4f30\u4e86\u3002","title":"Web\u5168\u6808\u5de5\u7a0b\u5e08\u7684\u81ea\u6211\u4fee\u517b"},{"location":"blog/2016/web-full-stack-engineer/#web","text":"2016-03-04 23:07:00","title":"Web\u5168\u6808\u5de5\u7a0b\u5e08\u7684\u81ea\u6211\u4fee\u517b"},{"location":"blog/2016/web-full-stack-engineer/#web_1","text":"\u542c\u8bf4facebook\u53ea\u62db\u5168\u6808\u5de5\u7a0b\u5e08\u3002\u672c\u4e66\u4f5c\u8005\u6765\u81ea\u817e\u8baf\u3002 \u771f\u6b63\u806a\u660e\u7684\u4eba\u4e0d\u4f1a\u663e\u9732\u81ea\u5df1\uff0c\u53cd\u800c\u4ece\u8868\u9762\u4e0a\u770b\u597d\u50cf\u5f88\u7b28\u62d9\u3002 \u8bbe\u8ba1\u56db\u5927\u539f\u5219\uff1a\u5bf9\u9f50\u3001\u5bf9\u6bd4\u3001\u8ddd\u79bb\u3001\u91cd\u590d\u3002 \u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u6700\u65e0\u5948\u7684\u4e24\u4ef6\u4e8b\u662f\u7f13\u5b58\u5931\u6548\u548c\u547d\u540d\u3002 \u4e00\u4e2a\u7a0b\u5e8f\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u5e76\u505a\u597d\u3002\u7a0b\u5e8f\u8981\u80fd\u534f\u4f5c\u3002\u7a0b\u5e8f\u8981\u80fd\u5904\u7406\u6587\u672c\u6d41\u3002\u56e0\u4e3a\u8fd9\u662f\u6700\u901a\u7528\u7684\u63a5\u53e3\u3002 \u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u3002 \u7f16\u5199\u7a0b\u5e8f\u9700\u8981\u5927\u91cf\u7684\u7cbe\u795e\u6295\u5165\uff0c\u9700\u8981\u6574\u5757\u8fde\u7eed\u7684\u601d\u8003\u65f6\u95f4\u3002 \u5168\u6808\u5de5\u7a0b\u5e08 1.\u5173\u6ce8\u5546\u4e1a\u76ee\u6807 2.\u5173\u6ce8\u7528\u6237\u4f53\u9a8c \u8bbe\u8ba1\u7684\u56db\u5927\u57fa\u672c\u7406\u8bba\u662f\uff1a\u4eb2\u5bc6\u6027\u3001\u5bf9\u9f50\u3001\u91cd\u590d\u3001\u5bf9\u6bd4\u3002 \u61d2\u60f0\u7684\u7ec8\u6781\u539f\u56e0\u5c31\u662f\u60f3\u9003\u907f\u8fd9\u4ef6\u4e8b\u3002 \u8010\u5fc3\u662f\u4e00\u79cd\u80fd\u529b\uff0c\u6709\u4e9b\u4eba\u5929\u751f\u7f3a\u4e4f\u8fd9\u79cd\u80fd\u529b\u3002 \u7a0b\u5e8f\u5458\u7684\u6c9f\u901a\u80fd\u529b\u6240\u5e26\u6765\u7684\u4ef7\u503c\u88ab\u5927\u5927\u4f4e\u4f30\u4e86\u3002","title":"\u300aWeb\u5168\u6808\u5de5\u7a0b\u5e08\u7684\u81ea\u6211\u4fee\u517b\u300b \u4f59\u679c"},{"location":"blog/2016/yum-install-mysql/","tags":["yum","mysql"],"text":"yum install mysql \u00b6 2016-02-09 23:48:00","title":"yum install mysql"},{"location":"blog/2016/yum-install-mysql/#yum-install-mysql","text":"2016-02-09 23:48:00","title":"yum install mysql"},{"location":"blog/2018/bean-copier-map-struct/","tags":["BeanCopier","MapStruct"],"text":"BeanCopier\u4e4bMapStruct\uff08\u4e00\uff09 \u00b6 2018-04-12 10:46:11 \u65e0\u610f\u4e2d\u89c1\u540c\u4e8b\u5728\u6bd4\u8f83BeanCopier\u7684\u6548\u7387\uff0cMapStruct\u7684\u4f7f\u7528\u8005\u5f88\u725b\u76ae\u7684\u8bf4\u6211\u7684\u6548\u7387\u662f\u4f60\u7684XX\u500d\uff0c\u4eca\u5929\u8ba4\u8bc6\u4e86\u4e00\u4e0bMapStrut\uff0c\u6beb\u65e0\u7591\u95ee\u53cd\u5c04\u7684\u6548\u7387\u7edd\u5bf9\u8f93\u7ed9setter/getter \u5f15\u5165 \u00b6 <!-- OR use this with Java 8 and beyond: <artifactId>mapstruct-jdk8</artifactId> --> <dependency> <groupId> org.mapstruct </groupId> <artifactId> mapstruct-jdk8 </artifactId> <version> ${org.mapstruct.version} </version> </dependency> <dependency> <groupId> org.mapstruct </groupId> <artifactId> mapstruct-processor </artifactId> <version> ${org.mapstruct.version} </version> <scope> provided </scope> </dependency> maven\u7f16\u8bd1\u66f4\u65b0\u62101.8\u7ed3\u5408 lombok \uff0c\u540c\u65f6\u66f4\u65b0 maven-compiler-plugin <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.6.2 </version> <configuration> <source> ${java.version} </source> <target> ${java.version} </target> <encoding> ${project.encoding} </encoding> <annotationProcessorPaths> <path> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> ${lombok.version} </version> </path> <path> <groupId> org.mapstruct </groupId> <artifactId> mapstruct-processor </artifactId> <version> ${org.mapstruct.version} </version> </path> </annotationProcessorPaths> <compilerArgs> <compilerArg> -Amapstruct.defaultComponentModel=spring </compilerArg> </compilerArgs> </configuration> </plugin> \u52a0 -Amapstruct.defaultComponentModel=spring \u7f16\u8bd1\u914d\u7f6e\u7684\u76ee\u7684\u662f\u6307\u5b9amapstruct\u7f16\u8bd1\u751f\u6210\u5b9e\u73b0\u7c7b\u7684\u65f6\u5019\u652f\u6301spring\u7684\u626b\u63cf \u7f16\u8bd1 \u00b6 \u5ffd\u7565\u5177\u4f53bean\uff0ccopier\u5982\u4e0b @Mapper public interface OrderFundsLiteMapper { WjsOrderFundsLiteToValidBean toWjsOrderFundsLiteToValidBean ( OrderFundsLiteDO orderFundsLiteDO ); } maven\u7f16\u8bd1\uff0c\u5b9e\u73b0\u7c7b\u5982\u4e0b @Generated ( value = \"org.mapstruct.ap.MappingProcessor\" , date = \"2018-04-12T10:58:53+0800\" , comments = \"version: 1.2.0.Final, compiler: javac, environment: Java 1.8.0_111 (Oracle Corporation)\" ) @Component public class OrderFundsLiteMapperImpl implements OrderFundsLiteMapper { @Override public WjsOrderFundsLiteToValidBean toWjsOrderFundsLiteToValidBean ( OrderFundsLiteDO orderFundsLiteDO ) { if ( orderFundsLiteDO == null ) { return null ; } WjsOrderFundsLiteToValidBean wjsOrderFundsLiteToValidBean = new WjsOrderFundsLiteToValidBean (); wjsOrderFundsLiteToValidBean . setOrderFundsId ( orderFundsLiteDO . getOrderFundsId () ); wjsOrderFundsLiteToValidBean . setAgencyCode ( orderFundsLiteDO . getAgencyCode () ); wjsOrderFundsLiteToValidBean . setOrderFundsAmt ( orderFundsLiteDO . getOrderFundsAmt () ); wjsOrderFundsLiteToValidBean . setGmtContractUpdate ( orderFundsLiteDO . getGmtContractUpdate () ); return wjsOrderFundsLiteToValidBean ; } } \u53ef\u89c1MapStruct\u5728\u7f16\u8bd1\u671f\u751f\u6210\u5b9e\u73b0\u7c7b\uff0c\u540c\u65f6\u4f5c\u4e3aspring\u7684 @Component \uff0c\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165\u4f7f\u7528\u3002 \u8fd0\u884c \u00b6 WjsOrderFundsLiteToValidBean(orderFundsId=1, agencyCode=twen, orderFundsAmt=1, gmtContractUpdate=Thu Apr 12 11:05:13 CST 2018) \u603b\u7ed3 \u00b6 MapStruct\u5728\u7f16\u8bd1\u65f6\uff0c\u81ea\u52a8\u751f\u6210\u5177\u4f53\u7684setter/getter\uff0c\u51cf\u5c11\u4e86\u4ee3\u7801\u91cf\uff0c\u540c\u65f6\u907f\u514d\u53cd\u5c04\u5e26\u6765\u7684\u6548\u7387\u727a\u7272\u3002 \u540e \u00b6 \u5177\u4f53\u5b66\u4e60\u6587\u6863 \u53c2\u89c1 MapStruct 1.2.0.Final\u53c2\u8003\u6307\u5357 http://mapstruct.org/documentation/stable/reference/html/","title":"BeanCopier\u4e4bMapStruct\uff08\u4e00\uff09"},{"location":"blog/2018/bean-copier-map-struct/#beancopiermapstruct","text":"2018-04-12 10:46:11 \u65e0\u610f\u4e2d\u89c1\u540c\u4e8b\u5728\u6bd4\u8f83BeanCopier\u7684\u6548\u7387\uff0cMapStruct\u7684\u4f7f\u7528\u8005\u5f88\u725b\u76ae\u7684\u8bf4\u6211\u7684\u6548\u7387\u662f\u4f60\u7684XX\u500d\uff0c\u4eca\u5929\u8ba4\u8bc6\u4e86\u4e00\u4e0bMapStrut\uff0c\u6beb\u65e0\u7591\u95ee\u53cd\u5c04\u7684\u6548\u7387\u7edd\u5bf9\u8f93\u7ed9setter/getter","title":"BeanCopier\u4e4bMapStruct\uff08\u4e00\uff09"},{"location":"blog/2018/bean-copier-map-struct/#_1","text":"<!-- OR use this with Java 8 and beyond: <artifactId>mapstruct-jdk8</artifactId> --> <dependency> <groupId> org.mapstruct </groupId> <artifactId> mapstruct-jdk8 </artifactId> <version> ${org.mapstruct.version} </version> </dependency> <dependency> <groupId> org.mapstruct </groupId> <artifactId> mapstruct-processor </artifactId> <version> ${org.mapstruct.version} </version> <scope> provided </scope> </dependency> maven\u7f16\u8bd1\u66f4\u65b0\u62101.8\u7ed3\u5408 lombok \uff0c\u540c\u65f6\u66f4\u65b0 maven-compiler-plugin <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.6.2 </version> <configuration> <source> ${java.version} </source> <target> ${java.version} </target> <encoding> ${project.encoding} </encoding> <annotationProcessorPaths> <path> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> ${lombok.version} </version> </path> <path> <groupId> org.mapstruct </groupId> <artifactId> mapstruct-processor </artifactId> <version> ${org.mapstruct.version} </version> </path> </annotationProcessorPaths> <compilerArgs> <compilerArg> -Amapstruct.defaultComponentModel=spring </compilerArg> </compilerArgs> </configuration> </plugin> \u52a0 -Amapstruct.defaultComponentModel=spring \u7f16\u8bd1\u914d\u7f6e\u7684\u76ee\u7684\u662f\u6307\u5b9amapstruct\u7f16\u8bd1\u751f\u6210\u5b9e\u73b0\u7c7b\u7684\u65f6\u5019\u652f\u6301spring\u7684\u626b\u63cf","title":"\u5f15\u5165"},{"location":"blog/2018/bean-copier-map-struct/#_2","text":"\u5ffd\u7565\u5177\u4f53bean\uff0ccopier\u5982\u4e0b @Mapper public interface OrderFundsLiteMapper { WjsOrderFundsLiteToValidBean toWjsOrderFundsLiteToValidBean ( OrderFundsLiteDO orderFundsLiteDO ); } maven\u7f16\u8bd1\uff0c\u5b9e\u73b0\u7c7b\u5982\u4e0b @Generated ( value = \"org.mapstruct.ap.MappingProcessor\" , date = \"2018-04-12T10:58:53+0800\" , comments = \"version: 1.2.0.Final, compiler: javac, environment: Java 1.8.0_111 (Oracle Corporation)\" ) @Component public class OrderFundsLiteMapperImpl implements OrderFundsLiteMapper { @Override public WjsOrderFundsLiteToValidBean toWjsOrderFundsLiteToValidBean ( OrderFundsLiteDO orderFundsLiteDO ) { if ( orderFundsLiteDO == null ) { return null ; } WjsOrderFundsLiteToValidBean wjsOrderFundsLiteToValidBean = new WjsOrderFundsLiteToValidBean (); wjsOrderFundsLiteToValidBean . setOrderFundsId ( orderFundsLiteDO . getOrderFundsId () ); wjsOrderFundsLiteToValidBean . setAgencyCode ( orderFundsLiteDO . getAgencyCode () ); wjsOrderFundsLiteToValidBean . setOrderFundsAmt ( orderFundsLiteDO . getOrderFundsAmt () ); wjsOrderFundsLiteToValidBean . setGmtContractUpdate ( orderFundsLiteDO . getGmtContractUpdate () ); return wjsOrderFundsLiteToValidBean ; } } \u53ef\u89c1MapStruct\u5728\u7f16\u8bd1\u671f\u751f\u6210\u5b9e\u73b0\u7c7b\uff0c\u540c\u65f6\u4f5c\u4e3aspring\u7684 @Component \uff0c\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165\u4f7f\u7528\u3002","title":"\u7f16\u8bd1"},{"location":"blog/2018/bean-copier-map-struct/#_3","text":"WjsOrderFundsLiteToValidBean(orderFundsId=1, agencyCode=twen, orderFundsAmt=1, gmtContractUpdate=Thu Apr 12 11:05:13 CST 2018)","title":"\u8fd0\u884c"},{"location":"blog/2018/bean-copier-map-struct/#_4","text":"MapStruct\u5728\u7f16\u8bd1\u65f6\uff0c\u81ea\u52a8\u751f\u6210\u5177\u4f53\u7684setter/getter\uff0c\u51cf\u5c11\u4e86\u4ee3\u7801\u91cf\uff0c\u540c\u65f6\u907f\u514d\u53cd\u5c04\u5e26\u6765\u7684\u6548\u7387\u727a\u7272\u3002","title":"\u603b\u7ed3"},{"location":"blog/2018/bean-copier-map-struct/#_5","text":"\u5177\u4f53\u5b66\u4e60\u6587\u6863 \u53c2\u89c1 MapStruct 1.2.0.Final\u53c2\u8003\u6307\u5357 http://mapstruct.org/documentation/stable/reference/html/","title":"\u540e"},{"location":"blog/2018/global-unique-id-generate/","tags":["Snowflake","Sequence","MySQL","MongoDB","TDDL"],"text":"\u5168\u5c40\u552f\u4e00ID\u751f\u6210 \u00b6 2018-05-08 14:14:27 \u552f\u4e00ID\u751f\u6210 \u00b6 \u5168\u5c40\u552f\u4e00ID \u00b6 \u300a\u9ad8\u5e76\u53d1\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u751f\u6210\u5168\u5c40\u552f\u4e00Id\u6c47\u603b\u300b Twitter \u65b9\u6848\uff08Snowflake \u7b97\u6cd5\uff09\uff1a41\u4f4d\u65f6\u95f4\u6233+10\u4f4d\u673a\u5668\u6807\u8bc6\uff08\u6bd4\u5982IP\uff0c\u670d\u52a1\u5668\u540d\u79f0\u7b49\uff09+12\u4f4d\u5e8f\u5217\u53f7(\u672c\u5730\u8ba1\u6570\u5668) Flicker \u65b9\u6848\uff1aMySQL\u81ea\u589eID + \"REPLACE INTO XXX:SELECT LAST_INSERT_ID();\" UUID\uff1a\u7f3a\u70b9\uff0c\u65e0\u5e8f\uff0c\u5b57\u7b26\u4e32\u8fc7\u957f\uff0c\u5360\u7528\u7a7a\u95f4\uff0c\u5f71\u54cd\u68c0\u7d22\u6027\u80fd\u3002 MongoDB \u65b9\u6848\uff1a\u5229\u7528 ObjectId\u3002\u7f3a\u70b9\uff1a\u4e0d\u80fd\u81ea\u589e\u3002 \u300aTDDL \u5728\u5206\u5e03\u5f0f\u4e0b\u7684SEQUENCE\u539f\u7406\u300b \u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa sequence \u8868\uff0c\u7528\u4e8e\u8bb0\u5f55\uff0c\u5f53\u524d\u5df2\u88ab\u5360\u7528\u7684id\u6700\u5927\u503c\u3002 \u6bcf\u53f0\u5ba2\u6237\u7aef\u4e3b\u673a\u53d6\u4e00\u4e2aid\u533a\u95f4\uff08\u6bd4\u5982 1000~2000\uff09\u7f13\u5b58\u5728\u672c\u5730\uff0c\u5e76\u66f4\u65b0 sequence \u8868\u4e2d\u7684id\u6700\u5927\u503c\u8bb0\u5f55\u3002 \u5ba2\u6237\u7aef\u4e3b\u673a\u4e4b\u95f4\u53d6\u4e0d\u540c\u7684id\u533a\u95f4\uff0c\u7528\u5b8c\u518d\u53d6\uff0c\u4f7f\u7528\u4e50\u89c2\u9501\u673a\u5236\u63a7\u5236\u5e76\u53d1\u3002 \u9644\uff1a * \u4ec0\u4e48\u662fSnowflake\u7b97\u6cd5","title":"\u5168\u5c40\u552f\u4e00ID\u751f\u6210"},{"location":"blog/2018/global-unique-id-generate/#id","text":"2018-05-08 14:14:27","title":"\u5168\u5c40\u552f\u4e00ID\u751f\u6210"},{"location":"blog/2018/global-unique-id-generate/#id_1","text":"","title":"\u552f\u4e00ID\u751f\u6210"},{"location":"blog/2018/global-unique-id-generate/#id_2","text":"\u300a\u9ad8\u5e76\u53d1\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u751f\u6210\u5168\u5c40\u552f\u4e00Id\u6c47\u603b\u300b Twitter \u65b9\u6848\uff08Snowflake \u7b97\u6cd5\uff09\uff1a41\u4f4d\u65f6\u95f4\u6233+10\u4f4d\u673a\u5668\u6807\u8bc6\uff08\u6bd4\u5982IP\uff0c\u670d\u52a1\u5668\u540d\u79f0\u7b49\uff09+12\u4f4d\u5e8f\u5217\u53f7(\u672c\u5730\u8ba1\u6570\u5668) Flicker \u65b9\u6848\uff1aMySQL\u81ea\u589eID + \"REPLACE INTO XXX:SELECT LAST_INSERT_ID();\" UUID\uff1a\u7f3a\u70b9\uff0c\u65e0\u5e8f\uff0c\u5b57\u7b26\u4e32\u8fc7\u957f\uff0c\u5360\u7528\u7a7a\u95f4\uff0c\u5f71\u54cd\u68c0\u7d22\u6027\u80fd\u3002 MongoDB \u65b9\u6848\uff1a\u5229\u7528 ObjectId\u3002\u7f3a\u70b9\uff1a\u4e0d\u80fd\u81ea\u589e\u3002 \u300aTDDL \u5728\u5206\u5e03\u5f0f\u4e0b\u7684SEQUENCE\u539f\u7406\u300b \u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa sequence \u8868\uff0c\u7528\u4e8e\u8bb0\u5f55\uff0c\u5f53\u524d\u5df2\u88ab\u5360\u7528\u7684id\u6700\u5927\u503c\u3002 \u6bcf\u53f0\u5ba2\u6237\u7aef\u4e3b\u673a\u53d6\u4e00\u4e2aid\u533a\u95f4\uff08\u6bd4\u5982 1000~2000\uff09\u7f13\u5b58\u5728\u672c\u5730\uff0c\u5e76\u66f4\u65b0 sequence \u8868\u4e2d\u7684id\u6700\u5927\u503c\u8bb0\u5f55\u3002 \u5ba2\u6237\u7aef\u4e3b\u673a\u4e4b\u95f4\u53d6\u4e0d\u540c\u7684id\u533a\u95f4\uff0c\u7528\u5b8c\u518d\u53d6\uff0c\u4f7f\u7528\u4e50\u89c2\u9501\u673a\u5236\u63a7\u5236\u5e76\u53d1\u3002 \u9644\uff1a * \u4ec0\u4e48\u662fSnowflake\u7b97\u6cd5","title":"\u5168\u5c40\u552f\u4e00ID"},{"location":"blog/2022/a-disrupt-redis-queue/","tags":["Disrupt","Redis","Queue"],"text":"Fresno: A Disruptor + Redis Queue \u00b6 2022-05-02 16:07:27 \u67b6\u6784\u56fe \u00b6 \u6e90\u7801 \u00b6 \u79fb\u6b65\u81f3 https://github.com/twentwo/fresno \u7528\u6cd5 \u00b6 spring-boot application support Maven \u00b6 \u5f15\u5165Maven\u5305 <dependency> <groupId> io.yec </groupId> <artifactId> fresno-spring-boot-starter </artifactId> <version> ${fresno.version} </version> </dependency> EventHandler \u00b6 \u5b9a\u4e49 EventHandler @EventHandler public class OrderEventListener implements EventListener < Order > { @Resource private FooService fooService ; @Override public void onEvent ( EventQueue < Order > eventQueue , Event < Order > event ) { try { fooService . getOrder ( event . getObj ()); } catch ( Exception e ) { e . printStackTrace (); } } } EventQueueReference \u00b6 \u5f15\u7528 EventQueue @Service public class FooServiceImpl implements FooService { @EventQueueReference ( belongTo = OrderEventListener . class ) private EventQueue < Order > orderEventQueue ; @Override public void enQueueOrder ( Order order ) { log . info ( \"enQueueOrder :: {}\" , order ); orderEventQueue . enqueueToBack ( order ); } }","title":"Fresno: A Disruptor + Redis Queue"},{"location":"blog/2022/a-disrupt-redis-queue/#fresno-a-disruptor-redis-queue","text":"2022-05-02 16:07:27","title":"Fresno: A Disruptor + Redis Queue"},{"location":"blog/2022/a-disrupt-redis-queue/#_1","text":"","title":"\u67b6\u6784\u56fe"},{"location":"blog/2022/a-disrupt-redis-queue/#_2","text":"\u79fb\u6b65\u81f3 https://github.com/twentwo/fresno","title":"\u6e90\u7801"},{"location":"blog/2022/a-disrupt-redis-queue/#_3","text":"spring-boot application support","title":"\u7528\u6cd5"},{"location":"blog/2022/a-disrupt-redis-queue/#maven","text":"\u5f15\u5165Maven\u5305 <dependency> <groupId> io.yec </groupId> <artifactId> fresno-spring-boot-starter </artifactId> <version> ${fresno.version} </version> </dependency>","title":"Maven"},{"location":"blog/2022/a-disrupt-redis-queue/#eventhandler","text":"\u5b9a\u4e49 EventHandler @EventHandler public class OrderEventListener implements EventListener < Order > { @Resource private FooService fooService ; @Override public void onEvent ( EventQueue < Order > eventQueue , Event < Order > event ) { try { fooService . getOrder ( event . getObj ()); } catch ( Exception e ) { e . printStackTrace (); } } }","title":"EventHandler"},{"location":"blog/2022/a-disrupt-redis-queue/#eventqueuereference","text":"\u5f15\u7528 EventQueue @Service public class FooServiceImpl implements FooService { @EventQueueReference ( belongTo = OrderEventListener . class ) private EventQueue < Order > orderEventQueue ; @Override public void enQueueOrder ( Order order ) { log . info ( \"enQueueOrder :: {}\" , order ); orderEventQueue . enqueueToBack ( order ); } }","title":"EventQueueReference"},{"location":"blog/2022/a-strategy-route-framework/","tags":["Strategy","Router"],"text":"Wula: A Strategy Route Framework \u00b6 2022-07-11 11:18:27 https://github.com/twentwo/wula Usage \u00b6 spring-boot application support Maven \u00b6 maven dependency import <dependency> <groupId> io.yec </groupId> <artifactId> wula-spring-boot-starter </artifactId> <version> ${wula.version} </version> </dependency> Strategy Bean \u00b6 create different strategy bean with a logical component name @Slf4j @Component ( \"newOrderRouter\" ) public class NewOrderRouter implements IOrderRouter { @Override public void wula ( OrderEntity orderEntity ) { log . info ( \"NewOrderRouter = {}\" , orderEntity ); } } // ... bizRulesConfig \u00b6 define strategy route rules, support both: - bizRulesConfig .json - bizRulesConfig .yml [ { \"group\" : \"io.yec.wula.example.extpoint.IOrderRouter\" , \"def\" : [ { \"beanName\" : \"newOrderRouter\" , \"extEl\" : \"['businessType'] == 'NEW' && ['discounted'] == false && ['sellerId'] == '618'\" , \"desc\" : \"\u65b0\u54c1\" }, { \"beanName\" : \"normalOrderRouter\" , \"extEl\" : \"['businessType'] == 'NORMAL' && ['discounted'] == true \" , \"desc\" : \"\u666e\u54c1\" }, { \"beanName\" : \"defaultOrderRouter\" , \"extEl\" : \"['businessType'] == null\" , \"desc\" : \"\u9ed8\u8ba4\" } ] } ] or --- - group : io.yec.wula.example.extpoint.IOrderRouter def : - beanName : newOrderRouter extEl : \"['businessType'] == 'NEW' && ['discounted'] == false && ['sellerId'] == '618'\" desc : \u65b0\u54c1 - beanName : normalOrderRouter extEl : \"['businessType'] == 'NORMAL' && ['discounted'] == true\" desc : \u666e\u54c1 - beanName : defaultOrderRouter extEl : \"['businessType'] == null\" desc : \u9ed8\u8ba4 - group : io.yec.wula.example.extpoint.IPersonRouter def : - beanName : yellowRouter extEl : \"['raceEnum'] == 'YELLOW'\" desc : \u9ec4\u79cd\u4eba ExtensionExecutor \u00b6 strategy route executor usage @SpringBootApplication public class WulaApplication { public static void main ( String [] args ) { ConfigurableApplicationContext applicationContext = SpringApplication . run ( WulaApplication . class , args ); ExtensionExecutor extensionExecutor = applicationContext . getBean ( ExtensionExecutor . class ); OrderEntity newOrderEntity = OrderEntity . createNewOrderEntity (); extensionExecutor . executeVoid ( IOrderRouter . class , // match rule param IdentityParam . builder () . businessType ( newOrderEntity . getBusinessType ()) . discounted ( false ) . sellerId ( \"618\" ) . build (), orderRouter -> orderRouter . wula ( newOrderEntity )); } }","title":"Wula: A Strategy Route Framework"},{"location":"blog/2022/a-strategy-route-framework/#wula-a-strategy-route-framework","text":"2022-07-11 11:18:27 https://github.com/twentwo/wula","title":"Wula: A Strategy Route Framework"},{"location":"blog/2022/a-strategy-route-framework/#usage","text":"spring-boot application support","title":"Usage"},{"location":"blog/2022/a-strategy-route-framework/#maven","text":"maven dependency import <dependency> <groupId> io.yec </groupId> <artifactId> wula-spring-boot-starter </artifactId> <version> ${wula.version} </version> </dependency>","title":"Maven"},{"location":"blog/2022/a-strategy-route-framework/#strategy-bean","text":"create different strategy bean with a logical component name @Slf4j @Component ( \"newOrderRouter\" ) public class NewOrderRouter implements IOrderRouter { @Override public void wula ( OrderEntity orderEntity ) { log . info ( \"NewOrderRouter = {}\" , orderEntity ); } } // ...","title":"Strategy Bean"},{"location":"blog/2022/a-strategy-route-framework/#bizrulesconfig","text":"define strategy route rules, support both: - bizRulesConfig .json - bizRulesConfig .yml [ { \"group\" : \"io.yec.wula.example.extpoint.IOrderRouter\" , \"def\" : [ { \"beanName\" : \"newOrderRouter\" , \"extEl\" : \"['businessType'] == 'NEW' && ['discounted'] == false && ['sellerId'] == '618'\" , \"desc\" : \"\u65b0\u54c1\" }, { \"beanName\" : \"normalOrderRouter\" , \"extEl\" : \"['businessType'] == 'NORMAL' && ['discounted'] == true \" , \"desc\" : \"\u666e\u54c1\" }, { \"beanName\" : \"defaultOrderRouter\" , \"extEl\" : \"['businessType'] == null\" , \"desc\" : \"\u9ed8\u8ba4\" } ] } ] or --- - group : io.yec.wula.example.extpoint.IOrderRouter def : - beanName : newOrderRouter extEl : \"['businessType'] == 'NEW' && ['discounted'] == false && ['sellerId'] == '618'\" desc : \u65b0\u54c1 - beanName : normalOrderRouter extEl : \"['businessType'] == 'NORMAL' && ['discounted'] == true\" desc : \u666e\u54c1 - beanName : defaultOrderRouter extEl : \"['businessType'] == null\" desc : \u9ed8\u8ba4 - group : io.yec.wula.example.extpoint.IPersonRouter def : - beanName : yellowRouter extEl : \"['raceEnum'] == 'YELLOW'\" desc : \u9ec4\u79cd\u4eba","title":"bizRulesConfig"},{"location":"blog/2022/a-strategy-route-framework/#extensionexecutor","text":"strategy route executor usage @SpringBootApplication public class WulaApplication { public static void main ( String [] args ) { ConfigurableApplicationContext applicationContext = SpringApplication . run ( WulaApplication . class , args ); ExtensionExecutor extensionExecutor = applicationContext . getBean ( ExtensionExecutor . class ); OrderEntity newOrderEntity = OrderEntity . createNewOrderEntity (); extensionExecutor . executeVoid ( IOrderRouter . class , // match rule param IdentityParam . builder () . businessType ( newOrderEntity . getBusinessType ()) . discounted ( false ) . sellerId ( \"618\" ) . build (), orderRouter -> orderRouter . wula ( newOrderEntity )); } }","title":"ExtensionExecutor"}]}